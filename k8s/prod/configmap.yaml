apiVersion: v1
kind: ConfigMap
metadata:
  name: product-order-service-config
  namespace: prod
data:
  application.yml: |
    spring:
      profiles:
        active: prod
      
      datasource:
        url: jdbc:mysql://${DB_HOST:prod-mysql-cluster}:${DB_PORT:3306}/${DB_NAME:ecommerce_prod}
        driver-class-name: com.mysql.cj.jdbc.Driver
        username: ${DB_USERNAME}
        password: ${DB_PASSWORD}
        hikari:
          maximum-pool-size: 50
          minimum-idle: 10
          connection-timeout: 30000
          idle-timeout: 600000
          max-lifetime: 1800000
          leak-detection-threshold: 60000
          connection-test-query: SELECT 1
      
      jpa:
        hibernate:
          ddl-auto: validate
        show-sql: false
        properties:
          hibernate:
            format_sql: false
            dialect: org.hibernate.dialect.MySQL8Dialect
            jdbc:
              batch_size: 50
            order_inserts: true
            order_updates: true
            connection:
              provider_disables_autocommit: true
      
      cache:
        type: redis
        redis:
          time-to-live: 3600000
          cache-null-values: false
          enable-statistics: true
      
      data:
        redis:
          host: redis-prod
          port: 6379
          timeout: 2000ms
          lettuce:
            pool:
              max-active: 50
              max-idle: 20
              min-idle: 10
              max-wait: 2000ms
      
      kafka:
        bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
        consumer:
          group-id: product-order-service-prod
          auto-offset-reset: latest
          properties:
            session.timeout.ms: 30000
            heartbeat.interval.ms: 10000
            max.poll.records: 500
            fetch.min.bytes: 1
            fetch.max.wait.ms: 500
        producer:
          acks: all
          retries: 10
          batch-size: 32768
          linger-ms: 10
          buffer-memory: 67108864
          properties:
            max.in.flight.requests.per.connection: 1
            enable.idempotence: true
            compression.type: snappy
            delivery.timeout.ms: 120000
    
    server:
      port: 8080
      servlet:
        context-path: /api/v1
      tomcat:
        max-threads: 200
        min-spare-threads: 20
        max-connections: 8192
        accept-count: 100
        connection-timeout: 20000
    
    security:
      jwt:
        secret: ${JWT_SECRET}
        expiration: ${JWT_EXPIRATION:3600000}
    
    management:
      endpoints:
        web:
          exposure:
            include: health,info,metrics,prometheus
      endpoint:
        health:
          show-details: never
      metrics:
        export:
          prometheus:
            enabled: true
        distribution:
          percentiles-histogram:
            http.server.requests: true
          percentiles:
            http.server.requests: 0.5, 0.95, 0.99
    
    logging:
      level:
        com.ecommerce.productorder: INFO
        org.springframework.kafka: ERROR
        org.springframework.security: ERROR
        org.hibernate.SQL: ERROR
        org.hibernate.type.descriptor.sql.BasicBinder: ERROR
      pattern:
        console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
        file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
      file:
        name: /app/logs/product-order-service-prod.log
        max-size: 500MB
        max-history: 60
      logback:
        rollingpolicy:
          clean-history-on-start: true
    
    app:
      environment: prod
      debug: false
      mock-services: false
