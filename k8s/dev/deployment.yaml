apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-order-service
  namespace: dev
  labels:
    app: product-order-service
    environment: dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: product-order-service
  template:
    metadata:
      labels:
        app: product-order-service
        environment: dev
    spec:
      containers:
      - name: product-order-service
        image: your-docker-registry.com/product-order-service:latest-dev
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "dev"
        - name: JVM_OPTS
          value: "-Xmx512m -Xms256m"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: product-order-service-secret
              key: redis-password
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: config-volume
        configMap:
          name: product-order-service-config
---
apiVersion: v1
kind: Service
metadata:
  name: product-order-service
  namespace: dev
  labels:
    app: product-order-service
spec:
  selector:
    app: product-order-service
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: product-order-service-ingress
  namespace: dev
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: product-order-service-dev.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: product-order-service
            port:
              number: 8080
