# Development Environment Configuration
# Product Order Service - Development Settings

spring:
  profiles:
    active: dev
  
  # Database Configuration
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # H2 Database Console
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  # Redis Configuration
  redis:
    host: localhost
    port: 6379
    password: 
    database: 0
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms

  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: product-order-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  # Security Configuration
  security:
    jwt:
      secret: dev-secret-key-very-long-and-secure-for-development-only
      expiration: 86400000 # 24 hours

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /product-order-service
  tomcat:
    max-threads: 200
    min-spare-threads: 10

# Logging Configuration
logging:
  level:
    com.ecommerce.productorder: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/product-order-service.log
    max-size: 10MB
    max-history: 30

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# AWS S3 Configuration (Development)
aws:
  s3:
    bucket-name: ${S3_BUCKET:my-pos-bucket-125}
    region: ${S3_REGION:ap-south-1}
    access-key: ${AWS_ACCESS_KEY_ID:}
    secret-key: ${AWS_SECRET_ACCESS_KEY:}

# Application Configuration
app:
  name: Product Order Service
  version: 1.0.0
  environment: development
  
  # Feature Flags
  features:
    invoice-generation: true
    payment-processing: true
    notification-service: true
    inventory-service: true

# Swagger Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
    tryItOutEnabled: true
