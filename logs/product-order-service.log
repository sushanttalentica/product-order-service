2025-10-06 00:08:37 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 00:08:37 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 00:08:37 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 00:08:38 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:08:38 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:08:37 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 00:08:38 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:08:38 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:08:38 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 00:08:38 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 00:08:38 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 00:08:38 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 00:08:38 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:08:38 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:08:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:08:38 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:26:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 00:26:18 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 00:26:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 00:26:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 00:26:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 18983 due to node 1 being disconnected (elapsed time since creation: 1055842ms, elapsed time since send: 1055842ms, request timeout: 30000ms)
2025-10-06 00:26:18 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 18988 due to node 1 being disconnected (elapsed time since creation: 1055841ms, elapsed time since send: 1055840ms, request timeout: 30000ms)
2025-10-06 00:26:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 18989 due to node 1 being disconnected (elapsed time since creation: 1055841ms, elapsed time since send: 1055841ms, request timeout: 30000ms)
2025-10-06 00:26:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 18992 due to node 1 being disconnected (elapsed time since creation: 1055839ms, elapsed time since send: 1055839ms, request timeout: 30000ms)
2025-10-06 00:26:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 00:26:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:26:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 00:26:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:26:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 00:26:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:26:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 00:26:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:26:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 00:26:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 00:26:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 00:26:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 00:26:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Error sending fetch request (sessionId=79086698, epoch=2475) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 00:26:18 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Error sending fetch request (sessionId=2081414594, epoch=2475) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 00:26:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Error sending fetch request (sessionId=1638102952, epoch=2475) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 00:26:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Error sending fetch request (sessionId=1349907881, epoch=2475) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 00:26:19 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:26:19 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:26:19 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:26:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:41:39 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 00:41:39 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:41:39 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 00:41:39 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:41:39 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 00:41:39 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:41:39 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 00:41:39 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 00:41:39 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 00:41:39 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:41:39 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 00:41:39 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 00:41:39 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:41:39 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:41:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:41:39 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:57:26 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 00:57:26 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 00:57:26 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:57:26 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 00:57:26 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:57:26 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:57:26 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 00:57:26 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:57:26 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 00:57:26 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 00:57:26 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 00:57:26 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 00:57:26 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:57:26 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:57:26 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 00:57:26 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:57:26 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 00:57:26 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:57:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:57:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 00:57:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:57:26 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:57:26 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 00:57:26 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:57:26 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:57:26 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 00:57:29 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h4m14s462ms).
2025-10-06 01:08:03 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 01:08:03 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 01:08:03 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19031 due to node 1 being disconnected (elapsed time since creation: 631976ms, elapsed time since send: 631976ms, request timeout: 30000ms)
2025-10-06 01:08:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 01:08:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19032 due to node 1 being disconnected (elapsed time since creation: 631976ms, elapsed time since send: 631976ms, request timeout: 30000ms)
2025-10-06 01:08:03 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:08:03 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:08:03 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 01:08:03 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:08:03 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:08:03 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 01:08:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 01:08:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19026 due to node 1 being disconnected (elapsed time since creation: 631979ms, elapsed time since send: 631979ms, request timeout: 30000ms)
2025-10-06 01:08:03 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:08:03 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:08:03 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 01:08:03 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Error sending fetch request (sessionId=534701787, epoch=25) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 01:08:03 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19035 due to node 1 being disconnected (elapsed time since creation: 631976ms, elapsed time since send: 631976ms, request timeout: 30000ms)
2025-10-06 01:08:03 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Error sending fetch request (sessionId=1198931963, epoch=25) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 01:08:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Error sending fetch request (sessionId=973828243, epoch=25) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 01:08:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Error sending fetch request (sessionId=658073583, epoch=25) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 01:08:03 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:08:03 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:08:03 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 01:08:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:08:03 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:08:03 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:08:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:25:56 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 01:25:56 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 01:25:56 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 01:25:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 01:25:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19076 due to node 1 being disconnected (elapsed time since creation: 1053436ms, elapsed time since send: 1053436ms, request timeout: 30000ms)
2025-10-06 01:25:56 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19075 due to node 1 being disconnected (elapsed time since creation: 1053436ms, elapsed time since send: 1053436ms, request timeout: 30000ms)
2025-10-06 01:25:56 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19079 due to node 1 being disconnected (elapsed time since creation: 1053436ms, elapsed time since send: 1053435ms, request timeout: 30000ms)
2025-10-06 01:25:56 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19070 due to node 1 being disconnected (elapsed time since creation: 1053436ms, elapsed time since send: 1053436ms, request timeout: 30000ms)
2025-10-06 01:25:56 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Error sending fetch request (sessionId=1770306006, epoch=32) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 01:25:56 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Error sending fetch request (sessionId=2076739760, epoch=32) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 01:25:56 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:25:56 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Error sending fetch request (sessionId=111243695, epoch=32) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 01:25:56 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:25:56 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:25:56 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:25:56 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:25:56 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 01:25:56 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 01:25:56 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:25:56 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 01:25:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Error sending fetch request (sessionId=1444936557, epoch=32) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 01:25:56 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:25:56 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:25:56 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 01:25:56 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:25:56 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:25:56 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:25:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:29:49 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:29:49 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:29:49 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 01:29:49 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:29:49 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:29:49 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:29:49 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:29:49 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:29:49 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:29:49 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:29:49 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:29:49 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 01:29:49 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:29:49 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 01:29:49 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 01:29:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:29:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:29:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:29:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:29:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:29:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:29:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:29:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:29:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:29:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:29:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:29:49 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:29:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:29:51 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=32m21s974ms).
2025-10-06 01:46:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 01:46:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 01:46:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 01:46:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 01:46:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19163 due to node 1 being disconnected (elapsed time since creation: 976792ms, elapsed time since send: 976792ms, request timeout: 30000ms)
2025-10-06 01:46:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19164 due to node 1 being disconnected (elapsed time since creation: 976791ms, elapsed time since send: 976791ms, request timeout: 30000ms)
2025-10-06 01:46:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19158 due to node 1 being disconnected (elapsed time since creation: 976793ms, elapsed time since send: 976793ms, request timeout: 30000ms)
2025-10-06 01:46:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19167 due to node 1 being disconnected (elapsed time since creation: 976792ms, elapsed time since send: 976792ms, request timeout: 30000ms)
2025-10-06 01:46:40 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:46:40 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:46:40 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:46:40 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:46:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Error sending fetch request (sessionId=466358218, epoch=66) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 01:46:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Error sending fetch request (sessionId=1230282615, epoch=66) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 01:46:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Error sending fetch request (sessionId=574660335, epoch=66) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 01:46:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Error sending fetch request (sessionId=842903547, epoch=66) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 01:46:40 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:46:40 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 01:46:40 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:46:40 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:46:40 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 01:46:40 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 01:46:40 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:46:40 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 01:46:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:46:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:46:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:46:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:46:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:46:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:46:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:54:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:54:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:54:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:54:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:54:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:54:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 01:54:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 01:54:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:54:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 01:54:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:54:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:54:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 01:54:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:54:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:54:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:54:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:54:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:54:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:54:18 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:54:18 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:54:18 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:54:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:54:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 01:54:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:54:19 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:54:19 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:54:19 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 01:54:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:09:36 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:09:36 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:09:36 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 02:09:36 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:09:36 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:09:36 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 02:09:36 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:09:36 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:09:36 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 02:09:36 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:09:36 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:09:36 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 02:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:09:36 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:19:52 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:19:52 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:19:52 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:19:52 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:19:52 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:19:52 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:19:52 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:19:52 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:19:52 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 02:19:52 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 02:19:52 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 02:19:52 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 02:19:52 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:19:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:19:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:19:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:19:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:19:52 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:19:52 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:19:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:19:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:19:52 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:19:52 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:19:52 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:19:52 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:19:52 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:19:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:19:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:19:53 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=49m31s942ms).
2025-10-06 02:36:09 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:36:09 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:36:09 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:36:09 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:36:09 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:36:09 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:36:09 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:36:09 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:36:09 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 02:36:09 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 02:36:09 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 02:36:09 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 02:36:09 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:36:09 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:36:09 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:36:09 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:36:09 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:36:09 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:36:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:36:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:36:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:36:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:36:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:36:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:36:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:36:10 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:36:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:36:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:52:10 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 02:52:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 02:52:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 02:52:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 02:52:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19303 due to node 1 being disconnected (elapsed time since creation: 956388ms, elapsed time since send: 956388ms, request timeout: 30000ms)
2025-10-06 02:52:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19312 due to node 1 being disconnected (elapsed time since creation: 956388ms, elapsed time since send: 956388ms, request timeout: 30000ms)
2025-10-06 02:52:10 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19308 due to node 1 being disconnected (elapsed time since creation: 956388ms, elapsed time since send: 956388ms, request timeout: 30000ms)
2025-10-06 02:52:10 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:52:10 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:52:10 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:52:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19310 due to node 1 being disconnected (elapsed time since creation: 956388ms, elapsed time since send: 956388ms, request timeout: 30000ms)
2025-10-06 02:52:10 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:52:10 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:52:10 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 02:52:10 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 02:52:10 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:52:10 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:52:10 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 02:52:10 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:52:10 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 02:52:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Error sending fetch request (sessionId=1479047083, epoch=101) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 02:52:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Error sending fetch request (sessionId=1759724387, epoch=101) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 02:52:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Error sending fetch request (sessionId=26646547, epoch=101) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 02:52:10 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Error sending fetch request (sessionId=2078519537, epoch=101) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 02:52:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:52:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:52:10 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:52:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:55:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:55:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:55:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:55:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:55:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:55:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:55:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 02:55:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 02:55:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 02:55:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:55:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:55:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 02:55:18 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:55:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:55:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:55:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:55:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:55:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:55:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:55:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:55:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 02:55:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:55:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:55:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 02:55:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:11:27 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 03:11:27 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 03:11:27 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 03:11:27 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:11:27 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:11:27 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 03:11:27 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:11:27 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:11:27 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 03:11:27 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 03:11:27 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 03:11:27 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 03:11:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:11:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:11:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:11:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:11:31 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=51m8s578ms).
2025-10-06 03:27:19 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 03:27:19 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 03:27:19 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:27:19 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 03:27:19 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 03:27:19 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 03:27:19 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:27:19 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 03:27:19 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:27:19 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:27:19 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 03:27:19 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 03:27:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:27:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 03:27:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:27:19 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:27:19 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 03:27:19 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:27:19 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:27:19 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 03:27:19 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:27:19 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:27:19 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 03:27:19 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:27:19 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:27:19 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:27:19 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:27:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:43:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 03:43:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19385 due to node 1 being disconnected (elapsed time since creation: 973312ms, elapsed time since send: 973312ms, request timeout: 30000ms)
2025-10-06 03:43:37 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 03:43:37 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19378 due to node 1 being disconnected (elapsed time since creation: 973311ms, elapsed time since send: 973311ms, request timeout: 30000ms)
2025-10-06 03:43:37 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 03:43:37 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19387 due to node 1 being disconnected (elapsed time since creation: 973312ms, elapsed time since send: 973312ms, request timeout: 30000ms)
2025-10-06 03:43:37 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 03:43:37 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:43:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Error sending fetch request (sessionId=627159351, epoch=49) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 03:43:37 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Error sending fetch request (sessionId=846697785, epoch=49) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 03:43:37 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 03:43:37 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:43:37 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 03:43:37 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 03:43:37 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19382 due to node 1 being disconnected (elapsed time since creation: 973312ms, elapsed time since send: 973312ms, request timeout: 30000ms)
2025-10-06 03:43:37 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Error sending fetch request (sessionId=1203228895, epoch=49) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 03:43:37 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Error sending fetch request (sessionId=294068080, epoch=49) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 03:43:37 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 03:43:37 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 03:43:37 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 03:43:37 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:43:37 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 03:43:37 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:43:37 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 03:43:37 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:43:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:43:37 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:43:37 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:56:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 03:56:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 03:56:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 03:56:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 03:56:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:56:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:56:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 03:56:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:56:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:56:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 03:56:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 03:56:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 03:56:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:56:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:56:18 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:56:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 03:56:36 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=45m5s38ms).
2025-10-06 04:12:26 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:12:26 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:12:26 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:12:26 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:12:26 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:12:26 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:12:26 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:12:26 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:12:26 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 04:12:26 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 04:12:26 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 04:12:26 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:12:26 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:12:26 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:12:26 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:12:26 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 04:12:26 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:12:26 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:12:26 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:12:26 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:12:26 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:12:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:12:26 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:12:26 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:12:26 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:27:30 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:27:30 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:27:30 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:27:30 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:27:30 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:27:30 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:27:30 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:27:30 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 04:27:30 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 04:27:30 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:27:30 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 04:27:30 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 04:27:30 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:27:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:27:30 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:27:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:27:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:27:30 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:27:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:27:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:27:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:27:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:27:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:27:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:27:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:27:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:27:30 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:27:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19468 due to node 1 being disconnected (elapsed time since creation: 591410ms, elapsed time since send: 591410ms, request timeout: 30000ms)
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19477 due to node 1 being disconnected (elapsed time since creation: 591410ms, elapsed time since send: 591410ms, request timeout: 30000ms)
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Error sending fetch request (sessionId=2070841689, epoch=60) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Error sending fetch request (sessionId=75663753, epoch=60) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 04:37:26 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:37:26 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:37:26 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:37:26 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:37:26 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 04:37:26 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19475 due to node 1 being disconnected (elapsed time since creation: 591410ms, elapsed time since send: 591410ms, request timeout: 30000ms)
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19472 due to node 1 being disconnected (elapsed time since creation: 591410ms, elapsed time since send: 591410ms, request timeout: 30000ms)
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Error sending fetch request (sessionId=1629322634, epoch=60) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Error sending fetch request (sessionId=1509165250, epoch=60) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 04:37:26 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:37:26 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:37:26 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 04:37:26 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:37:26 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:37:26 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:37:26 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:52:50 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:52:50 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:52:50 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:52:50 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:52:50 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 04:52:50 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 04:52:50 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:52:50 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:52:50 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 04:52:50 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:52:50 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:52:50 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 04:52:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:52:50 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:52:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:52:50 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:52:50 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:52:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:52:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:52:50 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:52:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:52:50 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:52:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:52:50 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:52:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:52:50 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:52:50 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:52:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:52:54 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=56m17s657ms).
2025-10-06 04:57:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 04:57:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19522 due to node 1 being disconnected (elapsed time since creation: 262967ms, elapsed time since send: 262967ms, request timeout: 30000ms)
2025-10-06 04:57:18 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 04:57:18 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19516 due to node 1 being disconnected (elapsed time since creation: 262967ms, elapsed time since send: 262967ms, request timeout: 30000ms)
2025-10-06 04:57:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 04:57:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19519 due to node 1 being disconnected (elapsed time since creation: 262968ms, elapsed time since send: 262968ms, request timeout: 30000ms)
2025-10-06 04:57:18 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Error sending fetch request (sessionId=475550179, epoch=28) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 04:57:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 04:57:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19513 due to node 1 being disconnected (elapsed time since creation: 262968ms, elapsed time since send: 262968ms, request timeout: 30000ms)
2025-10-06 04:57:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Error sending fetch request (sessionId=1025946792, epoch=28) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 04:57:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:57:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:57:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 04:57:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:57:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:57:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 04:57:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:57:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:57:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 04:57:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:57:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:57:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Error sending fetch request (sessionId=566912448, epoch=28) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 04:57:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 04:57:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Error sending fetch request (sessionId=1332998284, epoch=28) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 04:57:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:57:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:57:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 04:57:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:57:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:57:18 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 04:57:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:14:12 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:14:12 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:14:12 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:14:12 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:14:12 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:14:12 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 05:14:12 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:14:12 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:14:12 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 05:14:12 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 05:14:12 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:14:12 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 05:14:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:14:12 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:14:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:14:12 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:31:31 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:31:31 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:31:31 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:31:31 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:31:31 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:31:31 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:31:31 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:31:31 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:31:31 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 05:31:31 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 05:31:31 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 05:31:31 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 05:31:31 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:31:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:31:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:31:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:31:31 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:31:31 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:31:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:31:31 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:31:31 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:31:31 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:31:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:31:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:31:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:31:31 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:31:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:31:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:31:31 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 05:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 05:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 05:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 05:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19572 due to node 1 being disconnected (elapsed time since creation: 1032981ms, elapsed time since send: 1032981ms, request timeout: 30000ms)
2025-10-06 05:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19563 due to node 1 being disconnected (elapsed time since creation: 1032983ms, elapsed time since send: 1032983ms, request timeout: 30000ms)
2025-10-06 05:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19566 due to node 1 being disconnected (elapsed time since creation: 1032982ms, elapsed time since send: 1032982ms, request timeout: 30000ms)
2025-10-06 05:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19571 due to node 1 being disconnected (elapsed time since creation: 1032982ms, elapsed time since send: 1032982ms, request timeout: 30000ms)
2025-10-06 05:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Error sending fetch request (sessionId=1397378826, epoch=31) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 05:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Error sending fetch request (sessionId=109722847, epoch=31) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 05:48:49 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:48:49 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:48:49 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:48:49 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:48:49 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:48:49 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Error sending fetch request (sessionId=1804816088, epoch=31) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 05:48:49 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:48:49 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:48:49 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 05:48:49 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 05:48:49 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 05:48:49 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 05:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Error sending fetch request (sessionId=1991871370, epoch=31) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 05:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:58:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:58:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:58:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:58:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:58:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:58:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:58:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:58:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:58:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 05:58:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 05:58:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 05:58:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 05:58:18 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:58:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:58:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:58:18 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:58:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:58:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:58:18 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:58:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:58:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:58:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:58:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 05:58:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:58:18 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:58:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:58:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:58:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 05:58:22 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h5m28s130ms).
2025-10-06 06:13:54 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:13:54 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:13:54 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:13:54 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:13:54 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:13:54 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 06:13:54 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 06:13:54 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:13:54 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:13:54 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 06:13:54 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:13:54 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 06:13:54 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:13:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:13:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:13:54 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:13:56 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m33s693ms).
2025-10-06 06:29:50 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:29:50 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:29:50 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:29:50 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:29:50 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:29:50 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:29:50 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:29:50 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 06:29:50 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 06:29:50 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:29:50 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 06:29:50 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 06:29:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:29:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:29:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:29:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:29:50 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:29:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:29:50 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:29:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:29:50 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:29:50 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:29:50 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:29:50 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:29:50 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:29:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:29:50 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:29:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:29:50 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:45:33 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:45:33 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:45:33 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:45:33 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 06:45:33 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:45:33 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:45:33 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 06:45:33 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:45:33 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 06:45:33 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:45:33 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:45:33 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 06:45:33 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:45:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:45:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:45:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:45:33 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:45:33 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:45:33 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:45:33 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:45:33 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:45:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:45:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:45:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:45:33 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:45:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:45:33 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:45:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:59:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 06:59:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 06:59:18 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 06:59:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 06:59:18 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19692 due to node 1 being disconnected (elapsed time since creation: 820366ms, elapsed time since send: 820366ms, request timeout: 30000ms)
2025-10-06 06:59:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19690 due to node 1 being disconnected (elapsed time since creation: 820343ms, elapsed time since send: 820343ms, request timeout: 30000ms)
2025-10-06 06:59:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19697 due to node 1 being disconnected (elapsed time since creation: 820339ms, elapsed time since send: 820339ms, request timeout: 30000ms)
2025-10-06 06:59:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19698 due to node 1 being disconnected (elapsed time since creation: 820341ms, elapsed time since send: 820341ms, request timeout: 30000ms)
2025-10-06 06:59:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:59:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:59:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:59:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:59:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 06:59:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:59:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 06:59:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 06:59:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:59:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 06:59:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:59:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 06:59:18 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Error sending fetch request (sessionId=1105191992, epoch=87) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 06:59:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Error sending fetch request (sessionId=872205856, epoch=87) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 06:59:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Error sending fetch request (sessionId=298836684, epoch=87) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 06:59:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Error sending fetch request (sessionId=565688617, epoch=87) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 06:59:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:59:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:59:18 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:59:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 06:59:34 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=45m38s4ms).
2025-10-06 07:15:25 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 07:15:25 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 07:15:25 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:15:25 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 07:15:25 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 07:15:25 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:15:25 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:15:25 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 07:15:25 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:15:25 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 07:15:25 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 07:15:25 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 07:15:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:15:25 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:15:25 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:15:25 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 07:15:25 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:15:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:15:25 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:31:23 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 07:31:23 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 07:31:23 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:31:23 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:31:23 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 07:31:23 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:31:23 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 07:31:23 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 07:31:23 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 07:31:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:31:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 07:31:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:31:23 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:31:23 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 07:31:23 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:31:23 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:31:23 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:31:23 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 07:31:23 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:31:23 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:31:23 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:31:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:31:23 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 07:31:23 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:31:23 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 07:31:23 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:31:23 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 07:31:23 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:31:23 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:47:50 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 07:47:50 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19763 due to node 1 being disconnected (elapsed time since creation: 982256ms, elapsed time since send: 982256ms, request timeout: 30000ms)
2025-10-06 07:47:50 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Error sending fetch request (sessionId=1804966633, epoch=47) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 07:47:50 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 07:47:50 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:47:50 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 07:47:50 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:47:50 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 07:47:50 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 07:47:50 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:47:50 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 07:47:50 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 07:47:50 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:47:50 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 07:47:50 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:47:50 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 07:47:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:47:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 07:47:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:47:50 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:47:50 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 07:47:50 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:47:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:47:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 07:47:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:47:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:47:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 07:47:50 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:00:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 08:00:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 08:00:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 08:00:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19776 due to node 1 being disconnected (elapsed time since creation: 742894ms, elapsed time since send: 742894ms, request timeout: 30000ms)
2025-10-06 08:00:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:00:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:00:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 08:00:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Error sending fetch request (sessionId=142889570, epoch=57) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 08:00:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19783 due to node 1 being disconnected (elapsed time since creation: 742894ms, elapsed time since send: 742894ms, request timeout: 30000ms)
2025-10-06 08:00:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19785 due to node 1 being disconnected (elapsed time since creation: 742894ms, elapsed time since send: 742894ms, request timeout: 30000ms)
2025-10-06 08:00:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:00:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:00:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 08:00:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Error sending fetch request (sessionId=2086078756, epoch=57) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 08:00:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Error sending fetch request (sessionId=1492993943, epoch=57) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 08:00:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:00:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:00:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 08:00:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:00:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:00:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 08:00:18 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:00:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:00:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:00:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:00:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:00:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:00:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:18:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 08:18:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19806 due to node 1 being disconnected (elapsed time since creation: 1067359ms, elapsed time since send: 1067359ms, request timeout: 30000ms)
2025-10-06 08:18:14 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:18:14 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:18:14 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 08:18:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Error sending fetch request (sessionId=1114311168, epoch=14) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 08:18:14 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:18:14 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:18:14 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 08:18:14 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:18:14 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:18:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:18:14 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:18:14 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:18:14 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 08:18:14 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 08:18:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:18:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:18:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:18:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:18:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:18:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:18:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:18:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:18:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:18:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:18:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:18:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:18:15 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h18m41s523ms).
2025-10-06 08:34:45 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:34:45 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:34:45 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:34:45 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:34:45 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:34:45 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 08:34:45 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 08:34:45 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:34:45 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:34:45 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 08:34:45 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:34:45 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 08:34:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:34:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:34:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:34:45 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:34:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:34:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:34:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:34:45 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:34:45 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:34:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:34:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:34:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:34:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:34:45 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:34:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:34:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19836 due to node 1 being disconnected (elapsed time since creation: 906979ms, elapsed time since send: 906979ms, request timeout: 30000ms)
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19832 due to node 1 being disconnected (elapsed time since creation: 906979ms, elapsed time since send: 906979ms, request timeout: 30000ms)
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19839 due to node 1 being disconnected (elapsed time since creation: 906980ms, elapsed time since send: 906980ms, request timeout: 30000ms)
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19830 due to node 1 being disconnected (elapsed time since creation: 906981ms, elapsed time since send: 906981ms, request timeout: 30000ms)
2025-10-06 08:49:57 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:49:57 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Error sending fetch request (sessionId=819889443, epoch=33) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 08:49:57 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Error sending fetch request (sessionId=456964614, epoch=42) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Error sending fetch request (sessionId=1544877612, epoch=17) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Error sending fetch request (sessionId=624903009, epoch=33) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 08:49:57 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:49:57 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:49:57 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 08:49:57 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:49:57 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:49:57 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:49:57 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 08:49:57 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:49:57 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 08:49:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:01:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:01:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:01:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:01:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:01:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:01:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:01:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 09:01:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 09:01:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:01:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:01:18 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 09:01:18 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 09:01:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:01:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:01:18 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:01:18 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:18:12 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:18:12 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:18:12 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:18:12 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:18:12 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:18:12 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:18:12 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:18:12 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 09:18:12 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:18:12 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 09:18:12 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 09:18:12 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 09:18:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:18:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:18:12 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:18:12 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:34:12 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:34:12 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:34:12 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:34:12 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:34:12 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 09:34:12 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:34:12 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:34:12 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:34:12 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 09:34:12 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:34:12 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 09:34:12 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 09:34:12 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:34:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:34:12 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:34:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:34:12 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:34:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:34:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:34:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:34:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:34:12 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:34:12 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:34:12 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:34:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:34:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:34:12 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:34:12 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:34:13 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h15m57s745ms).
2025-10-06 09:49:14 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:49:14 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:49:14 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:49:14 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:49:14 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:49:14 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:49:14 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:49:14 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 09:49:14 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:49:14 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 09:49:14 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 09:49:14 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 09:49:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:49:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:49:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:49:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:49:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:49:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:49:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:49:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:49:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:49:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 09:49:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:49:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:49:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:49:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:49:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 09:49:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19918 due to node 1 being disconnected (elapsed time since creation: 770894ms, elapsed time since send: 770894ms, request timeout: 30000ms)
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19909 due to node 1 being disconnected (elapsed time since creation: 770894ms, elapsed time since send: 770894ms, request timeout: 30000ms)
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19911 due to node 1 being disconnected (elapsed time since creation: 770894ms, elapsed time since send: 770894ms, request timeout: 30000ms)
2025-10-06 10:02:10 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:02:10 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19915 due to node 1 being disconnected (elapsed time since creation: 770894ms, elapsed time since send: 770894ms, request timeout: 30000ms)
2025-10-06 10:02:10 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 10:02:10 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:02:10 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:02:10 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 10:02:10 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:02:10 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:02:10 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 10:02:10 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:02:10 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Error sending fetch request (sessionId=1780422998, epoch=48) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Error sending fetch request (sessionId=100060464, epoch=48) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Error sending fetch request (sessionId=531142273, epoch=48) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 10:02:10 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Error sending fetch request (sessionId=1999249177, epoch=48) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:02:10 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:17:51 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:17:51 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:17:51 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:17:51 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:17:51 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:17:51 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:17:51 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:17:51 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:17:51 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 10:17:51 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 10:17:51 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 10:17:51 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 10:17:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:17:51 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:17:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:17:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:17:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:17:51 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:17:51 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:17:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:17:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:17:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:17:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:17:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:17:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:17:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:17:51 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:17:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:33:52 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 10:33:52 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 10:33:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 10:33:52 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19955 due to node 1 being disconnected (elapsed time since creation: 955965ms, elapsed time since send: 955965ms, request timeout: 30000ms)
2025-10-06 10:33:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 10:33:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19952 due to node 1 being disconnected (elapsed time since creation: 955966ms, elapsed time since send: 955966ms, request timeout: 30000ms)
2025-10-06 10:33:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 19946 due to node 1 being disconnected (elapsed time since creation: 955966ms, elapsed time since send: 955966ms, request timeout: 30000ms)
2025-10-06 10:33:52 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 19948 due to node 1 being disconnected (elapsed time since creation: 955966ms, elapsed time since send: 955966ms, request timeout: 30000ms)
2025-10-06 10:33:52 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Error sending fetch request (sessionId=1551868084, epoch=22) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 10:33:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Error sending fetch request (sessionId=1301019623, epoch=22) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 10:33:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Error sending fetch request (sessionId=953049085, epoch=22) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 10:33:52 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:33:52 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Error sending fetch request (sessionId=632219881, epoch=22) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 10:33:52 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:33:52 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:33:52 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:33:52 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:33:52 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:33:52 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 10:33:52 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 10:33:52 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:33:52 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 10:33:52 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:33:52 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 10:33:52 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:33:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:33:52 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:33:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:34:29 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h15s519ms).
2025-10-06 10:51:03 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:51:03 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:51:03 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:51:03 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:51:03 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 10:51:03 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 10:51:03 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:51:03 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:51:03 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 10:51:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:51:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:51:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:51:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:51:03 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:51:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 10:51:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:51:03 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:51:03 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 10:51:03 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:51:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:51:03 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 10:51:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:03:10 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 11:03:10 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 11:03:10 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 11:03:10 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:03:10 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 11:03:10 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:03:10 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 11:03:10 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 11:03:10 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:03:10 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 11:03:10 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:03:10 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 11:03:10 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:03:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:03:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:03:10 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 11:03:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 11:03:10 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:03:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:03:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:03:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:03:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 11:03:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:03:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 11:03:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:03:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:03:10 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:03:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:03:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:03:37 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=29m8s458ms).
2025-10-06 11:11:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 11:11:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 11:11:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 20043 due to node 1 being disconnected (elapsed time since creation: 455127ms, elapsed time since send: 455127ms, request timeout: 30000ms)
2025-10-06 11:11:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 11:11:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 20038 due to node 1 being disconnected (elapsed time since creation: 455126ms, elapsed time since send: 455126ms, request timeout: 30000ms)
2025-10-06 11:11:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Disconnecting from node 1 due to request timeout.
2025-10-06 11:11:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Error sending fetch request (sessionId=14907783, epoch=64) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 11:11:14 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 11:11:14 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:11:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Error sending fetch request (sessionId=506539808, epoch=64) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 11:11:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 20046 due to node 1 being disconnected (elapsed time since creation: 455126ms, elapsed time since send: 455126ms, request timeout: 30000ms)
2025-10-06 11:11:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Cancelled in-flight FETCH request with correlation id 20037 due to node 1 being disconnected (elapsed time since creation: 455127ms, elapsed time since send: 455127ms, request timeout: 30000ms)
2025-10-06 11:11:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Error sending fetch request (sessionId=1925991581, epoch=64) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 11:11:14 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 11:11:14 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 11:11:14 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:11:14 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 11:11:14 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:11:14 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 11:11:14 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 11:11:14 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:11:14 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 11:11:14 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 11:11:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Error sending fetch request (sessionId=1759444873, epoch=64) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 11:11:15 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:11:15 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:11:15 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:11:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 11:11:41 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=8m4s380ms).
2025-10-06 11:14:41 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/v1/products/categories
2025-10-06 11:14:42 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 11:14:42 [http-nio-8080-exec-9] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 11:14:42 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 11:14:42 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/v1/products/categories
2025-10-06 11:14:42 [http-nio-8080-exec-9] DEBUG c.e.p.controller.CategoryController - Retrieving all categories
2025-10-06 11:36:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/query.do?jsessionid=1349b11f86502bdaba90392653c8519c
2025-10-06 11:36:41 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:41 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/query.do?jsessionid=1349b11f86502bdaba90392653c8519c
2025-10-06 11:36:41 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/stylesheet.css
2025-10-06 11:36:41 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:41 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:41 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/stylesheet.css
2025-10-06 11:36:41 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/login.jsp?jsessionid=619ce84e86ca657732e7eb2764ae5ed6
2025-10-06 11:36:41 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:41 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:41 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/login.jsp?jsessionid=619ce84e86ca657732e7eb2764ae5ed6
2025-10-06 11:36:41 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/login.jsp
2025-10-06 11:36:41 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:41 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:41 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/login.jsp
2025-10-06 11:36:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/background.gif
2025-10-06 11:36:41 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:41 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/background.gif
2025-10-06 11:36:41 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/login.jsp?jsessionid=6bf6927771d2d2e3c52d9c4747ed2188
2025-10-06 11:36:41 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:41 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:41 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/login.jsp?jsessionid=6bf6927771d2d2e3c52d9c4747ed2188
2025-10-06 11:36:46 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/login.do?jsessionid=6bf6927771d2d2e3c52d9c4747ed2188
2025-10-06 11:36:46 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:46 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/login.do?jsessionid=6bf6927771d2d2e3c52d9c4747ed2188
2025-10-06 11:36:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/header.jsp?jsessionid=6bf6927771d2d2e3c52d9c4747ed2188
2025-10-06 11:36:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/query.jsp?jsessionid=6bf6927771d2d2e3c52d9c4747ed2188
2025-10-06 11:36:47 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/help.jsp?jsessionid=6bf6927771d2d2e3c52d9c4747ed2188
2025-10-06 11:36:47 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tables.do?jsessionid=6bf6927771d2d2e3c52d9c4747ed2188
2025-10-06 11:36:47 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/query.jsp?jsessionid=6bf6927771d2d2e3c52d9c4747ed2188
2025-10-06 11:36:47 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/help.jsp?jsessionid=6bf6927771d2d2e3c52d9c4747ed2188
2025-10-06 11:36:47 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tables.do?jsessionid=6bf6927771d2d2e3c52d9c4747ed2188
2025-10-06 11:36:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/header.jsp?jsessionid=6bf6927771d2d2e3c52d9c4747ed2188
2025-10-06 11:36:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_history.gif
2025-10-06 11:36:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_help.gif
2025-10-06 11:36:47 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_history.gif
2025-10-06 11:36:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_help.gif
2025-10-06 11:36:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_disconnect.gif
2025-10-06 11:36:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_line.gif
2025-10-06 11:36:47 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_run.gif
2025-10-06 11:36:47 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_line.gif
2025-10-06 11:36:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_disconnect.gif
2025-10-06 11:36:47 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_run.gif
2025-10-06 11:36:47 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_run_selected.gif
2025-10-06 11:36:47 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_run_selected.gif
2025-10-06 11:36:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_stop.gif
2025-10-06 11:36:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_commit.gif
2025-10-06 11:36:47 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_refresh.gif
2025-10-06 11:36:47 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_rollback.gif
2025-10-06 11:36:47 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_refresh.gif
2025-10-06 11:36:47 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_stop.gif
2025-10-06 11:36:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_commit.gif
2025-10-06 11:36:47 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_rollback.gif
2025-10-06 11:36:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree.js
2025-10-06 11:36:47 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree.js
2025-10-06 11:36:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_database.gif
2025-10-06 11:36:47 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_table.gif
2025-10-06 11:36:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_plus.gif
2025-10-06 11:36:47 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_empty.gif
2025-10-06 11:36:47 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_database.gif
2025-10-06 11:36:47 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_column.gif
2025-10-06 11:36:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_plus.gif
2025-10-06 11:36:47 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_column.gif
2025-10-06 11:36:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_empty.gif
2025-10-06 11:36:47 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_table.gif
2025-10-06 11:36:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_minus.gif
2025-10-06 11:36:47 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_minus.gif
2025-10-06 11:36:47 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_index.gif
2025-10-06 11:36:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_folder.gif
2025-10-06 11:36:47 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_info.gif
2025-10-06 11:36:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_type.gif
2025-10-06 11:36:47 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_users.gif
2025-10-06 11:36:47 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_index_az.gif
2025-10-06 11:36:47 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_folder.gif
2025-10-06 11:36:47 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_index.gif
2025-10-06 11:36:47 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_type.gif
2025-10-06 11:36:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_index_az.gif
2025-10-06 11:36:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_users.gif
2025-10-06 11:36:47 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_info.gif
2025-10-06 11:36:47 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_view.gif
2025-10-06 11:36:47 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_view.gif
2025-10-06 11:36:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_user.gif
2025-10-06 11:36:47 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:47 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_user.gif
2025-10-06 11:36:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/query.do?jsessionid=6bf6927771d2d2e3c52d9c4747ed2188
2025-10-06 11:36:52 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:52 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/query.do?jsessionid=6bf6927771d2d2e3c52d9c4747ed2188
2025-10-06 11:36:52 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/stylesheet.css
2025-10-06 11:36:52 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/table.js
2025-10-06 11:36:52 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:52 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:52 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 11:36:52 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 11:36:52 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/stylesheet.css
2025-10-06 11:36:52 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/table.js
2025-10-06 12:00:21 [Thread-2] INFO  c.e.p.config.GrpcServerConfig - Shutting down gRPC server...
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Revoke previously assigned partitions order.created-0
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Revoke previously assigned partitions payment.processed-0
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Revoke previously assigned partitions order.cancelled-0
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Revoke previously assigned partitions order.created-0
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: partitions revoked: [payment.processed-0]
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: partitions revoked: [order.created-0]
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: partitions revoked: [order.cancelled-0]
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: partitions revoked: [order.created-0]
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Member consumer-notification-service-3-50e27375-f6ec-49a7-9957-432a7f473936 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Member consumer-inventory-service-1-2bd5cb8f-29d3-4db4-bcab-d44a12960bfd sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Member consumer-inventory-service-2-1311969e-9215-4ec8-b8d0-f99bb218666b sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Member consumer-notification-service-4-59445588-1f6f-4c0f-9a58-623719f6a034 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Unsubscribed all topics or patterns and assigned partitions
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Unsubscribed all topics or patterns and assigned partitions
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-inventory-service-1 unregistered
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-notification-service-4 unregistered
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: Consumer stopped
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: Consumer stopped
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-notification-service-3 unregistered
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: Consumer stopped
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-inventory-service-2 unregistered
2025-10-06 12:00:22 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: Consumer stopped
2025-10-06 12:00:22 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-10-06 12:00:22 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 12:00:22 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 12:00:22 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 12:00:22 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-10-06 12:00:22 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-06 12:00:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-06 12:00:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-06 12:02:28 [main] INFO  c.e.p.ProductOrderServiceApplication - Starting ProductOrderServiceApplication v1.0.0 using Java 17.0.16 with PID 87231 (/Users/sushantpandey/product-order-service/target/product-order-service-1.0.0.jar started by sushantpandey in /Users/sushantpandey/product-order-service)
2025-10-06 12:02:28 [main] DEBUG c.e.p.ProductOrderServiceApplication - Running with Spring Boot v3.1.5, Spring v6.0.13
2025-10-06 12:02:28 [main] INFO  c.e.p.ProductOrderServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-06 12:02:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-06 12:02:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-06 12:02:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 114 ms. Found 6 JPA repository interfaces.
2025-10-06 12:02:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-06 12:02:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-10-06 12:02:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.payment.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 12:02:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.domain.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 12:02:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.domain.repository.CustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 12:02:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.domain.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 12:02:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.domain.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 12:02:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.invoice.domain.repository.InvoiceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 12:02:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-10-06 12:02:30 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-10-06 12:02:30 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-06 12:02:30 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.15]
2025-10-06 12:02:30 [main] INFO  o.a.c.c.C.[.[.[/product-order-service] - Initializing Spring embedded WebApplicationContext
2025-10-06 12:02:30 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1303 ms
2025-10-06 12:02:30 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-06 12:02:30 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-10-06 12:02:30 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-06 12:02:30 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-10-06 12:02:30 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-06 12:02:30 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.13.Final
2025-10-06 12:02:30 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-06 12:02:31 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-06 12:02:31 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-06 12:02:31 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-06 12:02:31 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-06 12:02:32 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-06 12:02:32 [main] DEBUG c.e.p.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
2025-10-06 12:02:33 [main] INFO  c.e.p.config.GrpcServerConfig - Starting gRPC server on port: 9090
2025-10-06 12:02:33 [main] INFO  c.e.p.config.GrpcServerConfig - gRPC server started successfully on port: 9090
2025-10-06 12:02:33 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-10-06 12:02:33 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-06 12:02:33 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@27015621, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4b6575fd, org.springframework.security.web.context.SecurityContextHolderFilter@18b431ea, org.springframework.security.web.header.HeaderWriterFilter@6d7c8a2, org.springframework.web.filter.CorsFilter@ecc5101, org.springframework.security.web.authentication.logout.LogoutFilter@2984edab, com.ecommerce.productorder.config.JwtRequestFilter@75c095a5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@389f4282, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@45745de6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@26501edd, org.springframework.security.web.session.SessionManagementFilter@45543b88, org.springframework.security.web.access.ExceptionTranslationFilter@7734ddb8, org.springframework.security.web.access.intercept.AuthorizationFilter@4d343793]
2025-10-06 12:02:34 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/product-order-service'
2025-10-06 12:02:34 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-inventory-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = inventory-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-10-06 12:02:34 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 12:02:34 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 12:02:34 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759732354485
2025-10-06 12:02:34 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Subscribed to topic(s): order.created
2025-10-06 12:02:34 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-inventory-service-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = inventory-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-10-06 12:02:34 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 12:02:34 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 12:02:34 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759732354496
2025-10-06 12:02:34 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Subscribed to topic(s): order.cancelled
2025-10-06 12:02:34 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-10-06 12:02:34 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 12:02:34 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 12:02:34 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759732354499
2025-10-06 12:02:34 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Subscribed to topic(s): order.created
2025-10-06 12:02:34 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-10-06 12:02:34 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 12:02:34 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 12:02:34 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759732354507
2025-10-06 12:02:34 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Subscribed to topic(s): payment.processed
2025-10-06 12:02:34 [main] INFO  c.e.p.ProductOrderServiceApplication - Started ProductOrderServiceApplication in 5.844 seconds (process running for 6.194)
2025-10-06 12:02:34 [main] INFO  c.e.p.config.DataInitializer - === DATA INITIALIZER STARTING ===
2025-10-06 12:02:34 [main] INFO  c.e.p.config.DataInitializer - Starting data initialization...
2025-10-06 12:02:34 [main] INFO  c.e.p.config.DataInitializer - Initializing test data...
2025-10-06 12:02:34 [main] INFO  c.e.p.config.DataInitializer - Creating test categories and products...
2025-10-06 12:02:34 [main] INFO  c.e.p.config.DataInitializer - Created Electronics category
2025-10-06 12:02:34 [main] INFO  c.e.p.config.DataInitializer - Created Clothing category
2025-10-06 12:02:34 [main] INFO  c.e.p.config.DataInitializer - Created Books category
2025-10-06 12:02:34 [main] INFO  c.e.p.config.DataInitializer - Creating products...
2025-10-06 12:02:34 [main] INFO  c.e.p.config.DataInitializer - Created iPhone 15 product
2025-10-06 12:02:34 [main] INFO  c.e.p.config.DataInitializer - Created MacBook Pro product
2025-10-06 12:02:34 [main] INFO  c.e.p.config.DataInitializer - Created T-Shirt product
2025-10-06 12:02:34 [main] INFO  c.e.p.config.DataInitializer - Created Programming Book product
2025-10-06 12:02:34 [main] INFO  c.e.p.config.DataInitializer - Test data initialization completed
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting the last seen epoch of partition order.cancelled-0 to 10 since the associated topicId changed from null to hAqa7gqzSgOGNgRsGTUgvg
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting the last seen epoch of partition payment.processed-0 to 10 since the associated topicId changed from null to t5NxQuSTQC2hC3JUcDzeGg
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] (Re-)joining group
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] (Re-)joining group
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] (Re-)joining group
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] (Re-)joining group
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-4-2b23dc2b-3f37-4232-8f98-63901eb6447b
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: need to re-join with the given member-id: consumer-inventory-service-2-0d6433b5-c012-44de-acc6-b02759e76487
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-3-2b9f9870-d690-478d-b26c-0aa8090c2335
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] (Re-)joining group
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] (Re-)joining group
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] (Re-)joining group
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: need to re-join with the given member-id: consumer-inventory-service-1-4a575b69-15fb-4b34-be68-0389d25a1af8
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-10-06 12:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] (Re-)joining group
2025-10-06 12:02:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Successfully joined group with generation Generation{generationId=7, memberId='consumer-inventory-service-1-4a575b69-15fb-4b34-be68-0389d25a1af8', protocol='range'}
2025-10-06 12:02:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Successfully joined group with generation Generation{generationId=7, memberId='consumer-notification-service-3-2b9f9870-d690-478d-b26c-0aa8090c2335', protocol='range'}
2025-10-06 12:02:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Successfully joined group with generation Generation{generationId=7, memberId='consumer-notification-service-4-2b23dc2b-3f37-4232-8f98-63901eb6447b', protocol='range'}
2025-10-06 12:02:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Successfully joined group with generation Generation{generationId=7, memberId='consumer-inventory-service-2-0d6433b5-c012-44de-acc6-b02759e76487', protocol='range'}
2025-10-06 12:02:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 12:02:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 12:02:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Finished assignment for group at generation 7: {consumer-notification-service-3-2b9f9870-d690-478d-b26c-0aa8090c2335=Assignment(partitions=[order.created-0]), consumer-notification-service-4-2b23dc2b-3f37-4232-8f98-63901eb6447b=Assignment(partitions=[payment.processed-0])}
2025-10-06 12:02:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Finished assignment for group at generation 7: {consumer-inventory-service-2-0d6433b5-c012-44de-acc6-b02759e76487=Assignment(partitions=[order.cancelled-0]), consumer-inventory-service-1-4a575b69-15fb-4b34-be68-0389d25a1af8=Assignment(partitions=[order.created-0])}
2025-10-06 12:02:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Successfully synced group in generation Generation{generationId=7, memberId='consumer-notification-service-4-2b23dc2b-3f37-4232-8f98-63901eb6447b', protocol='range'}
2025-10-06 12:02:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Successfully synced group in generation Generation{generationId=7, memberId='consumer-inventory-service-1-4a575b69-15fb-4b34-be68-0389d25a1af8', protocol='range'}
2025-10-06 12:02:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Successfully synced group in generation Generation{generationId=7, memberId='consumer-notification-service-3-2b9f9870-d690-478d-b26c-0aa8090c2335', protocol='range'}
2025-10-06 12:02:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Successfully synced group in generation Generation{generationId=7, memberId='consumer-inventory-service-2-0d6433b5-c012-44de-acc6-b02759e76487', protocol='range'}
2025-10-06 12:02:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order.created-0])
2025-10-06 12:02:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[payment.processed-0])
2025-10-06 12:02:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[order.created-0])
2025-10-06 12:02:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[order.cancelled-0])
2025-10-06 12:02:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Adding newly assigned partitions: order.created-0
2025-10-06 12:02:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Adding newly assigned partitions: order.cancelled-0
2025-10-06 12:02:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Adding newly assigned partitions: payment.processed-0
2025-10-06 12:02:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Adding newly assigned partitions: order.created-0
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Found no committed offset for partition order.created-0
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Found no committed offset for partition order.created-0
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Found no committed offset for partition payment.processed-0
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Found no committed offset for partition order.cancelled-0
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting offset for partition order.created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=10}}.
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting offset for partition payment.processed-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=10}}.
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Resetting offset for partition order.created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=10}}.
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting offset for partition order.cancelled-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=10}}.
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: partitions assigned: [order.created-0]
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: partitions assigned: [order.cancelled-0]
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: partitions assigned: [order.created-0]
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: partitions assigned: [payment.processed-0]
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@6ee34fe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"7155d081-0466-4ac3-9cf3-3745a67c8f61","orderNumber":"c2f007f9-afab-46c1-b0f6-3bddcc7fbea3","orderId":2,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,2,21,23,990587000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:22:47.292516","status":"CANCELLED","updatedAt":[2025,10,5,2,21,23,990602000]}, headers={__ContentTypeId__=[B@648ea00d, kafka_offset=0, __KeyTypeId__=[B@1f213b70, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@70757ebf, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759611167327, kafka_acknowledgment=Acknowledgment for order.cancelled-0@0, __TypeId__=[B@398c5c51, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@2dbfcbe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"9234e0dd-1c94-4d30-b847-6ef24ff8becd","orderNumber":"382207e8-13ea-4ba3-b2e8-c194086b0daf","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,3,21,50,17,915871000],"customerEmail":"test@example.com","customerId":1,"shippingAddress":"123 Main St, City, State","timestamp":"2025-10-03T21:50:17.917054","status":"PENDING","updatedAt":[2025,10,3,21,50,17,915889000]}, headers={__ContentTypeId__=[B@2982b7a6, kafka_offset=0, __KeyTypeId__=[B@22634b16, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@7a49f5f, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759508417960, kafka_acknowledgment=Acknowledgment for order.created-0@0, __TypeId__=[B@5b31ff70, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@6ee34fe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"9234e0dd-1c94-4d30-b847-6ef24ff8becd","orderNumber":"382207e8-13ea-4ba3-b2e8-c194086b0daf","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,3,21,50,17,915871000],"customerEmail":"test@example.com","customerId":1,"shippingAddress":"123 Main St, City, State","timestamp":"2025-10-03T21:50:17.917054","status":"PENDING","updatedAt":[2025,10,3,21,50,17,915889000]}, headers={__ContentTypeId__=[B@17d6f21b, kafka_offset=0, __KeyTypeId__=[B@e7321d2, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@752a6bff, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759508417960, kafka_acknowledgment=Acknowledgment for order.created-0@0, __TypeId__=[B@368bea67, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 1 for partition order.created-0
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 1 for partition order.created-0
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 1 for partition order.cancelled-0
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@6ee34fe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"6a8e200d-3344-4499-a3cb-0d5f3235fe09","orderNumber":"40bd1de4-e3e8-47e4-a452-7cb9b32f99aa","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,2,5,58,707310000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:05:58.799749","status":"PENDING","updatedAt":[2025,10,5,2,5,58,707354000]}, headers={__ContentTypeId__=[B@4e52792d, kafka_offset=1, __KeyTypeId__=[B@15ca8ec8, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@752a6bff, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759610159101, kafka_acknowledgment=Acknowledgment for order.created-0@1, __TypeId__=[B@3eec8723, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@2dbfcbe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"6a8e200d-3344-4499-a3cb-0d5f3235fe09","orderNumber":"40bd1de4-e3e8-47e4-a452-7cb9b32f99aa","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,2,5,58,707310000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:05:58.799749","status":"PENDING","updatedAt":[2025,10,5,2,5,58,707354000]}, headers={__ContentTypeId__=[B@5af3776b, kafka_offset=1, __KeyTypeId__=[B@438758ec, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@7a49f5f, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759610159101, kafka_acknowledgment=Acknowledgment for order.created-0@1, __TypeId__=[B@647726d3, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 2 for partition order.created-0
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 2 for partition order.created-0
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@6ee34fe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"9179492d-3893-4653-aff4-eb694c6a010e","orderNumber":"4c7d3c88-9b7a-423a-a1f6-7c27dcbb86d0","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":2999.97,"createdAt":[2025,10,5,13,17,23,227752000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:18:40.841978","status":"CANCELLED","updatedAt":[2025,10,5,13,17,23,227796000]}, headers={__ContentTypeId__=[B@965bc5b, kafka_offset=1, __KeyTypeId__=[B@3102cfea, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@70757ebf, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759650520859, kafka_acknowledgment=Acknowledgment for order.cancelled-0@1, __TypeId__=[B@75ffe32a, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:41 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 2 for partition order.cancelled-0
2025-10-06 12:02:42 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@6ee34fe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b7a9d0bd-56cd-4a82-b7ef-29dc61722d4e","orderNumber":"dd671d51-c52e-467b-bd37-754e4804cce9","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,36,5,859548000],"customerEmail":"testcustomer@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:36:22.696339","status":"CANCELLED","updatedAt":[2025,10,5,13,36,5,859555000]}, headers={__ContentTypeId__=[B@4dd9e205, kafka_offset=2, __KeyTypeId__=[B@412f534a, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@70757ebf, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759651582712, kafka_acknowledgment=Acknowledgment for order.cancelled-0@2, __TypeId__=[B@3db7d5ab, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@2dbfcbe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"cfde2282-fcb9-41a9-94ca-84608512a724","orderNumber":"c2f007f9-afab-46c1-b0f6-3bddcc7fbea3","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,2,21,23,990587000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:21:23.992450","status":"PENDING","updatedAt":[2025,10,5,2,21,23,990602000]}, headers={__ContentTypeId__=[B@10ff94ad, kafka_offset=2, __KeyTypeId__=[B@183c8ee1, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@7a49f5f, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759611084008, kafka_acknowledgment=Acknowledgment for order.created-0@2, __TypeId__=[B@2204c235, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 3 for partition order.created-0
2025-10-06 12:02:42 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 3 for partition order.cancelled-0
2025-10-06 12:02:42 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@6ee34fe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"cfde2282-fcb9-41a9-94ca-84608512a724","orderNumber":"c2f007f9-afab-46c1-b0f6-3bddcc7fbea3","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,2,21,23,990587000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:21:23.992450","status":"PENDING","updatedAt":[2025,10,5,2,21,23,990602000]}, headers={__ContentTypeId__=[B@9c42231, kafka_offset=2, __KeyTypeId__=[B@21ddafee, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@752a6bff, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759611084008, kafka_acknowledgment=Acknowledgment for order.created-0@2, __TypeId__=[B@2350994f, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:42 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 3 for partition order.created-0
2025-10-06 12:02:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@3
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@2dbfcbe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"cdddf310-e09d-4221-b773-1e1f1807855f","orderNumber":"4c7d3c88-9b7a-423a-a1f6-7c27dcbb86d0","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":2999.97,"createdAt":[2025,10,5,13,17,23,227752000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:17:23.236511","status":"PENDING","updatedAt":[2025,10,5,13,17,23,227796000]}, headers={__ContentTypeId__=[B@667a9d2a, kafka_offset=3, __KeyTypeId__=[B@6f4166f4, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@7a49f5f, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759650443448, kafka_acknowledgment=Acknowledgment for order.created-0@3, __TypeId__=[B@24aa7add, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 4 for partition order.created-0
2025-10-06 12:02:42 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@3
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@6ee34fe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"2db250f4-67f0-4a79-bb51-d46dad7ad65a","orderNumber":"77e4f83b-290c-4f6e-beec-b2b918f50032","orderId":2,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,43,55,498302000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:44:35.370358","status":"CANCELLED","updatedAt":[2025,10,5,13,43,55,498316000]}, headers={__ContentTypeId__=[B@3416fd, kafka_offset=3, __KeyTypeId__=[B@490d8f96, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@70757ebf, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759652075391, kafka_acknowledgment=Acknowledgment for order.cancelled-0@3, __TypeId__=[B@4eed5bb7, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:42 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 4 for partition order.cancelled-0
2025-10-06 12:02:42 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@3
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@6ee34fe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"cdddf310-e09d-4221-b773-1e1f1807855f","orderNumber":"4c7d3c88-9b7a-423a-a1f6-7c27dcbb86d0","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":2999.97,"createdAt":[2025,10,5,13,17,23,227752000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:17:23.236511","status":"PENDING","updatedAt":[2025,10,5,13,17,23,227796000]}, headers={__ContentTypeId__=[B@687a5b6b, kafka_offset=3, __KeyTypeId__=[B@1d88d96, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@752a6bff, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759650443448, kafka_acknowledgment=Acknowledgment for order.created-0@3, __TypeId__=[B@57eb407f, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:42 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 4 for partition order.created-0
2025-10-06 12:02:43 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@4
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@6ee34fe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"e9596ab6-f8d8-4850-9189-cb4b5a87c9b2","orderNumber":"8ffed856-b73d-4b3a-bd39-b89bf9a4b3c7","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,5,13,55,13,110657000],"customerEmail":"testuser@example.com","customerId":1,"shippingAddress":"123 User Street, User City","timestamp":"2025-10-05T13:55:30.536357","status":"CANCELLED","updatedAt":[2025,10,5,13,55,13,110666000]}, headers={__ContentTypeId__=[B@3026382a, kafka_offset=4, __KeyTypeId__=[B@1c6784fb, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@70757ebf, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759652730543, kafka_acknowledgment=Acknowledgment for order.cancelled-0@4, __TypeId__=[B@37a67803, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:43 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 5 for partition order.cancelled-0
2025-10-06 12:02:43 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@4
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@6ee34fe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"2817f087-4fc7-475a-86f7-ee18ed54f86b","orderNumber":"294cd00b-e7c8-4509-94d1-d460439a9666","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,20,39,830340000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:20:39.832097","status":"PENDING","updatedAt":[2025,10,5,13,20,39,830361000]}, headers={__ContentTypeId__=[B@7b642ba6, kafka_offset=4, __KeyTypeId__=[B@58bcf94b, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@752a6bff, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759650639832, kafka_acknowledgment=Acknowledgment for order.created-0@4, __TypeId__=[B@32e6b3c0, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:43 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 5 for partition order.created-0
2025-10-06 12:02:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@4
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@2dbfcbe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"2817f087-4fc7-475a-86f7-ee18ed54f86b","orderNumber":"294cd00b-e7c8-4509-94d1-d460439a9666","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,20,39,830340000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:20:39.832097","status":"PENDING","updatedAt":[2025,10,5,13,20,39,830361000]}, headers={__ContentTypeId__=[B@1d9d26f0, kafka_offset=4, __KeyTypeId__=[B@7921d8a9, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@7a49f5f, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759650639832, kafka_acknowledgment=Acknowledgment for order.created-0@4, __TypeId__=[B@6c2d6189, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 5 for partition order.created-0
2025-10-06 12:02:43 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@5
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@6ee34fe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"1a097506-7279-4c02-8911-3cbd2051b023","orderNumber":"c6a235b3-1434-4c15-b197-e58d3680ca20","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,14,0,58,980609000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T14:02:24.293178","status":"CANCELLED","updatedAt":[2025,10,5,14,0,58,980621000]}, headers={__ContentTypeId__=[B@62c32369, kafka_offset=5, __KeyTypeId__=[B@e3b8051, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@70757ebf, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759653144311, kafka_acknowledgment=Acknowledgment for order.cancelled-0@5, __TypeId__=[B@42791b9f, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:43 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@5
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@6ee34fe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b0f426cf-a0a7-4589-a7bc-f216b4e949f8","orderNumber":"639675c4-90a4-42fa-b696-ac16a1a2644c","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,27,22,138475000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:27:22.140228","status":"PENDING","updatedAt":[2025,10,5,13,27,22,138487000]}, headers={__ContentTypeId__=[B@33e397d4, kafka_offset=5, __KeyTypeId__=[B@5e5584ac, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@752a6bff, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759651042177, kafka_acknowledgment=Acknowledgment for order.created-0@5, __TypeId__=[B@42c1e206, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:43 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 6 for partition order.created-0
2025-10-06 12:02:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@5
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@2dbfcbe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b0f426cf-a0a7-4589-a7bc-f216b4e949f8","orderNumber":"639675c4-90a4-42fa-b696-ac16a1a2644c","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,27,22,138475000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:27:22.140228","status":"PENDING","updatedAt":[2025,10,5,13,27,22,138487000]}, headers={__ContentTypeId__=[B@35a2991d, kafka_offset=5, __KeyTypeId__=[B@51c4c6bf, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@7a49f5f, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759651042177, kafka_acknowledgment=Acknowledgment for order.created-0@5, __TypeId__=[B@59d9b22b, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 6 for partition order.created-0
2025-10-06 12:02:44 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@6
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@6ee34fe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"3afe55c1-fb98-41fc-8506-d9612ea5205b","orderNumber":"dd671d51-c52e-467b-bd37-754e4804cce9","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,36,5,859548000],"customerEmail":"testcustomer@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:36:05.861915","status":"PENDING","updatedAt":[2025,10,5,13,36,5,859555000]}, headers={__ContentTypeId__=[B@4122623, kafka_offset=6, __KeyTypeId__=[B@b400c76, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@752a6bff, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759651565898, kafka_acknowledgment=Acknowledgment for order.created-0@6, __TypeId__=[B@62dc3a38, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@6
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@2dbfcbe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"3afe55c1-fb98-41fc-8506-d9612ea5205b","orderNumber":"dd671d51-c52e-467b-bd37-754e4804cce9","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,36,5,859548000],"customerEmail":"testcustomer@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:36:05.861915","status":"PENDING","updatedAt":[2025,10,5,13,36,5,859555000]}, headers={__ContentTypeId__=[B@5ddc57ea, kafka_offset=6, __KeyTypeId__=[B@147a0766, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@7a49f5f, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759651565898, kafka_acknowledgment=Acknowledgment for order.created-0@6, __TypeId__=[B@2cd780aa, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:44 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 7 for partition order.created-0
2025-10-06 12:02:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 7 for partition order.created-0
2025-10-06 12:02:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@7
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@2dbfcbe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b60e7e47-569f-4c6d-b029-4c2c9328bcd0","orderNumber":"77e4f83b-290c-4f6e-beec-b2b918f50032","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,43,55,498302000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:43:55.500675","status":"PENDING","updatedAt":[2025,10,5,13,43,55,498316000]}, headers={__ContentTypeId__=[B@45919ec8, kafka_offset=7, __KeyTypeId__=[B@7d233433, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@7a49f5f, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652035504, kafka_acknowledgment=Acknowledgment for order.created-0@7, __TypeId__=[B@2a3ca3d6, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 8 for partition order.created-0
2025-10-06 12:02:44 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@7
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@6ee34fe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b60e7e47-569f-4c6d-b029-4c2c9328bcd0","orderNumber":"77e4f83b-290c-4f6e-beec-b2b918f50032","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,43,55,498302000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:43:55.500675","status":"PENDING","updatedAt":[2025,10,5,13,43,55,498316000]}, headers={__ContentTypeId__=[B@1ed85d6b, kafka_offset=7, __KeyTypeId__=[B@7b1dcb65, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@752a6bff, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652035504, kafka_acknowledgment=Acknowledgment for order.created-0@7, __TypeId__=[B@6aa43178, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:44 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 8 for partition order.created-0
2025-10-06 12:02:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@8
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@6ee34fe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"e07d01a8-fa5a-4268-8a2d-032027c60cbf","orderNumber":"22251392-4b09-4b14-9a2d-28ce6e9b9616","orderId":3,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,13,45,2,791477000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:45:02.794013","status":"PENDING","updatedAt":[2025,10,5,13,45,2,791507000]}, headers={__ContentTypeId__=[B@775a0afa, kafka_offset=8, __KeyTypeId__=[B@434b892f, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@752a6bff, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=3, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652102794, kafka_acknowledgment=Acknowledgment for order.created-0@8, __TypeId__=[B@7f95b900, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 9 for partition order.created-0
2025-10-06 12:02:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@8
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@2dbfcbe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"e07d01a8-fa5a-4268-8a2d-032027c60cbf","orderNumber":"22251392-4b09-4b14-9a2d-28ce6e9b9616","orderId":3,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,13,45,2,791477000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:45:02.794013","status":"PENDING","updatedAt":[2025,10,5,13,45,2,791507000]}, headers={__ContentTypeId__=[B@7e56cfbe, kafka_offset=8, __KeyTypeId__=[B@23416671, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@7a49f5f, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=3, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652102794, kafka_acknowledgment=Acknowledgment for order.created-0@8, __TypeId__=[B@2ba5da26, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 9 for partition order.created-0
2025-10-06 12:02:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@9
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@2dbfcbe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"baadd731-8880-4034-af61-bb3239c50fbd","orderNumber":"8ffed856-b73d-4b3a-bd39-b89bf9a4b3c7","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,5,13,55,13,110657000],"customerEmail":"testuser@example.com","customerId":1,"shippingAddress":"123 User Street, User City","timestamp":"2025-10-05T13:55:13.115094","status":"PENDING","updatedAt":[2025,10,5,13,55,13,110666000]}, headers={__ContentTypeId__=[B@4392a22f, kafka_offset=9, __KeyTypeId__=[B@308ec647, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@7a49f5f, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652713187, kafka_acknowledgment=Acknowledgment for order.created-0@9, __TypeId__=[B@3f1d1238, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@9
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@6ee34fe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"baadd731-8880-4034-af61-bb3239c50fbd","orderNumber":"8ffed856-b73d-4b3a-bd39-b89bf9a4b3c7","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,5,13,55,13,110657000],"customerEmail":"testuser@example.com","customerId":1,"shippingAddress":"123 User Street, User City","timestamp":"2025-10-05T13:55:13.115094","status":"PENDING","updatedAt":[2025,10,5,13,55,13,110666000]}, headers={__ContentTypeId__=[B@364b84b3, kafka_offset=9, __KeyTypeId__=[B@35ef2fab, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@752a6bff, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652713187, kafka_acknowledgment=Acknowledgment for order.created-0@9, __TypeId__=[B@46b1ac8d, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 10 for partition order.created-0
2025-10-06 12:02:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 10 for partition order.created-0
2025-10-06 12:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@10
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@2dbfcbe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"80147450-718c-47c4-8886-ed5711a0e4a9","orderNumber":"c6a235b3-1434-4c15-b197-e58d3680ca20","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,14,0,58,980609000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T14:00:58.983578","status":"PENDING","updatedAt":[2025,10,5,14,0,58,980621000]}, headers={__ContentTypeId__=[B@6e9aae48, kafka_offset=10, __KeyTypeId__=[B@24e5245, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@7a49f5f, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759653059048, kafka_acknowledgment=Acknowledgment for order.created-0@10, __TypeId__=[B@7a8e04aa, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@10
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@6ee34fe4]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"80147450-718c-47c4-8886-ed5711a0e4a9","orderNumber":"c6a235b3-1434-4c15-b197-e58d3680ca20","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,14,0,58,980609000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T14:00:58.983578","status":"PENDING","updatedAt":[2025,10,5,14,0,58,980621000]}, headers={__ContentTypeId__=[B@19756152, kafka_offset=10, __KeyTypeId__=[B@3c7ae2cc, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@752a6bff, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759653059048, kafka_acknowledgment=Acknowledgment for order.created-0@10, __TypeId__=[B@22cc8403, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:02:52 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/product-order-service] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-06 12:02:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-06 12:02:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2025-10-06 12:02:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing HEAD /actuator/health
2025-10-06 12:02:52 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:02:52 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:02:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured HEAD /actuator/health
2025-10-06 12:03:05 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui.html
2025-10-06 12:03:05 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:03:05 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:03:05 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui.html
2025-10-06 12:03:05 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-10-06 12:03:05 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:03:05 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:03:05 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-10-06 12:03:06 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Login attempt for user: admin
2025-10-06 12:03:06 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Password provided: admin123
2025-10-06 12:03:06 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Attempting authentication for user: admin
2025-10-06 12:03:06 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 12:03:06 [http-nio-8080-exec-4] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 12:03:06 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Customer not found in database, checking demo users
2025-10-06 12:03:06 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Found demo admin user
2025-10-06 12:03:06 [http-nio-8080-exec-4] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-06 12:03:06 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Authentication successful for user: admin
2025-10-06 12:03:06 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 12:03:06 [http-nio-8080-exec-4] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 12:03:06 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Customer not found in database, checking demo users
2025-10-06 12:03:06 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Found demo admin user
2025-10-06 12:03:06 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - User details loaded: admin
2025-10-06 12:03:06 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - JWT token generated successfully
2025-10-06 12:03:06 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Login successful for user: admin
2025-10-06 12:03:06 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/v1/payments
2025-10-06 12:03:06 [http-nio-8080-exec-6] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 12:03:06 [http-nio-8080-exec-6] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 12:03:06 [http-nio-8080-exec-6] INFO  c.e.p.c.CustomUserDetailsService - Customer not found in database, checking demo users
2025-10-06 12:03:06 [http-nio-8080-exec-6] INFO  c.e.p.c.CustomUserDetailsService - Found demo admin user
2025-10-06 12:03:06 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/v1/payments
2025-10-06 12:03:06 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.getAllPayments(org.springframework.data.domain.Pageable); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 12:03:06 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.getAllPayments(org.springframework.data.domain.Pageable); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 12:03:06 [http-nio-8080-exec-6] DEBUG c.e.p.controller.PaymentController - Retrieving all payments with pagination: Page request [number: 0, size 20, sort: UNSORTED]
2025-10-06 12:03:06 [http-nio-8080-exec-6] DEBUG c.e.p.p.s.impl.PaymentServiceImpl - Retrieving all payments with pagination: Page request [number: 0, size 20, sort: UNSORTED]
2025-10-06 12:03:06 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/v1/payments/statistics
2025-10-06 12:03:06 [http-nio-8080-exec-8] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 12:03:06 [http-nio-8080-exec-8] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 12:03:06 [http-nio-8080-exec-8] INFO  c.e.p.c.CustomUserDetailsService - Customer not found in database, checking demo users
2025-10-06 12:03:06 [http-nio-8080-exec-8] INFO  c.e.p.c.CustomUserDetailsService - Found demo admin user
2025-10-06 12:03:06 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/v1/payments/statistics
2025-10-06 12:03:06 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.getPaymentStatistics(); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 12:03:06 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.getPaymentStatistics(); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 12:03:06 [http-nio-8080-exec-8] DEBUG c.e.p.controller.PaymentController - Retrieving payment statistics
2025-10-06 12:03:06 [http-nio-8080-exec-8] DEBUG c.e.p.p.s.impl.PaymentServiceImpl - Retrieving payment statistics
2025-10-06 12:03:06 [http-nio-8080-exec-8] ERROR c.e.p.c.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.dao.InvalidDataAccessApiUsageException: Argument [COMPLETED] of type [java.lang.String] did not match parameter type [com.ecommerce.productorder.payment.domain.entity.Payment$PaymentStatus (n/a)]
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:371)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:234)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:243)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy2/jdk.proxy2.$Proxy169.countByStatus(Unknown Source)
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl.getPaymentStatistics(PaymentServiceImpl.java:389)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl$$SpringCGLIB$$0.getPaymentStatistics(<generated>)
	at com.ecommerce.productorder.controller.PaymentController.getPaymentStatistics(PaymentController.java:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:199)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.controller.PaymentController$$SpringCGLIB$$0.getPaymentStatistics(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.ecommerce.productorder.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.IllegalArgumentException: Argument [COMPLETED] of type [java.lang.String] did not match parameter type [com.ecommerce.productorder.payment.domain.entity.Payment$PaymentStatus (n/a)]
	at org.hibernate.query.spi.QueryParameterBindingValidator.validate(QueryParameterBindingValidator.java:84)
	at org.hibernate.query.spi.QueryParameterBindingValidator.validate(QueryParameterBindingValidator.java:31)
	at org.hibernate.query.internal.QueryParameterBindingImpl.validate(QueryParameterBindingImpl.java:340)
	at org.hibernate.query.internal.QueryParameterBindingImpl.setBindValue(QueryParameterBindingImpl.java:130)
	at org.hibernate.query.spi.AbstractCommonQueryContract.setParameter(AbstractCommonQueryContract.java:825)
	at org.hibernate.query.spi.AbstractSelectionQuery.setParameter(AbstractSelectionQuery.java:780)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.setParameter(QuerySqmImpl.java:1237)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.setParameter(QuerySqmImpl.java:129)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$BindableQuery.setParameter(QueryParameterSetter.java:326)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$NamedOrIndexedQueryParameterSetter.lambda$setParameter$4(QueryParameterSetter.java:117)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$ErrorHandling$1.execute(QueryParameterSetter.java:140)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$NamedOrIndexedQueryParameterSetter.setParameter(QueryParameterSetter.java:117)
	at org.springframework.data.jpa.repository.query.ParameterBinder.bind(ParameterBinder.java:84)
	at org.springframework.data.jpa.repository.query.ParameterBinder.bind(ParameterBinder.java:76)
	at org.springframework.data.jpa.repository.query.ParameterBinder.bindAndPrepare(ParameterBinder.java:98)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.doCreateQuery(AbstractStringBasedJpaQuery.java:106)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.createQuery(AbstractJpaQuery.java:239)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 168 common frames omitted
2025-10-06 12:08:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/v1/products/categories
2025-10-06 12:08:32 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:08:32 [http-nio-8080-exec-9] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:08:32 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Customer not found in database, checking demo users
2025-10-06 12:08:32 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Found demo customer user
2025-10-06 12:08:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/v1/products/categories
2025-10-06 12:08:32 [http-nio-8080-exec-9] DEBUG c.e.p.controller.CategoryController - Retrieving all categories
2025-10-06 12:08:48 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-10-06 12:08:48 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:08:48 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:08:48 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-10-06 12:08:49 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-10-06 12:08:49 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-10-06 12:08:49 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:08:49 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:08:49 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:08:49 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:08:49 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-10-06 12:08:49 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-10-06 12:08:49 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-10-06 12:08:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-10-06 12:08:49 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-10-06 12:08:49 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:08:49 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:08:49 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:08:49 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:08:49 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:08:49 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:08:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-10-06 12:08:49 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-10-06 12:08:49 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-10-06 12:08:49 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api-docs/swagger-config
2025-10-06 12:08:49 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:08:49 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:08:49 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api-docs/swagger-config
2025-10-06 12:08:49 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-10-06 12:08:49 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:08:49 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:08:49 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-10-06 12:08:49 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api-docs
2025-10-06 12:08:49 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:08:49 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:08:49 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api-docs
2025-10-06 12:08:50 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 918 ms
2025-10-06 12:09:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/query.do?jsessionid=6bf6927771d2d2e3c52d9c4747ed2188
2025-10-06 12:09:51 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/query.do?jsessionid=6bf6927771d2d2e3c52d9c4747ed2188
2025-10-06 12:09:51 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/stylesheet.css
2025-10-06 12:09:51 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:51 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:51 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/stylesheet.css
2025-10-06 12:09:51 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/login.jsp?jsessionid=108dcb86b7ce9f776b783d326830e738
2025-10-06 12:09:51 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:51 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:51 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/login.jsp?jsessionid=108dcb86b7ce9f776b783d326830e738
2025-10-06 12:09:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/login.jsp
2025-10-06 12:09:51 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/background.gif
2025-10-06 12:09:51 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:51 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:51 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:51 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/login.jsp
2025-10-06 12:09:51 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/background.gif
2025-10-06 12:09:51 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/login.jsp?jsessionid=8be3e47bc78377879f8e5c8f601857cc
2025-10-06 12:09:51 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:51 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:51 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/login.jsp?jsessionid=8be3e47bc78377879f8e5c8f601857cc
2025-10-06 12:09:56 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/login.do?jsessionid=8be3e47bc78377879f8e5c8f601857cc
2025-10-06 12:09:56 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/login.do?jsessionid=8be3e47bc78377879f8e5c8f601857cc
2025-10-06 12:09:56 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/header.jsp?jsessionid=8be3e47bc78377879f8e5c8f601857cc
2025-10-06 12:09:56 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tables.do?jsessionid=8be3e47bc78377879f8e5c8f601857cc
2025-10-06 12:09:56 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/help.jsp?jsessionid=8be3e47bc78377879f8e5c8f601857cc
2025-10-06 12:09:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/query.jsp?jsessionid=8be3e47bc78377879f8e5c8f601857cc
2025-10-06 12:09:56 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/header.jsp?jsessionid=8be3e47bc78377879f8e5c8f601857cc
2025-10-06 12:09:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tables.do?jsessionid=8be3e47bc78377879f8e5c8f601857cc
2025-10-06 12:09:56 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/help.jsp?jsessionid=8be3e47bc78377879f8e5c8f601857cc
2025-10-06 12:09:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/query.jsp?jsessionid=8be3e47bc78377879f8e5c8f601857cc
2025-10-06 12:09:56 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_disconnect.gif
2025-10-06 12:09:56 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_disconnect.gif
2025-10-06 12:09:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_line.gif
2025-10-06 12:09:56 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_line.gif
2025-10-06 12:09:56 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_commit.gif
2025-10-06 12:09:56 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_commit.gif
2025-10-06 12:09:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_stop.gif
2025-10-06 12:09:56 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_run_selected.gif
2025-10-06 12:09:56 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_run_selected.gif
2025-10-06 12:09:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_stop.gif
2025-10-06 12:09:56 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_refresh.gif
2025-10-06 12:09:56 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_refresh.gif
2025-10-06 12:09:56 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_rollback.gif
2025-10-06 12:09:56 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_rollback.gif
2025-10-06 12:09:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_run.gif
2025-10-06 12:09:56 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_run.gif
2025-10-06 12:09:56 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_history.gif
2025-10-06 12:09:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_help.gif
2025-10-06 12:09:56 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_history.gif
2025-10-06 12:09:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_help.gif
2025-10-06 12:09:56 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree.js
2025-10-06 12:09:56 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree.js
2025-10-06 12:09:56 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_database.gif
2025-10-06 12:09:56 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_empty.gif
2025-10-06 12:09:56 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_column.gif
2025-10-06 12:09:56 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_plus.gif
2025-10-06 12:09:56 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_minus.gif
2025-10-06 12:09:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_table.gif
2025-10-06 12:09:56 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_empty.gif
2025-10-06 12:09:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_table.gif
2025-10-06 12:09:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_column.gif
2025-10-06 12:09:56 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_minus.gif
2025-10-06 12:09:56 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_database.gif
2025-10-06 12:09:56 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_plus.gif
2025-10-06 12:09:56 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_type.gif
2025-10-06 12:09:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_index_az.gif
2025-10-06 12:09:56 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_type.gif
2025-10-06 12:09:56 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_index_az.gif
2025-10-06 12:09:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_index.gif
2025-10-06 12:09:56 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_folder.gif
2025-10-06 12:09:56 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_view.gif
2025-10-06 12:09:56 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_index.gif
2025-10-06 12:09:56 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_folder.gif
2025-10-06 12:09:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_users.gif
2025-10-06 12:09:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_view.gif
2025-10-06 12:09:56 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_users.gif
2025-10-06 12:09:56 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_user.gif
2025-10-06 12:09:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_info.gif
2025-10-06 12:09:56 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:09:56 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:09:56 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_info.gif
2025-10-06 12:09:56 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_user.gif
2025-10-06 12:10:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/query.do?jsessionid=8be3e47bc78377879f8e5c8f601857cc
2025-10-06 12:10:00 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:10:00 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:10:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/query.do?jsessionid=8be3e47bc78377879f8e5c8f601857cc
2025-10-06 12:10:01 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/stylesheet.css
2025-10-06 12:10:01 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:10:01 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:10:01 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/stylesheet.css
2025-10-06 12:10:01 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/table.js
2025-10-06 12:10:01 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:10:01 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:10:01 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/table.js
2025-10-06 12:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Node -1 disconnected.
2025-10-06 12:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Node -1 disconnected.
2025-10-06 12:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Node -1 disconnected.
2025-10-06 12:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Node -1 disconnected.
2025-10-06 12:14:08 [Thread-2] INFO  c.e.p.config.GrpcServerConfig - Shutting down gRPC server...
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Revoke previously assigned partitions order.created-0
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Revoke previously assigned partitions payment.processed-0
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Revoke previously assigned partitions order.created-0
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Revoke previously assigned partitions order.cancelled-0
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: partitions revoked: [order.created-0]
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: partitions revoked: [order.created-0]
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: partitions revoked: [payment.processed-0]
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: partitions revoked: [order.cancelled-0]
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Member consumer-inventory-service-1-4a575b69-15fb-4b34-be68-0389d25a1af8 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Member consumer-notification-service-4-2b23dc2b-3f37-4232-8f98-63901eb6447b sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Member consumer-notification-service-3-2b9f9870-d690-478d-b26c-0aa8090c2335 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Member consumer-inventory-service-2-0d6433b5-c012-44de-acc6-b02759e76487 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Unsubscribed all topics or patterns and assigned partitions
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Unsubscribed all topics or patterns and assigned partitions
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-notification-service-3 unregistered
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-inventory-service-1 unregistered
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: Consumer stopped
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: Consumer stopped
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-notification-service-4 unregistered
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: Consumer stopped
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-inventory-service-2 unregistered
2025-10-06 12:14:08 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: Consumer stopped
2025-10-06 12:14:08 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-06 12:14:08 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-06 12:14:08 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-06 12:15:34 [main] INFO  c.e.p.ProductOrderServiceApplication - Starting ProductOrderServiceApplication v1.0.0 using Java 17.0.16 with PID 87492 (/Users/sushantpandey/product-order-service/target/product-order-service-1.0.0.jar started by sushantpandey in /Users/sushantpandey/product-order-service)
2025-10-06 12:15:34 [main] DEBUG c.e.p.ProductOrderServiceApplication - Running with Spring Boot v3.1.5, Spring v6.0.13
2025-10-06 12:15:34 [main] INFO  c.e.p.ProductOrderServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-06 12:15:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-06 12:15:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-06 12:15:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 114 ms. Found 6 JPA repository interfaces.
2025-10-06 12:15:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-06 12:15:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-10-06 12:15:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.payment.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 12:15:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.domain.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 12:15:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.domain.repository.CustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 12:15:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.domain.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 12:15:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.domain.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 12:15:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.invoice.domain.repository.InvoiceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 12:15:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2025-10-06 12:15:35 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-10-06 12:15:35 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-06 12:15:35 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.15]
2025-10-06 12:15:35 [main] INFO  o.a.c.c.C.[.[.[/product-order-service] - Initializing Spring embedded WebApplicationContext
2025-10-06 12:15:35 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1594 ms
2025-10-06 12:15:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-06 12:15:36 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-10-06 12:15:36 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-06 12:15:36 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-10-06 12:15:36 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-06 12:15:36 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.13.Final
2025-10-06 12:15:36 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-06 12:15:36 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-06 12:15:36 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-06 12:15:36 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-06 12:15:36 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-06 12:15:37 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-06 12:15:38 [main] DEBUG c.e.p.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
2025-10-06 12:15:38 [main] INFO  c.e.p.config.GrpcServerConfig - Starting gRPC server on port: 9090
2025-10-06 12:15:38 [main] INFO  c.e.p.config.GrpcServerConfig - gRPC server started successfully on port: 9090
2025-10-06 12:15:39 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-10-06 12:15:39 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-06 12:15:39 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1427827f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@27015621, org.springframework.security.web.context.SecurityContextHolderFilter@2fad7002, org.springframework.security.web.header.HeaderWriterFilter@7b2adbde, org.springframework.web.filter.CorsFilter@4b6575fd, org.springframework.security.web.authentication.logout.LogoutFilter@27f09e08, com.ecommerce.productorder.config.JwtRequestFilter@6a0a0f12, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7c58c10f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7cf618f3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@ecc5101, org.springframework.security.web.session.SessionManagementFilter@59bdd277, org.springframework.security.web.access.ExceptionTranslationFilter@4c2b8df7, org.springframework.security.web.access.intercept.AuthorizationFilter@7b491b89]
2025-10-06 12:15:39 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/product-order-service'
2025-10-06 12:15:39 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-inventory-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = inventory-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-10-06 12:15:39 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 12:15:39 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 12:15:39 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759733139838
2025-10-06 12:15:39 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Subscribed to topic(s): order.created
2025-10-06 12:15:39 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-inventory-service-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = inventory-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-10-06 12:15:39 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 12:15:39 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 12:15:39 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759733139848
2025-10-06 12:15:39 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Subscribed to topic(s): order.cancelled
2025-10-06 12:15:39 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-10-06 12:15:39 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 12:15:39 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 12:15:39 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759733139853
2025-10-06 12:15:39 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Subscribed to topic(s): order.created
2025-10-06 12:15:39 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-10-06 12:15:39 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 12:15:39 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 12:15:39 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759733139856
2025-10-06 12:15:39 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Subscribed to topic(s): payment.processed
2025-10-06 12:15:39 [main] INFO  c.e.p.ProductOrderServiceApplication - Started ProductOrderServiceApplication in 6.01 seconds (process running for 6.429)
2025-10-06 12:15:39 [main] INFO  c.e.p.config.DefaultUserInitializer - Initializing default users...
2025-10-06 12:15:39 [main] INFO  c.e.p.config.DefaultUserInitializer - Default admin user created: admin / admin123
2025-10-06 12:15:40 [main] INFO  c.e.p.config.DefaultUserInitializer - Default customer user created: customer / customer123
2025-10-06 12:15:40 [main] INFO  c.e.p.config.DefaultUserInitializer - Default users initialization completed
2025-10-06 12:15:40 [main] INFO  c.e.p.config.DataInitializer - === DATA INITIALIZER STARTING ===
2025-10-06 12:15:40 [main] INFO  c.e.p.config.DataInitializer - Starting data initialization...
2025-10-06 12:15:40 [main] INFO  c.e.p.config.DataInitializer - Initializing test data...
2025-10-06 12:15:40 [main] INFO  c.e.p.config.DataInitializer - Creating test categories and products...
2025-10-06 12:15:40 [main] INFO  c.e.p.config.DataInitializer - Created Electronics category
2025-10-06 12:15:40 [main] INFO  c.e.p.config.DataInitializer - Created Clothing category
2025-10-06 12:15:40 [main] INFO  c.e.p.config.DataInitializer - Created Books category
2025-10-06 12:15:40 [main] INFO  c.e.p.config.DataInitializer - Creating products...
2025-10-06 12:15:40 [main] INFO  c.e.p.config.DataInitializer - Created iPhone 15 product
2025-10-06 12:15:40 [main] INFO  c.e.p.config.DataInitializer - Created MacBook Pro product
2025-10-06 12:15:40 [main] INFO  c.e.p.config.DataInitializer - Created T-Shirt product
2025-10-06 12:15:40 [main] INFO  c.e.p.config.DataInitializer - Created Programming Book product
2025-10-06 12:15:40 [main] INFO  c.e.p.config.DataInitializer - Test data initialization completed
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting the last seen epoch of partition payment.processed-0 to 10 since the associated topicId changed from null to t5NxQuSTQC2hC3JUcDzeGg
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting the last seen epoch of partition order.cancelled-0 to 10 since the associated topicId changed from null to hAqa7gqzSgOGNgRsGTUgvg
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] (Re-)joining group
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] (Re-)joining group
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] (Re-)joining group
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] (Re-)joining group
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: need to re-join with the given member-id: consumer-inventory-service-2-50c91a93-4b30-46ee-99d2-dfee5136bd85
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-3-972ada27-6481-4788-8cb2-e08808b7a0bc
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] (Re-)joining group
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] (Re-)joining group
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-4-843eb003-683a-48cd-b738-95adfe7d9f8e
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: need to re-join with the given member-id: consumer-inventory-service-1-2f63e598-a1be-43f4-9cc4-8a5c2c0578da
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] (Re-)joining group
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-10-06 12:15:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] (Re-)joining group
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Successfully joined group with generation Generation{generationId=1, memberId='consumer-inventory-service-2-50c91a93-4b30-46ee-99d2-dfee5136bd85', protocol='range'}
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Successfully joined group with generation Generation{generationId=1, memberId='consumer-notification-service-3-972ada27-6481-4788-8cb2-e08808b7a0bc', protocol='range'}
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Successfully joined group with generation Generation{generationId=1, memberId='consumer-notification-service-4-843eb003-683a-48cd-b738-95adfe7d9f8e', protocol='range'}
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Successfully joined group with generation Generation{generationId=1, memberId='consumer-inventory-service-1-2f63e598-a1be-43f4-9cc4-8a5c2c0578da', protocol='range'}
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Resetting the last seen epoch of partition payment.processed-0 to 10 since the associated topicId changed from null to t5NxQuSTQC2hC3JUcDzeGg
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Finished assignment for group at generation 1: {consumer-inventory-service-1-2f63e598-a1be-43f4-9cc4-8a5c2c0578da=Assignment(partitions=[order.created-0]), consumer-inventory-service-2-50c91a93-4b30-46ee-99d2-dfee5136bd85=Assignment(partitions=[order.cancelled-0])}
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Finished assignment for group at generation 1: {consumer-notification-service-4-843eb003-683a-48cd-b738-95adfe7d9f8e=Assignment(partitions=[payment.processed-0]), consumer-notification-service-3-972ada27-6481-4788-8cb2-e08808b7a0bc=Assignment(partitions=[order.created-0])}
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Successfully synced group in generation Generation{generationId=1, memberId='consumer-inventory-service-2-50c91a93-4b30-46ee-99d2-dfee5136bd85', protocol='range'}
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Successfully synced group in generation Generation{generationId=1, memberId='consumer-notification-service-3-972ada27-6481-4788-8cb2-e08808b7a0bc', protocol='range'}
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Successfully synced group in generation Generation{generationId=1, memberId='consumer-notification-service-4-843eb003-683a-48cd-b738-95adfe7d9f8e', protocol='range'}
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Successfully synced group in generation Generation{generationId=1, memberId='consumer-inventory-service-1-2f63e598-a1be-43f4-9cc4-8a5c2c0578da', protocol='range'}
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[order.cancelled-0])
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order.created-0])
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[payment.processed-0])
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[order.created-0])
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Adding newly assigned partitions: order.cancelled-0
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Adding newly assigned partitions: order.created-0
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Adding newly assigned partitions: order.created-0
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Adding newly assigned partitions: payment.processed-0
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Found no committed offset for partition payment.processed-0
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Found no committed offset for partition order.created-0
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Found no committed offset for partition order.cancelled-0
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Found no committed offset for partition order.created-0
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Resetting offset for partition order.created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=10}}.
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting offset for partition payment.processed-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=10}}.
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting offset for partition order.created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=10}}.
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting offset for partition order.cancelled-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=10}}.
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: partitions assigned: [payment.processed-0]
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: partitions assigned: [order.cancelled-0]
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: partitions assigned: [order.created-0]
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: partitions assigned: [order.created-0]
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@4945cd1f]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"9234e0dd-1c94-4d30-b847-6ef24ff8becd","orderNumber":"382207e8-13ea-4ba3-b2e8-c194086b0daf","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,3,21,50,17,915871000],"customerEmail":"test@example.com","customerId":1,"shippingAddress":"123 Main St, City, State","timestamp":"2025-10-03T21:50:17.917054","status":"PENDING","updatedAt":[2025,10,3,21,50,17,915889000]}, headers={__ContentTypeId__=[B@25bf2c32, kafka_offset=0, __KeyTypeId__=[B@1b9ff522, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1a655147, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759508417960, kafka_acknowledgment=Acknowledgment for order.created-0@0, __TypeId__=[B@18bba877, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"7155d081-0466-4ac3-9cf3-3745a67c8f61","orderNumber":"c2f007f9-afab-46c1-b0f6-3bddcc7fbea3","orderId":2,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,2,21,23,990587000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:22:47.292516","status":"CANCELLED","updatedAt":[2025,10,5,2,21,23,990602000]}, headers={__ContentTypeId__=[B@244e4991, kafka_offset=0, __KeyTypeId__=[B@128757df, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@597d5f4d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759611167327, kafka_acknowledgment=Acknowledgment for order.cancelled-0@0, __TypeId__=[B@390e6fe, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"9234e0dd-1c94-4d30-b847-6ef24ff8becd","orderNumber":"382207e8-13ea-4ba3-b2e8-c194086b0daf","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,3,21,50,17,915871000],"customerEmail":"test@example.com","customerId":1,"shippingAddress":"123 Main St, City, State","timestamp":"2025-10-03T21:50:17.917054","status":"PENDING","updatedAt":[2025,10,3,21,50,17,915889000]}, headers={__ContentTypeId__=[B@5f88fa0c, kafka_offset=0, __KeyTypeId__=[B@61393d61, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3156bc09, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759508417960, kafka_acknowledgment=Acknowledgment for order.created-0@0, __TypeId__=[B@74e9dbcb, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 1 for partition order.created-0
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 1 for partition order.cancelled-0
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 1 for partition order.created-0
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"6a8e200d-3344-4499-a3cb-0d5f3235fe09","orderNumber":"40bd1de4-e3e8-47e4-a452-7cb9b32f99aa","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,2,5,58,707310000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:05:58.799749","status":"PENDING","updatedAt":[2025,10,5,2,5,58,707354000]}, headers={__ContentTypeId__=[B@8d0625a, kafka_offset=1, __KeyTypeId__=[B@47992983, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3156bc09, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759610159101, kafka_acknowledgment=Acknowledgment for order.created-0@1, __TypeId__=[B@570dca53, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@4945cd1f]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"6a8e200d-3344-4499-a3cb-0d5f3235fe09","orderNumber":"40bd1de4-e3e8-47e4-a452-7cb9b32f99aa","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,2,5,58,707310000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:05:58.799749","status":"PENDING","updatedAt":[2025,10,5,2,5,58,707354000]}, headers={__ContentTypeId__=[B@30bd9584, kafka_offset=1, __KeyTypeId__=[B@40e5b167, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1a655147, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759610159101, kafka_acknowledgment=Acknowledgment for order.created-0@1, __TypeId__=[B@4fa3b45e, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"9179492d-3893-4653-aff4-eb694c6a010e","orderNumber":"4c7d3c88-9b7a-423a-a1f6-7c27dcbb86d0","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":2999.97,"createdAt":[2025,10,5,13,17,23,227752000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:18:40.841978","status":"CANCELLED","updatedAt":[2025,10,5,13,17,23,227796000]}, headers={__ContentTypeId__=[B@531c38c0, kafka_offset=1, __KeyTypeId__=[B@23f973b5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@597d5f4d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759650520859, kafka_acknowledgment=Acknowledgment for order.cancelled-0@1, __TypeId__=[B@4a9c9e8e, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 2 for partition order.created-0
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 2 for partition order.created-0
2025-10-06 12:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 2 for partition order.cancelled-0
2025-10-06 12:15:47 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"cfde2282-fcb9-41a9-94ca-84608512a724","orderNumber":"c2f007f9-afab-46c1-b0f6-3bddcc7fbea3","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,2,21,23,990587000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:21:23.992450","status":"PENDING","updatedAt":[2025,10,5,2,21,23,990602000]}, headers={__ContentTypeId__=[B@433fcd5d, kafka_offset=2, __KeyTypeId__=[B@552c5ec5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3156bc09, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759611084008, kafka_acknowledgment=Acknowledgment for order.created-0@2, __TypeId__=[B@12b2c3ab, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:47 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b7a9d0bd-56cd-4a82-b7ef-29dc61722d4e","orderNumber":"dd671d51-c52e-467b-bd37-754e4804cce9","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,36,5,859548000],"customerEmail":"testcustomer@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:36:22.696339","status":"CANCELLED","updatedAt":[2025,10,5,13,36,5,859555000]}, headers={__ContentTypeId__=[B@5977816c, kafka_offset=2, __KeyTypeId__=[B@5b93581, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@597d5f4d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759651582712, kafka_acknowledgment=Acknowledgment for order.cancelled-0@2, __TypeId__=[B@543b6af5, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@4945cd1f]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"cfde2282-fcb9-41a9-94ca-84608512a724","orderNumber":"c2f007f9-afab-46c1-b0f6-3bddcc7fbea3","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,2,21,23,990587000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:21:23.992450","status":"PENDING","updatedAt":[2025,10,5,2,21,23,990602000]}, headers={__ContentTypeId__=[B@6eac5467, kafka_offset=2, __KeyTypeId__=[B@24e75b83, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1a655147, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759611084008, kafka_acknowledgment=Acknowledgment for order.created-0@2, __TypeId__=[B@1cc85109, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:47 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 3 for partition order.cancelled-0
2025-10-06 12:15:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 3 for partition order.created-0
2025-10-06 12:15:47 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 3 for partition order.created-0
2025-10-06 12:15:47 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@3
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"2db250f4-67f0-4a79-bb51-d46dad7ad65a","orderNumber":"77e4f83b-290c-4f6e-beec-b2b918f50032","orderId":2,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,43,55,498302000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:44:35.370358","status":"CANCELLED","updatedAt":[2025,10,5,13,43,55,498316000]}, headers={__ContentTypeId__=[B@653041a0, kafka_offset=3, __KeyTypeId__=[B@10e8e78f, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@597d5f4d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759652075391, kafka_acknowledgment=Acknowledgment for order.cancelled-0@3, __TypeId__=[B@60536eb2, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:47 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@3
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"cdddf310-e09d-4221-b773-1e1f1807855f","orderNumber":"4c7d3c88-9b7a-423a-a1f6-7c27dcbb86d0","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":2999.97,"createdAt":[2025,10,5,13,17,23,227752000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:17:23.236511","status":"PENDING","updatedAt":[2025,10,5,13,17,23,227796000]}, headers={__ContentTypeId__=[B@36281acf, kafka_offset=3, __KeyTypeId__=[B@2c60e917, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3156bc09, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759650443448, kafka_acknowledgment=Acknowledgment for order.created-0@3, __TypeId__=[B@6c9b20d8, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@3
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@4945cd1f]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"cdddf310-e09d-4221-b773-1e1f1807855f","orderNumber":"4c7d3c88-9b7a-423a-a1f6-7c27dcbb86d0","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":2999.97,"createdAt":[2025,10,5,13,17,23,227752000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:17:23.236511","status":"PENDING","updatedAt":[2025,10,5,13,17,23,227796000]}, headers={__ContentTypeId__=[B@57e4b02d, kafka_offset=3, __KeyTypeId__=[B@374b7621, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1a655147, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759650443448, kafka_acknowledgment=Acknowledgment for order.created-0@3, __TypeId__=[B@62d2cb1e, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:47 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 4 for partition order.cancelled-0
2025-10-06 12:15:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 4 for partition order.created-0
2025-10-06 12:15:47 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 4 for partition order.created-0
2025-10-06 12:15:48 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@4
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"e9596ab6-f8d8-4850-9189-cb4b5a87c9b2","orderNumber":"8ffed856-b73d-4b3a-bd39-b89bf9a4b3c7","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,5,13,55,13,110657000],"customerEmail":"testuser@example.com","customerId":1,"shippingAddress":"123 User Street, User City","timestamp":"2025-10-05T13:55:30.536357","status":"CANCELLED","updatedAt":[2025,10,5,13,55,13,110666000]}, headers={__ContentTypeId__=[B@3b5f6bd8, kafka_offset=4, __KeyTypeId__=[B@7dd1ed7e, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@597d5f4d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759652730543, kafka_acknowledgment=Acknowledgment for order.cancelled-0@4, __TypeId__=[B@76ac1aee, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@4
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@4945cd1f]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"2817f087-4fc7-475a-86f7-ee18ed54f86b","orderNumber":"294cd00b-e7c8-4509-94d1-d460439a9666","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,20,39,830340000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:20:39.832097","status":"PENDING","updatedAt":[2025,10,5,13,20,39,830361000]}, headers={__ContentTypeId__=[B@170cc2e0, kafka_offset=4, __KeyTypeId__=[B@3e1c95c3, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1a655147, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759650639832, kafka_acknowledgment=Acknowledgment for order.created-0@4, __TypeId__=[B@4f09230f, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:48 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@4
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"2817f087-4fc7-475a-86f7-ee18ed54f86b","orderNumber":"294cd00b-e7c8-4509-94d1-d460439a9666","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,20,39,830340000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:20:39.832097","status":"PENDING","updatedAt":[2025,10,5,13,20,39,830361000]}, headers={__ContentTypeId__=[B@6444cb14, kafka_offset=4, __KeyTypeId__=[B@2b6c0962, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3156bc09, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759650639832, kafka_acknowledgment=Acknowledgment for order.created-0@4, __TypeId__=[B@543a2dfb, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 5 for partition order.created-0
2025-10-06 12:15:48 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 5 for partition order.cancelled-0
2025-10-06 12:15:48 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 5 for partition order.created-0
2025-10-06 12:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@5
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@4945cd1f]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b0f426cf-a0a7-4589-a7bc-f216b4e949f8","orderNumber":"639675c4-90a4-42fa-b696-ac16a1a2644c","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,27,22,138475000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:27:22.140228","status":"PENDING","updatedAt":[2025,10,5,13,27,22,138487000]}, headers={__ContentTypeId__=[B@5096ec8f, kafka_offset=5, __KeyTypeId__=[B@35c1ba90, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1a655147, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759651042177, kafka_acknowledgment=Acknowledgment for order.created-0@5, __TypeId__=[B@4b517a6d, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@5
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"1a097506-7279-4c02-8911-3cbd2051b023","orderNumber":"c6a235b3-1434-4c15-b197-e58d3680ca20","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,14,0,58,980609000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T14:02:24.293178","status":"CANCELLED","updatedAt":[2025,10,5,14,0,58,980621000]}, headers={__ContentTypeId__=[B@6b3a9eb6, kafka_offset=5, __KeyTypeId__=[B@1bac92c, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@597d5f4d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759653144311, kafka_acknowledgment=Acknowledgment for order.cancelled-0@5, __TypeId__=[B@5cd6da82, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@5
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b0f426cf-a0a7-4589-a7bc-f216b4e949f8","orderNumber":"639675c4-90a4-42fa-b696-ac16a1a2644c","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,27,22,138475000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:27:22.140228","status":"PENDING","updatedAt":[2025,10,5,13,27,22,138487000]}, headers={__ContentTypeId__=[B@355db5a8, kafka_offset=5, __KeyTypeId__=[B@609c1098, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3156bc09, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759651042177, kafka_acknowledgment=Acknowledgment for order.created-0@5, __TypeId__=[B@1ff7f243, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 6 for partition order.created-0
2025-10-06 12:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 6 for partition order.created-0
2025-10-06 12:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@6
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"3afe55c1-fb98-41fc-8506-d9612ea5205b","orderNumber":"dd671d51-c52e-467b-bd37-754e4804cce9","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,36,5,859548000],"customerEmail":"testcustomer@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:36:05.861915","status":"PENDING","updatedAt":[2025,10,5,13,36,5,859555000]}, headers={__ContentTypeId__=[B@3c5a1668, kafka_offset=6, __KeyTypeId__=[B@17c0f4, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3156bc09, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759651565898, kafka_acknowledgment=Acknowledgment for order.created-0@6, __TypeId__=[B@7afe5c10, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@6
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@4945cd1f]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"3afe55c1-fb98-41fc-8506-d9612ea5205b","orderNumber":"dd671d51-c52e-467b-bd37-754e4804cce9","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,36,5,859548000],"customerEmail":"testcustomer@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:36:05.861915","status":"PENDING","updatedAt":[2025,10,5,13,36,5,859555000]}, headers={__ContentTypeId__=[B@7cb49d08, kafka_offset=6, __KeyTypeId__=[B@5ab68d80, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1a655147, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759651565898, kafka_acknowledgment=Acknowledgment for order.created-0@6, __TypeId__=[B@2ddb7d7f, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 7 for partition order.created-0
2025-10-06 12:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 7 for partition order.created-0
2025-10-06 12:15:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@7
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@4945cd1f]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b60e7e47-569f-4c6d-b029-4c2c9328bcd0","orderNumber":"77e4f83b-290c-4f6e-beec-b2b918f50032","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,43,55,498302000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:43:55.500675","status":"PENDING","updatedAt":[2025,10,5,13,43,55,498316000]}, headers={__ContentTypeId__=[B@6fe6b28c, kafka_offset=7, __KeyTypeId__=[B@327bd1e7, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1a655147, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652035504, kafka_acknowledgment=Acknowledgment for order.created-0@7, __TypeId__=[B@23f03639, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 8 for partition order.created-0
2025-10-06 12:15:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@7
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b60e7e47-569f-4c6d-b029-4c2c9328bcd0","orderNumber":"77e4f83b-290c-4f6e-beec-b2b918f50032","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,43,55,498302000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:43:55.500675","status":"PENDING","updatedAt":[2025,10,5,13,43,55,498316000]}, headers={__ContentTypeId__=[B@757c93b, kafka_offset=7, __KeyTypeId__=[B@17179008, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3156bc09, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652035504, kafka_acknowledgment=Acknowledgment for order.created-0@7, __TypeId__=[B@4a50d5e0, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 8 for partition order.created-0
2025-10-06 12:15:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@8
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@4945cd1f]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"e07d01a8-fa5a-4268-8a2d-032027c60cbf","orderNumber":"22251392-4b09-4b14-9a2d-28ce6e9b9616","orderId":3,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,13,45,2,791477000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:45:02.794013","status":"PENDING","updatedAt":[2025,10,5,13,45,2,791507000]}, headers={__ContentTypeId__=[B@59eb409e, kafka_offset=8, __KeyTypeId__=[B@7a7e5bf0, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1a655147, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=3, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652102794, kafka_acknowledgment=Acknowledgment for order.created-0@8, __TypeId__=[B@751c3732, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 9 for partition order.created-0
2025-10-06 12:15:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@8
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"e07d01a8-fa5a-4268-8a2d-032027c60cbf","orderNumber":"22251392-4b09-4b14-9a2d-28ce6e9b9616","orderId":3,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,13,45,2,791477000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:45:02.794013","status":"PENDING","updatedAt":[2025,10,5,13,45,2,791507000]}, headers={__ContentTypeId__=[B@76a971f3, kafka_offset=8, __KeyTypeId__=[B@298133e8, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3156bc09, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=3, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652102794, kafka_acknowledgment=Acknowledgment for order.created-0@8, __TypeId__=[B@23254e23, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 9 for partition order.created-0
2025-10-06 12:15:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@9
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"baadd731-8880-4034-af61-bb3239c50fbd","orderNumber":"8ffed856-b73d-4b3a-bd39-b89bf9a4b3c7","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,5,13,55,13,110657000],"customerEmail":"testuser@example.com","customerId":1,"shippingAddress":"123 User Street, User City","timestamp":"2025-10-05T13:55:13.115094","status":"PENDING","updatedAt":[2025,10,5,13,55,13,110666000]}, headers={__ContentTypeId__=[B@5a5ef3e3, kafka_offset=9, __KeyTypeId__=[B@6315e05f, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3156bc09, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652713187, kafka_acknowledgment=Acknowledgment for order.created-0@9, __TypeId__=[B@9765f2d, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 10 for partition order.created-0
2025-10-06 12:15:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@9
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@4945cd1f]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"baadd731-8880-4034-af61-bb3239c50fbd","orderNumber":"8ffed856-b73d-4b3a-bd39-b89bf9a4b3c7","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,5,13,55,13,110657000],"customerEmail":"testuser@example.com","customerId":1,"shippingAddress":"123 User Street, User City","timestamp":"2025-10-05T13:55:13.115094","status":"PENDING","updatedAt":[2025,10,5,13,55,13,110666000]}, headers={__ContentTypeId__=[B@41d42d94, kafka_offset=9, __KeyTypeId__=[B@3b5e1594, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1a655147, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652713187, kafka_acknowledgment=Acknowledgment for order.created-0@9, __TypeId__=[B@229d6fa, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 10 for partition order.created-0
2025-10-06 12:15:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@10
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@4945cd1f]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"80147450-718c-47c4-8886-ed5711a0e4a9","orderNumber":"c6a235b3-1434-4c15-b197-e58d3680ca20","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,14,0,58,980609000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T14:00:58.983578","status":"PENDING","updatedAt":[2025,10,5,14,0,58,980621000]}, headers={__ContentTypeId__=[B@2fc82a2f, kafka_offset=10, __KeyTypeId__=[B@61ecee0e, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1a655147, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759653059048, kafka_acknowledgment=Acknowledgment for order.created-0@10, __TypeId__=[B@2e0ec393, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:15:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@10
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"80147450-718c-47c4-8886-ed5711a0e4a9","orderNumber":"c6a235b3-1434-4c15-b197-e58d3680ca20","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,14,0,58,980609000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T14:00:58.983578","status":"PENDING","updatedAt":[2025,10,5,14,0,58,980621000]}, headers={__ContentTypeId__=[B@40520537, kafka_offset=10, __KeyTypeId__=[B@1442aaae, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3156bc09, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759653059048, kafka_acknowledgment=Acknowledgment for order.created-0@10, __TypeId__=[B@5448fb63, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:16:08 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/product-order-service] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-06 12:16:08 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-06 12:16:08 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-10-06 12:16:08 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing HEAD /actuator/health
2025-10-06 12:16:08 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:16:08 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:16:08 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured HEAD /actuator/health
2025-10-06 12:16:22 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-10-06 12:16:22 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:16:22 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:16:22 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-10-06 12:16:22 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Login attempt for user: admin
2025-10-06 12:16:22 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Password provided: admin123
2025-10-06 12:16:22 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Attempting authentication for user: admin
2025-10-06 12:16:22 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 12:16:22 [http-nio-8080-exec-2] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 12:16:22 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 12:16:22 [http-nio-8080-exec-2] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-06 12:16:22 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Authentication successful for user: admin
2025-10-06 12:16:22 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 12:16:22 [http-nio-8080-exec-2] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 12:16:22 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 12:16:22 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - User details loaded: admin
2025-10-06 12:16:22 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - JWT token generated successfully
2025-10-06 12:16:22 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Login successful for user: admin
2025-10-06 12:16:22 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-10-06 12:16:22 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:16:22 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:16:22 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-10-06 12:16:22 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Login attempt for user: customer
2025-10-06 12:16:22 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Password provided: customer123
2025-10-06 12:16:22 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Attempting authentication for user: customer
2025-10-06 12:16:22 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:16:22 [http-nio-8080-exec-4] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:16:22 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 12:16:22 [http-nio-8080-exec-4] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-06 12:16:22 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Authentication successful for user: customer
2025-10-06 12:16:22 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:16:22 [http-nio-8080-exec-4] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:16:22 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 12:16:22 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - User details loaded: customer
2025-10-06 12:16:22 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - JWT token generated successfully
2025-10-06 12:16:22 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Login successful for user: customer
2025-10-06 12:16:22 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/v1/customers
2025-10-06 12:16:22 [http-nio-8080-exec-6] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 12:16:22 [http-nio-8080-exec-6] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 12:16:22 [http-nio-8080-exec-6] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 12:16:22 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/v1/customers
2025-10-06 12:16:22 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.CustomerController.getAllCustomers(org.springframework.data.domain.Pageable); target is of class [com.ecommerce.productorder.controller.CustomerController]
2025-10-06 12:16:22 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.CustomerController.getAllCustomers(org.springframework.data.domain.Pageable); target is of class [com.ecommerce.productorder.controller.CustomerController]
2025-10-06 12:16:22 [http-nio-8080-exec-6] DEBUG c.e.p.controller.CustomerController - Retrieving all customers with pagination: Page request [number: 0, size 20, sort: UNSORTED]
2025-10-06 12:16:22 [http-nio-8080-exec-6] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving all customers with pagination: Page request [number: 0, size 20, sort: UNSORTED]
2025-10-06 12:16:37 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-10-06 12:16:37 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:16:37 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:16:37 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-10-06 12:16:37 [http-nio-8080-exec-8] INFO  c.e.p.controller.AuthController - Login attempt for user: customer
2025-10-06 12:16:37 [http-nio-8080-exec-8] INFO  c.e.p.controller.AuthController - Password provided: customer123
2025-10-06 12:16:37 [http-nio-8080-exec-8] INFO  c.e.p.controller.AuthController - Attempting authentication for user: customer
2025-10-06 12:16:37 [http-nio-8080-exec-8] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:16:37 [http-nio-8080-exec-8] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:16:37 [http-nio-8080-exec-8] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 12:16:37 [http-nio-8080-exec-8] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-06 12:16:37 [http-nio-8080-exec-8] INFO  c.e.p.controller.AuthController - Authentication successful for user: customer
2025-10-06 12:16:37 [http-nio-8080-exec-8] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:16:37 [http-nio-8080-exec-8] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:16:37 [http-nio-8080-exec-8] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 12:16:37 [http-nio-8080-exec-8] INFO  c.e.p.controller.AuthController - User details loaded: customer
2025-10-06 12:16:37 [http-nio-8080-exec-8] INFO  c.e.p.controller.AuthController - JWT token generated successfully
2025-10-06 12:16:37 [http-nio-8080-exec-8] INFO  c.e.p.controller.AuthController - Login successful for user: customer
2025-10-06 12:16:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/orders
2025-10-06 12:16:37 [http-nio-8080-exec-10] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:16:37 [http-nio-8080-exec-10] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:16:37 [http-nio-8080-exec-10] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 12:16:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/orders
2025-10-06 12:16:37 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 12:16:37 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 12:16:37 [http-nio-8080-exec-10] INFO  c.e.p.controller.OrderController - Creating order for customer ID: 2
2025-10-06 12:16:37 [http-nio-8080-exec-10] INFO  c.e.p.d.s.impl.OrderServiceImpl - Creating order for customer ID: 2
2025-10-06 12:16:37 [http-nio-8080-exec-10] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created with ID: 1
2025-10-06 12:16:37 [http-nio-8080-exec-10] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Publishing order created event for order ID: 1
2025-10-06 12:16:37 [http-nio-8080-exec-10] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2025-10-06 12:16:37 [http-nio-8080-exec-10] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2025-10-06 12:16:37 [http-nio-8080-exec-10] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 12:16:37 [http-nio-8080-exec-10] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 12:16:37 [http-nio-8080-exec-10] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759733197712
2025-10-06 12:16:37 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 12:16:37 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 12:16:37 [http-nio-8080-exec-10] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Order created event published successfully for order ID: 1
2025-10-06 12:16:37 [http-nio-8080-exec-10] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created successfully for customer ID: 2
2025-10-06 12:16:37 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 1006 with epoch 0
2025-10-06 12:16:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-10-06 12:16:37 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:16:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:16:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-10-06 12:16:37 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Login attempt for user: admin
2025-10-06 12:16:37 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Password provided: admin123
2025-10-06 12:16:37 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Attempting authentication for user: admin
2025-10-06 12:16:37 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 12:16:37 [http-nio-8080-exec-2] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 12:16:37 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 12:16:37 [http-nio-8080-exec-2] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-06 12:16:37 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Authentication successful for user: admin
2025-10-06 12:16:37 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 12:16:37 [http-nio-8080-exec-2] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 12:16:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@11
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@4945cd1f]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"07ca2c52-026c-4db1-9b9b-6f36fc7d83d5","orderNumber":"e363bf6d-5e07-47d6-a606-8826fb9b7c9a","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,6,12,16,37,643528000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"123 Customer Street, Customer City","timestamp":"2025-10-06T12:16:37.656400","status":"PENDING","updatedAt":[2025,10,6,12,16,37,643540000]}, headers={__ContentTypeId__=[B@5a09769d, kafka_offset=11, __KeyTypeId__=[B@59cf4bd1, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1a655147, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759733197742, kafka_acknowledgment=Acknowledgment for order.created-0@11, __TypeId__=[B@c86ef5e, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:16:37 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@11
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"07ca2c52-026c-4db1-9b9b-6f36fc7d83d5","orderNumber":"e363bf6d-5e07-47d6-a606-8826fb9b7c9a","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,6,12,16,37,643528000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"123 Customer Street, Customer City","timestamp":"2025-10-06T12:16:37.656400","status":"PENDING","updatedAt":[2025,10,6,12,16,37,643540000]}, headers={__ContentTypeId__=[B@18e0bd52, kafka_offset=11, __KeyTypeId__=[B@466dfbba, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3156bc09, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759733197742, kafka_acknowledgment=Acknowledgment for order.created-0@11, __TypeId__=[B@2f70172d, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:16:37 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 12:16:37 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - User details loaded: admin
2025-10-06 12:16:37 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - JWT token generated successfully
2025-10-06 12:16:37 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Login successful for user: admin
2025-10-06 12:23:22 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-10-06 12:23:22 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:23:22 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:23:22 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-10-06 12:23:22 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Login attempt for user: admin
2025-10-06 12:23:22 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Password provided: admin123
2025-10-06 12:23:22 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Attempting authentication for user: admin
2025-10-06 12:23:22 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 12:23:22 [http-nio-8080-exec-4] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 12:23:22 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 12:23:22 [http-nio-8080-exec-4] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-06 12:23:22 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Authentication successful for user: admin
2025-10-06 12:23:22 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 12:23:22 [http-nio-8080-exec-4] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 12:23:22 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 12:23:22 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - User details loaded: admin
2025-10-06 12:23:22 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - JWT token generated successfully
2025-10-06 12:23:22 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Login successful for user: admin
2025-10-06 12:23:22 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/v1/orders/1
2025-10-06 12:23:22 [http-nio-8080-exec-6] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 12:23:22 [http-nio-8080-exec-6] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 12:23:22 [http-nio-8080-exec-6] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 12:23:22 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/v1/orders/1
2025-10-06 12:23:22 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.cancelOrder(java.lang.Long); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 12:23:22 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.cancelOrder(java.lang.Long); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 12:23:22 [http-nio-8080-exec-6] INFO  c.e.p.controller.OrderController - Cancelling order with id: 1
2025-10-06 12:23:22 [http-nio-8080-exec-6] INFO  c.e.p.d.s.impl.OrderServiceImpl - Cancelling order with ID: 1
2025-10-06 12:23:22 [http-nio-8080-exec-6] INFO  c.e.p.d.s.impl.OrderServiceImpl - Restoring product stock for order ID: 1
2025-10-06 12:23:22 [http-nio-8080-exec-6] INFO  c.e.p.d.s.impl.ProductServiceImpl - Restoring product stock for id: 1 by 2
2025-10-06 12:23:22 [http-nio-8080-exec-6] INFO  c.e.p.d.s.impl.ProductServiceImpl - Product stock restored successfully for id: 1
2025-10-06 12:23:22 [http-nio-8080-exec-6] INFO  c.e.p.d.s.impl.OrderServiceImpl - Restored 2 units of product iPhone 15 (ID: 1)
2025-10-06 12:23:22 [http-nio-8080-exec-6] INFO  c.e.p.d.s.impl.OrderServiceImpl - Completed stock restoration for order ID: 1
2025-10-06 12:23:22 [http-nio-8080-exec-6] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Publishing order cancelled event for order ID: 1
2025-10-06 12:23:22 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order.cancelled-0 to 10 since the associated topicId changed from null to hAqa7gqzSgOGNgRsGTUgvg
2025-10-06 12:23:22 [http-nio-8080-exec-6] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Order cancelled event published successfully for order ID: 1
2025-10-06 12:23:22 [http-nio-8080-exec-6] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order cancelled successfully for order ID: 1
2025-10-06 12:23:22 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@6
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"75d8e24c-c15d-4cd5-a724-b0473361062d","orderNumber":"e363bf6d-5e07-47d6-a606-8826fb9b7c9a","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,6,12,16,37,643528000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"123 Customer Street, Customer City","timestamp":"2025-10-06T12:23:22.153599","status":"CANCELLED","updatedAt":[2025,10,6,12,16,37,643540000]}, headers={__ContentTypeId__=[B@45789030, kafka_offset=6, __KeyTypeId__=[B@a675770, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@597d5f4d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759733602170, kafka_acknowledgment=Acknowledgment for order.cancelled-0@6, __TypeId__=[B@6969064c, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:24:35 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/query.do?jsessionid=8be3e47bc78377879f8e5c8f601857cc
2025-10-06 12:24:35 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:35 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:35 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/query.do?jsessionid=8be3e47bc78377879f8e5c8f601857cc
2025-10-06 12:24:35 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/stylesheet.css
2025-10-06 12:24:35 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:35 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:35 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/stylesheet.css
2025-10-06 12:24:35 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/login.jsp?jsessionid=bc251ba974b41a896d19e4e4fb8312e5
2025-10-06 12:24:35 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:35 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:35 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/login.jsp?jsessionid=bc251ba974b41a896d19e4e4fb8312e5
2025-10-06 12:24:35 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/login.jsp
2025-10-06 12:24:35 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:35 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:35 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/login.jsp
2025-10-06 12:24:35 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/background.gif
2025-10-06 12:24:35 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:35 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:35 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/background.gif
2025-10-06 12:24:35 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/login.jsp?jsessionid=ee85128e3f6fbd0e43eed98d75512b77
2025-10-06 12:24:35 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:35 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:35 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/login.jsp?jsessionid=ee85128e3f6fbd0e43eed98d75512b77
2025-10-06 12:24:39 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/login.do?jsessionid=ee85128e3f6fbd0e43eed98d75512b77
2025-10-06 12:24:39 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:39 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:39 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/login.do?jsessionid=ee85128e3f6fbd0e43eed98d75512b77
2025-10-06 12:24:39 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tables.do?jsessionid=ee85128e3f6fbd0e43eed98d75512b77
2025-10-06 12:24:39 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/header.jsp?jsessionid=ee85128e3f6fbd0e43eed98d75512b77
2025-10-06 12:24:39 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:39 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:39 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/query.jsp?jsessionid=ee85128e3f6fbd0e43eed98d75512b77
2025-10-06 12:24:39 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:39 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:39 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/header.jsp?jsessionid=ee85128e3f6fbd0e43eed98d75512b77
2025-10-06 12:24:39 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/help.jsp?jsessionid=ee85128e3f6fbd0e43eed98d75512b77
2025-10-06 12:24:39 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tables.do?jsessionid=ee85128e3f6fbd0e43eed98d75512b77
2025-10-06 12:24:39 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:39 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:39 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/query.jsp?jsessionid=ee85128e3f6fbd0e43eed98d75512b77
2025-10-06 12:24:39 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:39 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:39 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/help.jsp?jsessionid=ee85128e3f6fbd0e43eed98d75512b77
2025-10-06 12:24:39 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_commit.gif
2025-10-06 12:24:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_line.gif
2025-10-06 12:24:39 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_refresh.gif
2025-10-06 12:24:39 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_run_selected.gif
2025-10-06 12:24:39 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_disconnect.gif
2025-10-06 12:24:39 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:39 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:39 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:39 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:39 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:39 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:39 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_run_selected.gif
2025-10-06 12:24:39 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:39 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:39 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_line.gif
2025-10-06 12:24:39 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_refresh.gif
2025-10-06 12:24:39 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_commit.gif
2025-10-06 12:24:39 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_disconnect.gif
2025-10-06 12:24:39 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_stop.gif
2025-10-06 12:24:39 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_rollback.gif
2025-10-06 12:24:39 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_history.gif
2025-10-06 12:24:39 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:39 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:39 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_run.gif
2025-10-06 12:24:39 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_help.gif
2025-10-06 12:24:39 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_stop.gif
2025-10-06 12:24:39 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:39 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:39 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:39 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:39 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:39 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:39 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:39 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:39 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_help.gif
2025-10-06 12:24:39 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_run.gif
2025-10-06 12:24:39 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_rollback.gif
2025-10-06 12:24:39 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_history.gif
2025-10-06 12:24:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree.js
2025-10-06 12:24:40 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:40 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree.js
2025-10-06 12:24:40 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_plus.gif
2025-10-06 12:24:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_table.gif
2025-10-06 12:24:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_minus.gif
2025-10-06 12:24:40 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:40 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:40 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_table.gif
2025-10-06 12:24:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_empty.gif
2025-10-06 12:24:40 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_plus.gif
2025-10-06 12:24:40 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:40 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_empty.gif
2025-10-06 12:24:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_database.gif
2025-10-06 12:24:40 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_column.gif
2025-10-06 12:24:40 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:40 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_database.gif
2025-10-06 12:24:40 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:40 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:40 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_column.gif
2025-10-06 12:24:40 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:40 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_minus.gif
2025-10-06 12:24:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_type.gif
2025-10-06 12:24:40 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_index_az.gif
2025-10-06 12:24:40 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_type.gif
2025-10-06 12:24:40 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_index.gif
2025-10-06 12:24:40 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:40 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:40 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:40 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:40 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_index.gif
2025-10-06 12:24:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_index_az.gif
2025-10-06 12:24:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_folder.gif
2025-10-06 12:24:40 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:40 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_folder.gif
2025-10-06 12:24:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_view.gif
2025-10-06 12:24:40 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:40 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_view.gif
2025-10-06 12:24:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_info.gif
2025-10-06 12:24:40 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_users.gif
2025-10-06 12:24:40 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:40 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:40 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:40 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:40 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_users.gif
2025-10-06 12:24:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_user.gif
2025-10-06 12:24:40 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:40 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_user.gif
2025-10-06 12:24:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_info.gif
2025-10-06 12:24:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Node -1 disconnected.
2025-10-06 12:24:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Node -1 disconnected.
2025-10-06 12:24:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Node -1 disconnected.
2025-10-06 12:24:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Node -1 disconnected.
2025-10-06 12:24:44 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/query.do?jsessionid=ee85128e3f6fbd0e43eed98d75512b77
2025-10-06 12:24:44 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:44 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:44 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/query.do?jsessionid=ee85128e3f6fbd0e43eed98d75512b77
2025-10-06 12:24:44 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/table.js
2025-10-06 12:24:44 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:24:44 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:24:44 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/table.js
2025-10-06 12:25:15 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-10-06 12:25:15 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:25:15 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:25:15 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-10-06 12:25:15 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Login attempt for user: customer
2025-10-06 12:25:15 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Password provided: customer123
2025-10-06 12:25:15 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Attempting authentication for user: customer
2025-10-06 12:25:15 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:25:15 [http-nio-8080-exec-4] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:25:15 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 12:25:15 [http-nio-8080-exec-4] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-06 12:25:15 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Authentication successful for user: customer
2025-10-06 12:25:15 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:25:15 [http-nio-8080-exec-4] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:25:15 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 12:25:15 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - User details loaded: customer
2025-10-06 12:25:15 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - JWT token generated successfully
2025-10-06 12:25:15 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Login successful for user: customer
2025-10-06 12:25:52 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -1 disconnected.
2025-10-06 12:27:27 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/orders
2025-10-06 12:27:27 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:27:27 [http-nio-8080-exec-9] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:27:27 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 12:27:27 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/orders
2025-10-06 12:27:27 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 12:27:27 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 12:27:27 [http-nio-8080-exec-9] INFO  c.e.p.controller.OrderController - Creating order for customer ID: 2
2025-10-06 12:27:27 [http-nio-8080-exec-9] INFO  c.e.p.d.s.impl.OrderServiceImpl - Creating order for customer ID: 2
2025-10-06 12:27:27 [http-nio-8080-exec-9] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created with ID: 2
2025-10-06 12:27:27 [http-nio-8080-exec-9] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Publishing order created event for order ID: 2
2025-10-06 12:27:27 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 12:27:27 [http-nio-8080-exec-9] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Order created event published successfully for order ID: 2
2025-10-06 12:27:27 [http-nio-8080-exec-9] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created successfully for customer ID: 2
2025-10-06 12:27:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@12
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"f2f06bc0-0107-4262-8cd7-168a828de38c","orderNumber":"b0be4aa0-b061-4387-9a52-347abd1b468d","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,6,12,27,27,611165000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T12:27:27.614105","status":"PENDING","updatedAt":[2025,10,6,12,27,27,611182000]}, headers={__ContentTypeId__=[B@6914a097, kafka_offset=12, __KeyTypeId__=[B@6b576118, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3156bc09, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759733847631, kafka_acknowledgment=Acknowledgment for order.created-0@12, __TypeId__=[B@73b8944a, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:27:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@12
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@4945cd1f]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"f2f06bc0-0107-4262-8cd7-168a828de38c","orderNumber":"b0be4aa0-b061-4387-9a52-347abd1b468d","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,6,12,27,27,611165000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T12:27:27.614105","status":"PENDING","updatedAt":[2025,10,6,12,27,27,611182000]}, headers={__ContentTypeId__=[B@fb6f502, kafka_offset=12, __KeyTypeId__=[B@2a5e07e0, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1a655147, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759733847631, kafka_acknowledgment=Acknowledgment for order.created-0@12, __TypeId__=[B@3ee77308, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:27:37 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/v1/products/categories
2025-10-06 12:27:37 [http-nio-8080-exec-5] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:27:37 [http-nio-8080-exec-5] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:27:37 [http-nio-8080-exec-5] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 12:27:37 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/v1/products/categories
2025-10-06 12:27:37 [http-nio-8080-exec-5] DEBUG c.e.p.controller.CategoryController - Retrieving all categories
2025-10-06 12:28:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/v1/payments/order/1
2025-10-06 12:28:47 [http-nio-8080-exec-6] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:28:47 [http-nio-8080-exec-6] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:28:47 [http-nio-8080-exec-6] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 12:28:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/v1/payments/order/1
2025-10-06 12:28:47 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.getPaymentByOrderId(java.lang.Long); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 12:28:47 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.getPaymentByOrderId(java.lang.Long); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 12:28:47 [http-nio-8080-exec-6] DEBUG c.e.p.controller.PaymentController - Retrieving payment for order ID: 1
2025-10-06 12:28:47 [http-nio-8080-exec-6] DEBUG c.e.p.p.s.impl.PaymentServiceImpl - Retrieving payment by order ID: 1
2025-10-06 12:29:50 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments
2025-10-06 12:29:50 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:29:50 [http-nio-8080-exec-2] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:29:50 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 12:29:50 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments
2025-10-06 12:29:50 [http-nio-8080-exec-2] ERROR c.e.p.c.GlobalExceptionHandler - Validation error: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.ecommerce.productorder.payment.dto.response.PaymentResponse> com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest): [Field error in object 'processPaymentRequest' on field 'customerEmail': rejected value [string]; codes [Email.processPaymentRequest.customerEmail,Email.customerEmail,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [processPaymentRequest.customerEmail,customerEmail]; arguments []; default message [customerEmail],[Ljakarta.validation.constraints.Pattern$Flag;@2925c4a,.*]; default message [Email must be valid]] 
2025-10-06 12:30:11 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments
2025-10-06 12:30:11 [http-nio-8080-exec-1] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:30:11 [http-nio-8080-exec-1] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:30:11 [http-nio-8080-exec-1] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 12:30:11 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments
2025-10-06 12:30:11 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 12:30:11 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 12:30:11 [http-nio-8080-exec-1] INFO  c.e.p.controller.PaymentController - Processing payment for order ID: 1
2025-10-06 12:30:11 [http-nio-8080-exec-1] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing payment for order ID: 1, amount: 991.00
2025-10-06 12:30:11 [http-nio-8080-exec-1] ERROR c.e.p.p.s.impl.PaymentServiceImpl - Error processing payment for order ID: 1
java.lang.IllegalArgumentException: No enum constant com.ecommerce.productorder.payment.domain.entity.Payment.PaymentMethod.STRING
	at java.base/java.lang.Enum.valueOf(Enum.java:273)
	at com.ecommerce.productorder.payment.domain.entity.Payment$PaymentMethod.valueOf(Payment.java:174)
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl.createPaymentEntity(PaymentServiceImpl.java:344)
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl.processPayment(PaymentServiceImpl.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl$$SpringCGLIB$$0.processPayment(<generated>)
	at com.ecommerce.productorder.controller.PaymentController.processPayment(PaymentController.java:71)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:199)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.controller.PaymentController$$SpringCGLIB$$0.processPayment(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.ecommerce.productorder.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-10-06 12:30:11 [http-nio-8080-exec-1] ERROR c.e.p.c.GlobalExceptionHandler - Business rule violation: Failed to process payment: No enum constant com.ecommerce.productorder.payment.domain.entity.Payment.PaymentMethod.STRING
2025-10-06 12:31:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments
2025-10-06 12:31:27 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:31:27 [http-nio-8080-exec-4] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:31:27 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 12:31:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments
2025-10-06 12:31:27 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 12:31:27 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 12:31:27 [http-nio-8080-exec-4] INFO  c.e.p.controller.PaymentController - Processing payment for order ID: 1
2025-10-06 12:31:27 [http-nio-8080-exec-4] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing payment for order ID: 1, amount: 991.00
2025-10-06 12:31:27 [http-nio-8080-exec-4] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Payment created with ID: 859d87c3-704f-4843-ae6b-b7b3e98bc894
2025-10-06 12:31:27 [http-nio-8080-exec-4] INFO  c.e.p.p.s.i.PaymentGatewayServiceImpl - Processing payment through gateway for payment ID: 859d87c3-704f-4843-ae6b-b7b3e98bc894
2025-10-06 12:31:27 [http-nio-8080-exec-4] DEBUG c.e.p.p.s.i.PaymentGatewayServiceImpl - Validating payment method for request: CREDIT_CARD
2025-10-06 12:31:27 [http-nio-8080-exec-4] WARN  c.e.p.p.s.i.PaymentGatewayServiceImpl - Invalid card number: 0205717576397294
2025-10-06 12:31:27 [http-nio-8080-exec-4] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Publishing payment processed event for payment ID: 859d87c3-704f-4843-ae6b-b7b3e98bc894
2025-10-06 12:31:27 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition payment.processed-0 to 10 since the associated topicId changed from null to t5NxQuSTQC2hC3JUcDzeGg
2025-10-06 12:31:27 [http-nio-8080-exec-4] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Payment processed event published successfully for payment ID: 859d87c3-704f-4843-ae6b-b7b3e98bc894
2025-10-06 12:31:27 [http-nio-8080-exec-4] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Payment processed successfully for order ID: 1
2025-10-06 12:31:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for payment.processed-0@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handlePaymentProcessedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@4945cd1f]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"723ace4d-c757-4f6a-a166-d253e64e55e9","amount":991.00,"orderId":1,"eventType":"PAYMENT_PROCESSED","serviceName":"product-order-service","transactionId":null,"serviceVersion":"1.0.0","createdAt":[2025,10,6,12,31,27,376058000],"paymentId":"859d87c3-704f-4843-ae6b-b7b3e98bc894","gatewayResponse":null,"customerId":2,"processedAt":[2025,10,6,12,31,27,378405000],"paymentMethod":"CREDIT_CARD","timestamp":"2025-10-06T12:31:27.378803","status":"FAILED","updatedAt":[2025,10,6,12,31,27,376082000]}, headers={__ContentTypeId__=[B@1894d374, kafka_offset=0, __KeyTypeId__=[B@53a0fe2c, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3ce52323, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=859d87c3-704f-4843-ae6b-b7b3e98bc894, kafka_receivedTopic=payment.processed, kafka_receivedTimestamp=1759734087381, kafka_acknowledgment=Acknowledgment for payment.processed-0@0, __TypeId__=[B@4f05b1f6, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:34:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-10-06 12:34:32 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:34:32 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:34:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-10-06 12:34:32 [http-nio-8080-exec-9] INFO  c.e.p.controller.AuthController - Login attempt for user: customer
2025-10-06 12:34:32 [http-nio-8080-exec-9] INFO  c.e.p.controller.AuthController - Password provided: customer123
2025-10-06 12:34:32 [http-nio-8080-exec-9] INFO  c.e.p.controller.AuthController - Attempting authentication for user: customer
2025-10-06 12:34:32 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:34:32 [http-nio-8080-exec-9] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:34:32 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 12:34:32 [http-nio-8080-exec-9] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-06 12:34:32 [http-nio-8080-exec-9] INFO  c.e.p.controller.AuthController - Authentication successful for user: customer
2025-10-06 12:34:32 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:34:32 [http-nio-8080-exec-9] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:34:32 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 12:34:32 [http-nio-8080-exec-9] INFO  c.e.p.controller.AuthController - User details loaded: customer
2025-10-06 12:34:32 [http-nio-8080-exec-9] INFO  c.e.p.controller.AuthController - JWT token generated successfully
2025-10-06 12:34:32 [http-nio-8080-exec-9] INFO  c.e.p.controller.AuthController - Login successful for user: customer
2025-10-06 12:34:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments
2025-10-06 12:34:32 [http-nio-8080-exec-5] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:34:32 [http-nio-8080-exec-5] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:34:32 [http-nio-8080-exec-5] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 12:34:32 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments
2025-10-06 12:34:32 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 12:34:32 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 12:34:32 [http-nio-8080-exec-5] INFO  c.e.p.controller.PaymentController - Processing payment for order ID: 1
2025-10-06 12:34:32 [http-nio-8080-exec-5] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing payment for order ID: 1, amount: 991.00
2025-10-06 12:34:32 [http-nio-8080-exec-5] ERROR c.e.p.p.s.impl.PaymentServiceImpl - Error processing payment for order ID: 1
com.ecommerce.productorder.exception.BusinessException: Payment already exists for order ID: 1
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl.processPayment(PaymentServiceImpl.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl$$SpringCGLIB$$0.processPayment(<generated>)
	at com.ecommerce.productorder.controller.PaymentController.processPayment(PaymentController.java:71)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:199)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.controller.PaymentController$$SpringCGLIB$$0.processPayment(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.ecommerce.productorder.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-10-06 12:34:32 [http-nio-8080-exec-5] ERROR c.e.p.c.GlobalExceptionHandler - Business rule violation: Failed to process payment: Payment already exists for order ID: 1
2025-10-06 12:34:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-10-06 12:34:43 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:34:43 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:34:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-10-06 12:34:43 [http-nio-8080-exec-3] INFO  c.e.p.controller.AuthController - Login attempt for user: customer
2025-10-06 12:34:43 [http-nio-8080-exec-3] INFO  c.e.p.controller.AuthController - Password provided: customer123
2025-10-06 12:34:43 [http-nio-8080-exec-3] INFO  c.e.p.controller.AuthController - Attempting authentication for user: customer
2025-10-06 12:34:43 [http-nio-8080-exec-3] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:34:43 [http-nio-8080-exec-3] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:34:43 [http-nio-8080-exec-3] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 12:34:43 [http-nio-8080-exec-3] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-06 12:34:43 [http-nio-8080-exec-3] INFO  c.e.p.controller.AuthController - Authentication successful for user: customer
2025-10-06 12:34:43 [http-nio-8080-exec-3] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:34:43 [http-nio-8080-exec-3] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:34:43 [http-nio-8080-exec-3] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 12:34:43 [http-nio-8080-exec-3] INFO  c.e.p.controller.AuthController - User details loaded: customer
2025-10-06 12:34:43 [http-nio-8080-exec-3] INFO  c.e.p.controller.AuthController - JWT token generated successfully
2025-10-06 12:34:43 [http-nio-8080-exec-3] INFO  c.e.p.controller.AuthController - Login successful for user: customer
2025-10-06 12:34:43 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/orders
2025-10-06 12:34:43 [http-nio-8080-exec-7] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:34:43 [http-nio-8080-exec-7] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:34:43 [http-nio-8080-exec-7] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 12:34:43 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/orders
2025-10-06 12:34:43 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 12:34:43 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 12:34:43 [http-nio-8080-exec-7] INFO  c.e.p.controller.OrderController - Creating order for customer ID: 2
2025-10-06 12:34:43 [http-nio-8080-exec-7] INFO  c.e.p.d.s.impl.OrderServiceImpl - Creating order for customer ID: 2
2025-10-06 12:34:43 [http-nio-8080-exec-7] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created with ID: 3
2025-10-06 12:34:43 [http-nio-8080-exec-7] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Publishing order created event for order ID: 3
2025-10-06 12:34:43 [http-nio-8080-exec-7] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Order created event published successfully for order ID: 3
2025-10-06 12:34:43 [http-nio-8080-exec-7] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created successfully for customer ID: 2
2025-10-06 12:34:43 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@13
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"3d450892-dfc9-4aa1-831d-0ca22a29622e","orderNumber":"63073bd3-dae7-4438-b42b-d5c888ed9a82","orderId":3,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,12,34,43,877389000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"123 Customer Street, Customer City","timestamp":"2025-10-06T12:34:43.879592","status":"PENDING","updatedAt":[2025,10,6,12,34,43,877406000]}, headers={__ContentTypeId__=[B@2dfc6a83, kafka_offset=13, __KeyTypeId__=[B@4573476a, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3156bc09, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=3, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759734283879, kafka_acknowledgment=Acknowledgment for order.created-0@13, __TypeId__=[B@33792314, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:34:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@13
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@4945cd1f]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"3d450892-dfc9-4aa1-831d-0ca22a29622e","orderNumber":"63073bd3-dae7-4438-b42b-d5c888ed9a82","orderId":3,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,12,34,43,877389000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"123 Customer Street, Customer City","timestamp":"2025-10-06T12:34:43.879592","status":"PENDING","updatedAt":[2025,10,6,12,34,43,877406000]}, headers={__ContentTypeId__=[B@55cc5716, kafka_offset=13, __KeyTypeId__=[B@4659ebcc, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1a655147, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=3, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759734283879, kafka_acknowledgment=Acknowledgment for order.created-0@13, __TypeId__=[B@54d753d7, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 12:34:44 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments
2025-10-06 12:34:44 [http-nio-8080-exec-1] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:34:44 [http-nio-8080-exec-1] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:34:44 [http-nio-8080-exec-1] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 12:34:44 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments
2025-10-06 12:34:44 [http-nio-8080-exec-1] ERROR c.e.p.c.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('3' (code 51)): was expecting comma to separate Object entries
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:406)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:354)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:183)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:136)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.ecommerce.productorder.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character ('3' (code 51)): was expecting comma to separate Object entries
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 3, column: 2]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2477)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:750)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:674)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(UTF8StreamJsonParser.java:1062)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:399)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2105)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1481)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:395)
	... 132 common frames omitted
2025-10-06 12:35:12 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/v1/payments/order/1
2025-10-06 12:35:12 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:35:12 [http-nio-8080-exec-4] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:35:12 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 12:35:12 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/v1/payments/order/1
2025-10-06 12:35:12 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.getPaymentByOrderId(java.lang.Long); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 12:35:12 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.getPaymentByOrderId(java.lang.Long); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 12:35:12 [http-nio-8080-exec-4] DEBUG c.e.p.controller.PaymentController - Retrieving payment for order ID: 1
2025-10-06 12:35:12 [http-nio-8080-exec-4] DEBUG c.e.p.p.s.impl.PaymentServiceImpl - Retrieving payment by order ID: 1
2025-10-06 12:35:41 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/v1/orders/1
2025-10-06 12:35:41 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 12:35:41 [http-nio-8080-exec-9] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 12:35:41 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 12:35:41 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/v1/orders/1
2025-10-06 12:35:41 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.getOrderById(java.lang.Long); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 12:35:41 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.getOrderById(java.lang.Long); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 12:35:41 [http-nio-8080-exec-9] DEBUG c.e.p.controller.OrderController - Retrieving order with id: 1
2025-10-06 12:35:41 [http-nio-8080-exec-9] DEBUG c.e.p.d.s.impl.OrderServiceImpl - Retrieving order by ID: 1
2025-10-06 12:35:52 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 12:39:07 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/query.do?jsessionid=ee85128e3f6fbd0e43eed98d75512b77
2025-10-06 12:39:07 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:39:07 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:39:07 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/query.do?jsessionid=ee85128e3f6fbd0e43eed98d75512b77
2025-10-06 12:39:07 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/stylesheet.css
2025-10-06 12:39:07 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:39:07 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:39:07 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/stylesheet.css
2025-10-06 12:39:07 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/table.js
2025-10-06 12:39:07 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:39:07 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:39:07 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/table.js
2025-10-06 12:39:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/query.do?jsessionid=ee85128e3f6fbd0e43eed98d75512b77
2025-10-06 12:39:31 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:39:31 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:39:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/query.do?jsessionid=ee85128e3f6fbd0e43eed98d75512b77
2025-10-06 12:39:31 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/table.js
2025-10-06 12:39:31 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/stylesheet.css
2025-10-06 12:39:31 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:39:31 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 12:39:31 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:39:31 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 12:39:31 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/stylesheet.css
2025-10-06 12:39:31 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/table.js
2025-10-06 14:19:37 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 14:19:37 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 14:19:37 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 14:19:37 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 14:19:37 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 14:19:37 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 14:19:37 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 14:19:37 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 14:19:37 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 14:19:37 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 14:19:37 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 14:19:37 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 14:19:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 14:19:37 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 14:19:37 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 14:19:37 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 14:20:01 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=16m24s352ms).
2025-10-06 14:30:12 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 14:30:12 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 14:30:12 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 14:30:13 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 14:30:13 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 14:30:13 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 14:30:13 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 14:30:13 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 14:30:13 [kafka-coordinator-heartbeat-thread | notification-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Client requested disconnect from node 2147483646
2025-10-06 14:30:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 14:30:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 14:30:13 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Disconnecting from node 1 due to request timeout.
2025-10-06 14:30:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 14:30:13 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cancelled in-flight FETCH request with correlation id 13501 due to node 1 being disconnected (elapsed time since creation: 571009ms, elapsed time since send: 571009ms, request timeout: 30000ms)
2025-10-06 14:30:13 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2025-10-06 14:30:13 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 14:30:13 [kafka-coordinator-heartbeat-thread | inventory-service] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Client requested disconnect from node 2147483646
2025-10-06 14:30:13 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Error sending fetch request (sessionId=636441953, epoch=11287) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-10-06 14:30:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 14:30:31 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=9m59s658ms).
2025-10-06 14:32:12 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/orders
2025-10-06 14:32:12 [http-nio-8080-exec-5] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 14:32:12 [http-nio-8080-exec-5] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 14:32:12 [http-nio-8080-exec-5] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 14:32:12 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/orders
2025-10-06 14:32:12 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 14:32:12 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 14:32:12 [http-nio-8080-exec-5] INFO  c.e.p.controller.OrderController - Creating order for customer ID: 2
2025-10-06 14:32:12 [http-nio-8080-exec-5] INFO  c.e.p.d.s.impl.OrderServiceImpl - Creating order for customer ID: 2
2025-10-06 14:32:12 [http-nio-8080-exec-5] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created with ID: 4
2025-10-06 14:32:12 [http-nio-8080-exec-5] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Publishing order created event for order ID: 4
2025-10-06 14:32:12 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 14:32:12 [http-nio-8080-exec-5] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Order created event published successfully for order ID: 4
2025-10-06 14:32:12 [http-nio-8080-exec-5] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created successfully for customer ID: 2
2025-10-06 14:32:12 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@14
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"28611ee8-81f5-4f5b-a647-12b5f0099484","orderNumber":"194030fe-e4cf-4f17-9135-32b410e8ebd3","orderId":4,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":15999.84,"createdAt":[2025,10,6,14,32,12,304814000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T14:32:12.307924","status":"PENDING","updatedAt":[2025,10,6,14,32,12,304828000]}, headers={__ContentTypeId__=[B@4f53946b, kafka_offset=14, __KeyTypeId__=[B@3f201c2a, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3156bc09, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=4, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759741332312, kafka_acknowledgment=Acknowledgment for order.created-0@14, __TypeId__=[B@7f0df043, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:32:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@14
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@4945cd1f]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"28611ee8-81f5-4f5b-a647-12b5f0099484","orderNumber":"194030fe-e4cf-4f17-9135-32b410e8ebd3","orderId":4,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":15999.84,"createdAt":[2025,10,6,14,32,12,304814000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T14:32:12.307924","status":"PENDING","updatedAt":[2025,10,6,14,32,12,304828000]}, headers={__ContentTypeId__=[B@391fad04, kafka_offset=14, __KeyTypeId__=[B@59b8c097, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1a655147, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=4, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759741332312, kafka_acknowledgment=Acknowledgment for order.created-0@14, __TypeId__=[B@18b9898e, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:33:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments
2025-10-06 14:33:49 [http-nio-8080-exec-6] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 14:33:49 [http-nio-8080-exec-6] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 14:33:49 [http-nio-8080-exec-6] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 14:33:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments
2025-10-06 14:33:49 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 14:33:49 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 14:33:49 [http-nio-8080-exec-6] INFO  c.e.p.controller.PaymentController - Processing payment for order ID: 4
2025-10-06 14:33:49 [http-nio-8080-exec-6] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing payment for order ID: 4, amount: 991.00
2025-10-06 14:33:49 [http-nio-8080-exec-6] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Payment created with ID: fad14391-88b2-4a54-997d-12b90c5a4ca0
2025-10-06 14:33:49 [http-nio-8080-exec-6] INFO  c.e.p.p.s.i.PaymentGatewayServiceImpl - Processing payment through gateway for payment ID: fad14391-88b2-4a54-997d-12b90c5a4ca0
2025-10-06 14:33:49 [http-nio-8080-exec-6] DEBUG c.e.p.p.s.i.PaymentGatewayServiceImpl - Validating payment method for request: CREDIT_CARD
2025-10-06 14:33:50 [http-nio-8080-exec-6] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Publishing payment processed event for payment ID: fad14391-88b2-4a54-997d-12b90c5a4ca0
2025-10-06 14:33:50 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition payment.processed-0 to 10 since the associated topicId changed from null to t5NxQuSTQC2hC3JUcDzeGg
2025-10-06 14:33:50 [http-nio-8080-exec-6] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Payment processed event published successfully for payment ID: fad14391-88b2-4a54-997d-12b90c5a4ca0
2025-10-06 14:33:50 [http-nio-8080-exec-6] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Payment processed successfully for order ID: 4
2025-10-06 14:33:50 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for payment.processed-0@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handlePaymentProcessedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@4945cd1f]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"2249daaf-26c0-4568-aeb2-0e19fd437958","amount":991.00,"orderId":4,"eventType":"PAYMENT_PROCESSED","serviceName":"product-order-service","transactionId":"TXN_8211A67F","serviceVersion":"1.0.0","createdAt":[2025,10,6,14,33,49,790527000],"paymentId":"fad14391-88b2-4a54-997d-12b90c5a4ca0","gatewayResponse":"Payment authorized successfully","customerId":2,"processedAt":[2025,10,6,14,33,50,906999000],"paymentMethod":"CREDIT_CARD","timestamp":"2025-10-06T14:33:50.908785","status":"COMPLETED","updatedAt":[2025,10,6,14,33,49,790579000]}, headers={__ContentTypeId__=[B@5edc5b67, kafka_offset=1, __KeyTypeId__=[B@ee2dd18, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3ce52323, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=fad14391-88b2-4a54-997d-12b90c5a4ca0, kafka_receivedTopic=payment.processed, kafka_receivedTimestamp=1759741430912, kafka_acknowledgment=Acknowledgment for payment.processed-0@1, __TypeId__=[B@134298f1, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:34:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/v1/orders/4
2025-10-06 14:34:36 [http-nio-8080-exec-7] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 14:34:36 [http-nio-8080-exec-7] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 14:34:36 [http-nio-8080-exec-7] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 14:34:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/v1/orders/4
2025-10-06 14:34:36 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.getOrderById(java.lang.Long); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 14:34:36 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.getOrderById(java.lang.Long); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 14:34:36 [http-nio-8080-exec-7] DEBUG c.e.p.controller.OrderController - Retrieving order with id: 4
2025-10-06 14:34:36 [http-nio-8080-exec-7] DEBUG c.e.p.d.s.impl.OrderServiceImpl - Retrieving order by ID: 4
2025-10-06 14:35:16 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 14:36:33 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments/fad14391-88b2-4a54-997d-12b90c5a4ca0/refund?refundAmount=991
2025-10-06 14:36:33 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 14:36:33 [http-nio-8080-exec-4] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 14:36:33 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 14:36:33 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments/fad14391-88b2-4a54-997d-12b90c5a4ca0/refund?refundAmount=991
2025-10-06 14:36:33 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 14:36:33 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController] with authorization manager org.springframework.security.config.annotation.method.configuration.DeferringObservationAuthorizationManager@7fd239cb and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasRole('ADMIN')]
2025-10-06 14:36:33 [http-nio-8080-exec-4] ERROR c.e.p.c.GlobalExceptionHandler - Access denied: Access Denied
2025-10-06 14:36:52 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-10-06 14:36:52 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:36:52 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:36:52 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-10-06 14:36:52 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-10-06 14:36:52 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-10-06 14:36:52 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:36:52 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:36:52 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-10-06 14:36:52 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:36:52 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-10-06 14:36:52 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:36:52 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-10-06 14:36:52 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:36:52 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:36:52 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:36:52 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:36:52 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-10-06 14:36:52 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-10-06 14:36:52 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-10-06 14:36:52 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:36:52 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-10-06 14:36:52 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:36:52 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-10-06 14:36:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api-docs/swagger-config
2025-10-06 14:36:52 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:36:52 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:36:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api-docs/swagger-config
2025-10-06 14:36:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-10-06 14:36:52 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:36:52 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:36:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-10-06 14:36:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api-docs
2025-10-06 14:36:52 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:36:52 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:36:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api-docs
2025-10-06 14:36:52 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-10-06 14:36:52 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:36:52 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:36:52 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-10-06 14:36:52 [http-nio-8080-exec-4] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 503 ms
2025-10-06 14:37:22 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-10-06 14:37:22 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:37:22 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:37:22 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-10-06 14:37:35 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-10-06 14:37:35 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:37:35 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:37:35 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-10-06 14:37:35 [http-nio-8080-exec-1] INFO  c.e.p.controller.AuthController - Login attempt for user: admin
2025-10-06 14:37:35 [http-nio-8080-exec-1] INFO  c.e.p.controller.AuthController - Password provided: admin123
2025-10-06 14:37:35 [http-nio-8080-exec-1] INFO  c.e.p.controller.AuthController - Attempting authentication for user: admin
2025-10-06 14:37:35 [http-nio-8080-exec-1] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 14:37:35 [http-nio-8080-exec-1] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 14:37:35 [http-nio-8080-exec-1] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 14:37:35 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-06 14:37:35 [http-nio-8080-exec-1] INFO  c.e.p.controller.AuthController - Authentication successful for user: admin
2025-10-06 14:37:35 [http-nio-8080-exec-1] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 14:37:35 [http-nio-8080-exec-1] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 14:37:35 [http-nio-8080-exec-1] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 14:37:35 [http-nio-8080-exec-1] INFO  c.e.p.controller.AuthController - User details loaded: admin
2025-10-06 14:37:35 [http-nio-8080-exec-1] INFO  c.e.p.controller.AuthController - JWT token generated successfully
2025-10-06 14:37:35 [http-nio-8080-exec-1] INFO  c.e.p.controller.AuthController - Login successful for user: admin
2025-10-06 14:37:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-10-06 14:37:37 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:37:37 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:37:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-10-06 14:37:37 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Login attempt for user: admin
2025-10-06 14:37:37 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Password provided: admin123
2025-10-06 14:37:37 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Attempting authentication for user: admin
2025-10-06 14:37:37 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 14:37:37 [http-nio-8080-exec-4] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 14:37:37 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 14:37:37 [http-nio-8080-exec-4] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-06 14:37:37 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Authentication successful for user: admin
2025-10-06 14:37:37 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 14:37:37 [http-nio-8080-exec-4] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 14:37:37 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 14:37:37 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - User details loaded: admin
2025-10-06 14:37:37 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - JWT token generated successfully
2025-10-06 14:37:37 [http-nio-8080-exec-4] INFO  c.e.p.controller.AuthController - Login successful for user: admin
2025-10-06 14:39:01 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-10-06 14:39:01 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:39:01 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:39:01 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-10-06 14:39:17 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-10-06 14:39:17 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:39:17 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:39:17 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-10-06 14:39:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-10-06 14:39:20 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:39:20 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:39:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-10-06 14:39:21 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-10-06 14:39:21 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:39:21 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:39:21 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-10-06 14:39:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-10-06 14:39:21 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:39:21 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:39:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-10-06 14:39:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-10-06 14:39:27 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:39:27 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:39:27 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-10-06 14:39:38 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments/fad14391-88b2-4a54-997d-12b90c5a4ca0/refund?refundAmount=991
2025-10-06 14:39:38 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 14:39:38 [http-nio-8080-exec-9] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 14:39:38 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 14:39:38 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments/fad14391-88b2-4a54-997d-12b90c5a4ca0/refund?refundAmount=991
2025-10-06 14:39:38 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 14:39:38 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 14:39:38 [http-nio-8080-exec-9] INFO  c.e.p.controller.PaymentController - Refunding payment with ID: fad14391-88b2-4a54-997d-12b90c5a4ca0 for amount: 991
2025-10-06 14:39:38 [http-nio-8080-exec-9] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing refund for payment ID: fad14391-88b2-4a54-997d-12b90c5a4ca0, amount: 991
2025-10-06 14:39:38 [http-nio-8080-exec-9] INFO  c.e.p.p.s.i.PaymentGatewayServiceImpl - Processing refund through gateway for payment ID: fad14391-88b2-4a54-997d-12b90c5a4ca0
2025-10-06 14:39:39 [http-nio-8080-exec-9] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Publishing payment refunded event for payment ID: fad14391-88b2-4a54-997d-12b90c5a4ca0
2025-10-06 14:39:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Error while fetching metadata with correlation id 40 : {payment.refunded=UNKNOWN_TOPIC_OR_PARTITION}
2025-10-06 14:39:40 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition payment.refunded-0 to 0 since the associated topicId changed from null to QgMN8r1lQeaXfA3DQZXVWA
2025-10-06 14:39:40 [http-nio-8080-exec-9] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Payment refunded event published successfully for payment ID: fad14391-88b2-4a54-997d-12b90c5a4ca0
2025-10-06 14:39:40 [http-nio-8080-exec-9] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Refund processed successfully for payment ID: fad14391-88b2-4a54-997d-12b90c5a4ca0
2025-10-06 14:39:40 [kafka-producer-network-thread | producer-1] WARN  o.a.k.c.producer.internals.Sender - [Producer clientId=producer-1] Got error produce response with correlation id 42 on topic-partition payment.refunded-0, retrying (2 attempts left). Error: NOT_LEADER_OR_FOLLOWER
2025-10-06 14:39:40 [kafka-producer-network-thread | producer-1] WARN  o.a.k.c.producer.internals.Sender - [Producer clientId=producer-1] Received invalid metadata error in produce request on partition payment.refunded-0 due to org.apache.kafka.common.errors.NotLeaderOrFollowerException: For requests intended only for the leader, this error indicates that the broker is not the current leader. For requests intended for any replica, this error indicates that the broker is not a replica of the topic partition.. Going to request metadata update now
2025-10-06 14:40:20 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/query.do?jsessionid=ee85128e3f6fbd0e43eed98d75512b77
2025-10-06 14:40:20 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:20 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:20 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/query.do?jsessionid=ee85128e3f6fbd0e43eed98d75512b77
2025-10-06 14:40:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/stylesheet.css
2025-10-06 14:40:20 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:20 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/stylesheet.css
2025-10-06 14:40:20 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/login.jsp?jsessionid=b806804052a02067fe0a0b702138b52a
2025-10-06 14:40:20 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:20 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:20 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/login.jsp?jsessionid=b806804052a02067fe0a0b702138b52a
2025-10-06 14:40:20 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/login.jsp
2025-10-06 14:40:20 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:20 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:20 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/login.jsp
2025-10-06 14:40:20 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/background.gif
2025-10-06 14:40:20 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:20 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:20 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/background.gif
2025-10-06 14:40:20 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/login.jsp?jsessionid=f57688513cfad5989bec63849e8ee76e
2025-10-06 14:40:20 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:20 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:20 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/login.jsp?jsessionid=f57688513cfad5989bec63849e8ee76e
2025-10-06 14:40:25 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/login.do?jsessionid=f57688513cfad5989bec63849e8ee76e
2025-10-06 14:40:25 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:25 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:25 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/login.do?jsessionid=f57688513cfad5989bec63849e8ee76e
2025-10-06 14:40:25 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/header.jsp?jsessionid=f57688513cfad5989bec63849e8ee76e
2025-10-06 14:40:25 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/help.jsp?jsessionid=f57688513cfad5989bec63849e8ee76e
2025-10-06 14:40:25 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tables.do?jsessionid=f57688513cfad5989bec63849e8ee76e
2025-10-06 14:40:25 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:25 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:25 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/query.jsp?jsessionid=f57688513cfad5989bec63849e8ee76e
2025-10-06 14:40:25 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/header.jsp?jsessionid=f57688513cfad5989bec63849e8ee76e
2025-10-06 14:40:25 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:25 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:25 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:25 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:25 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:25 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:25 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/help.jsp?jsessionid=f57688513cfad5989bec63849e8ee76e
2025-10-06 14:40:25 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tables.do?jsessionid=f57688513cfad5989bec63849e8ee76e
2025-10-06 14:40:25 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/query.jsp?jsessionid=f57688513cfad5989bec63849e8ee76e
2025-10-06 14:40:25 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_line.gif
2025-10-06 14:40:25 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_disconnect.gif
2025-10-06 14:40:25 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:25 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:25 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:25 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:25 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_run.gif
2025-10-06 14:40:25 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_line.gif
2025-10-06 14:40:25 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:25 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:25 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_run.gif
2025-10-06 14:40:25 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_refresh.gif
2025-10-06 14:40:25 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_disconnect.gif
2025-10-06 14:40:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_rollback.gif
2025-10-06 14:40:25 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:25 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:25 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_refresh.gif
2025-10-06 14:40:25 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:25 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:25 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_run_selected.gif
2025-10-06 14:40:25 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_stop.gif
2025-10-06 14:40:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_rollback.gif
2025-10-06 14:40:25 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:25 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:25 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_run_selected.gif
2025-10-06 14:40:25 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_commit.gif
2025-10-06 14:40:25 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:25 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:25 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:25 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:25 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_stop.gif
2025-10-06 14:40:25 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_help.gif
2025-10-06 14:40:25 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_commit.gif
2025-10-06 14:40:25 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:25 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:25 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_help.gif
2025-10-06 14:40:25 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_history.gif
2025-10-06 14:40:25 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:25 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:25 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_history.gif
2025-10-06 14:40:25 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree.js
2025-10-06 14:40:25 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:25 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:25 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree.js
2025-10-06 14:40:26 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_table.gif
2025-10-06 14:40:26 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:26 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:26 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_empty.gif
2025-10-06 14:40:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_database.gif
2025-10-06 14:40:26 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_table.gif
2025-10-06 14:40:26 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_minus.gif
2025-10-06 14:40:26 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:26 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:26 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_column.gif
2025-10-06 14:40:26 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:26 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:26 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_empty.gif
2025-10-06 14:40:26 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:26 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_plus.gif
2025-10-06 14:40:26 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:26 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:26 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_database.gif
2025-10-06 14:40:26 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:26 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_minus.gif
2025-10-06 14:40:26 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:26 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_plus.gif
2025-10-06 14:40:26 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_column.gif
2025-10-06 14:40:26 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_index_az.gif
2025-10-06 14:40:26 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_folder.gif
2025-10-06 14:40:26 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:26 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:26 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_index.gif
2025-10-06 14:40:26 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_folder.gif
2025-10-06 14:40:26 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_type.gif
2025-10-06 14:40:26 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:26 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:26 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:26 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:26 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_index.gif
2025-10-06 14:40:26 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_index_az.gif
2025-10-06 14:40:26 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:26 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:26 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_type.gif
2025-10-06 14:40:26 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_view.gif
2025-10-06 14:40:26 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:26 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:26 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_view.gif
2025-10-06 14:40:26 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_info.gif
2025-10-06 14:40:26 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_users.gif
2025-10-06 14:40:26 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:26 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:26 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:26 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:26 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_info.gif
2025-10-06 14:40:26 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_users.gif
2025-10-06 14:40:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_user.gif
2025-10-06 14:40:26 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:26 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_user.gif
2025-10-06 14:40:30 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/query.do?jsessionid=f57688513cfad5989bec63849e8ee76e
2025-10-06 14:40:30 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:30 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:30 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/query.do?jsessionid=f57688513cfad5989bec63849e8ee76e
2025-10-06 14:40:30 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/stylesheet.css
2025-10-06 14:40:30 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:30 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:30 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/stylesheet.css
2025-10-06 14:40:30 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/table.js
2025-10-06 14:40:30 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:40:30 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:40:30 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/table.js
2025-10-06 14:41:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments/fad14391-88b2-4a54-997d-12b90c5a4ca0/refund?refundAmount=991
2025-10-06 14:41:02 [http-nio-8080-exec-3] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 14:41:02 [http-nio-8080-exec-3] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 14:41:02 [http-nio-8080-exec-3] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 14:41:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments/fad14391-88b2-4a54-997d-12b90c5a4ca0/refund?refundAmount=991
2025-10-06 14:41:02 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 14:41:02 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 14:41:02 [http-nio-8080-exec-3] INFO  c.e.p.controller.PaymentController - Refunding payment with ID: fad14391-88b2-4a54-997d-12b90c5a4ca0 for amount: 991
2025-10-06 14:41:02 [http-nio-8080-exec-3] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing refund for payment ID: fad14391-88b2-4a54-997d-12b90c5a4ca0, amount: 991
2025-10-06 14:41:02 [http-nio-8080-exec-3] INFO  c.e.p.p.s.i.PaymentGatewayServiceImpl - Processing refund through gateway for payment ID: fad14391-88b2-4a54-997d-12b90c5a4ca0
2025-10-06 14:41:04 [http-nio-8080-exec-3] ERROR c.e.p.p.s.impl.PaymentServiceImpl - Error processing refund for payment ID: fad14391-88b2-4a54-997d-12b90c5a4ca0
java.lang.IllegalStateException: Payment cannot be refunded in current state: REFUNDED
	at com.ecommerce.productorder.payment.domain.entity.Payment.refundPayment(Payment.java:142)
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl.refundPayment(PaymentServiceImpl.java:204)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl$$SpringCGLIB$$0.refundPayment(<generated>)
	at com.ecommerce.productorder.controller.PaymentController.refundPayment(PaymentController.java:176)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:199)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.controller.PaymentController$$SpringCGLIB$$0.refundPayment(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.ecommerce.productorder.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-10-06 14:41:04 [http-nio-8080-exec-3] ERROR c.e.p.c.GlobalExceptionHandler - Business rule violation: Failed to process refund: Payment cannot be refunded in current state: REFUNDED
2025-10-06 14:41:59 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments
2025-10-06 14:41:59 [http-nio-8080-exec-8] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 14:41:59 [http-nio-8080-exec-8] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 14:41:59 [http-nio-8080-exec-8] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 14:41:59 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments
2025-10-06 14:41:59 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 14:41:59 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 14:41:59 [http-nio-8080-exec-8] INFO  c.e.p.controller.PaymentController - Processing payment for order ID: 4
2025-10-06 14:41:59 [http-nio-8080-exec-8] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing payment for order ID: 4, amount: 991.00
2025-10-06 14:41:59 [http-nio-8080-exec-8] ERROR c.e.p.p.s.impl.PaymentServiceImpl - Error processing payment for order ID: 4
com.ecommerce.productorder.exception.BusinessException: Payment already exists for order ID: 4
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl.processPayment(PaymentServiceImpl.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl$$SpringCGLIB$$0.processPayment(<generated>)
	at com.ecommerce.productorder.controller.PaymentController.processPayment(PaymentController.java:71)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:199)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.controller.PaymentController$$SpringCGLIB$$0.processPayment(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.ecommerce.productorder.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-10-06 14:41:59 [http-nio-8080-exec-8] ERROR c.e.p.c.GlobalExceptionHandler - Business rule violation: Failed to process payment: Payment already exists for order ID: 4
2025-10-06 14:42:23 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/orders
2025-10-06 14:42:23 [http-nio-8080-exec-1] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 14:42:23 [http-nio-8080-exec-1] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 14:42:23 [http-nio-8080-exec-1] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 14:42:23 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/orders
2025-10-06 14:42:23 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 14:42:23 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 14:42:23 [http-nio-8080-exec-1] INFO  c.e.p.controller.OrderController - Creating order for customer ID: 2
2025-10-06 14:42:23 [http-nio-8080-exec-1] INFO  c.e.p.d.s.impl.OrderServiceImpl - Creating order for customer ID: 2
2025-10-06 14:42:23 [http-nio-8080-exec-1] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created with ID: 5
2025-10-06 14:42:23 [http-nio-8080-exec-1] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Publishing order created event for order ID: 5
2025-10-06 14:42:23 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 14:42:23 [http-nio-8080-exec-1] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Order created event published successfully for order ID: 5
2025-10-06 14:42:23 [http-nio-8080-exec-1] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created successfully for customer ID: 2
2025-10-06 14:42:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@15
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@4945cd1f]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"f2153287-0615-40d4-a561-d211f0342f87","orderNumber":"ec221793-5c90-4f77-8011-fff048dfe007","orderId":5,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":799.84,"createdAt":[2025,10,6,14,42,23,426209000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T14:42:23.430215","status":"PENDING","updatedAt":[2025,10,6,14,42,23,426220000]}, headers={__ContentTypeId__=[B@7bea0fa1, kafka_offset=15, __KeyTypeId__=[B@6abdd9bd, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1a655147, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=5, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759741943437, kafka_acknowledgment=Acknowledgment for order.created-0@15, __TypeId__=[B@7a1568a8, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:42:23 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@15
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@626e5554]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"f2153287-0615-40d4-a561-d211f0342f87","orderNumber":"ec221793-5c90-4f77-8011-fff048dfe007","orderId":5,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":799.84,"createdAt":[2025,10,6,14,42,23,426209000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T14:42:23.430215","status":"PENDING","updatedAt":[2025,10,6,14,42,23,426220000]}, headers={__ContentTypeId__=[B@74356da4, kafka_offset=15, __KeyTypeId__=[B@43aaf8d3, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3156bc09, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=5, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759741943437, kafka_acknowledgment=Acknowledgment for order.created-0@15, __TypeId__=[B@3f4d41ee, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:43:00 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments
2025-10-06 14:43:00 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 14:43:00 [http-nio-8080-exec-2] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 14:43:00 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 14:43:00 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments
2025-10-06 14:43:00 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 14:43:00 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 14:43:00 [http-nio-8080-exec-2] INFO  c.e.p.controller.PaymentController - Processing payment for order ID: 5
2025-10-06 14:43:00 [http-nio-8080-exec-2] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing payment for order ID: 5, amount: 980.00
2025-10-06 14:43:00 [http-nio-8080-exec-2] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Payment created with ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469
2025-10-06 14:43:00 [http-nio-8080-exec-2] INFO  c.e.p.p.s.i.PaymentGatewayServiceImpl - Processing payment through gateway for payment ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469
2025-10-06 14:43:00 [http-nio-8080-exec-2] DEBUG c.e.p.p.s.i.PaymentGatewayServiceImpl - Validating payment method for request: CREDIT_CARD
2025-10-06 14:43:01 [http-nio-8080-exec-2] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Publishing payment processed event for payment ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469
2025-10-06 14:43:01 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition payment.processed-0 to 10 since the associated topicId changed from null to t5NxQuSTQC2hC3JUcDzeGg
2025-10-06 14:43:01 [http-nio-8080-exec-2] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Payment processed event published successfully for payment ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469
2025-10-06 14:43:01 [http-nio-8080-exec-2] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Payment processed successfully for order ID: 5
2025-10-06 14:43:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for payment.processed-0@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handlePaymentProcessedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@4945cd1f]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"225210ae-d345-4004-bd1f-f63512dbe97b","amount":980.00,"orderId":5,"eventType":"PAYMENT_PROCESSED","serviceName":"product-order-service","transactionId":"TXN_F8EB9DC1","serviceVersion":"1.0.0","createdAt":[2025,10,6,14,43,0,641018000],"paymentId":"9ffc4f8f-c155-4744-8228-ddb7d5f24469","gatewayResponse":"Payment authorized successfully","customerId":2,"processedAt":[2025,10,6,14,43,1,737752000],"paymentMethod":"CREDIT_CARD","timestamp":"2025-10-06T14:43:01.739004","status":"COMPLETED","updatedAt":[2025,10,6,14,43,0,641038000]}, headers={__ContentTypeId__=[B@702bbeb9, kafka_offset=2, __KeyTypeId__=[B@620b945b, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3ce52323, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=9ffc4f8f-c155-4744-8228-ddb7d5f24469, kafka_receivedTopic=payment.processed, kafka_receivedTimestamp=1759741981744, kafka_acknowledgment=Acknowledgment for payment.processed-0@2, __TypeId__=[B@789370dc, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:43:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments/9ffc4f8f-c155-4744-8228-ddb7d5f24469/refund?refundAmount=991
2025-10-06 14:43:54 [http-nio-8080-exec-7] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 14:43:54 [http-nio-8080-exec-7] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 14:43:54 [http-nio-8080-exec-7] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 14:43:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments/9ffc4f8f-c155-4744-8228-ddb7d5f24469/refund?refundAmount=991
2025-10-06 14:43:54 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 14:43:54 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 14:43:54 [http-nio-8080-exec-7] INFO  c.e.p.controller.PaymentController - Refunding payment with ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469 for amount: 991
2025-10-06 14:43:54 [http-nio-8080-exec-7] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing refund for payment ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469, amount: 991
2025-10-06 14:43:54 [http-nio-8080-exec-7] ERROR c.e.p.p.s.impl.PaymentServiceImpl - Error processing refund for payment ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469
com.ecommerce.productorder.exception.BusinessException: Refund amount cannot exceed payment amount
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl.refundPayment(PaymentServiceImpl.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl$$SpringCGLIB$$0.refundPayment(<generated>)
	at com.ecommerce.productorder.controller.PaymentController.refundPayment(PaymentController.java:176)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:199)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.controller.PaymentController$$SpringCGLIB$$0.refundPayment(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.ecommerce.productorder.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-10-06 14:43:54 [http-nio-8080-exec-7] ERROR c.e.p.c.GlobalExceptionHandler - Business rule violation: Failed to process refund: Refund amount cannot exceed payment amount
2025-10-06 14:44:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments/9ffc4f8f-c155-4744-8228-ddb7d5f24469/refund?refundAmount=490
2025-10-06 14:44:03 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 14:44:03 [http-nio-8080-exec-9] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 14:44:03 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 14:44:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments/9ffc4f8f-c155-4744-8228-ddb7d5f24469/refund?refundAmount=490
2025-10-06 14:44:03 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 14:44:03 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 14:44:03 [http-nio-8080-exec-9] INFO  c.e.p.controller.PaymentController - Refunding payment with ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469 for amount: 490
2025-10-06 14:44:03 [http-nio-8080-exec-9] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing refund for payment ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469, amount: 490
2025-10-06 14:44:03 [http-nio-8080-exec-9] INFO  c.e.p.p.s.i.PaymentGatewayServiceImpl - Processing refund through gateway for payment ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469
2025-10-06 14:44:03 [http-nio-8080-exec-9] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Publishing payment refunded event for payment ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469
2025-10-06 14:44:03 [http-nio-8080-exec-9] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Payment refunded event published successfully for payment ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469
2025-10-06 14:44:03 [http-nio-8080-exec-9] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Refund processed successfully for payment ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469
2025-10-06 14:44:12 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments/9ffc4f8f-c155-4744-8228-ddb7d5f24469/refund?refundAmount=491
2025-10-06 14:44:12 [http-nio-8080-exec-5] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 14:44:12 [http-nio-8080-exec-5] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 14:44:12 [http-nio-8080-exec-5] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 14:44:12 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments/9ffc4f8f-c155-4744-8228-ddb7d5f24469/refund?refundAmount=491
2025-10-06 14:44:12 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 14:44:12 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 14:44:12 [http-nio-8080-exec-5] INFO  c.e.p.controller.PaymentController - Refunding payment with ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469 for amount: 491
2025-10-06 14:44:12 [http-nio-8080-exec-5] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing refund for payment ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469, amount: 491
2025-10-06 14:44:12 [http-nio-8080-exec-5] INFO  c.e.p.p.s.i.PaymentGatewayServiceImpl - Processing refund through gateway for payment ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469
2025-10-06 14:44:13 [http-nio-8080-exec-5] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Publishing payment refunded event for payment ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469
2025-10-06 14:44:13 [http-nio-8080-exec-5] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Payment refunded event published successfully for payment ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469
2025-10-06 14:44:13 [http-nio-8080-exec-5] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Refund processed successfully for payment ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469
2025-10-06 14:44:20 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments/9ffc4f8f-c155-4744-8228-ddb7d5f24469/refund?refundAmount=491
2025-10-06 14:44:20 [http-nio-8080-exec-8] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 14:44:20 [http-nio-8080-exec-8] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 14:44:20 [http-nio-8080-exec-8] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 14:44:20 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments/9ffc4f8f-c155-4744-8228-ddb7d5f24469/refund?refundAmount=491
2025-10-06 14:44:20 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 14:44:20 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 14:44:20 [http-nio-8080-exec-8] INFO  c.e.p.controller.PaymentController - Refunding payment with ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469 for amount: 491
2025-10-06 14:44:20 [http-nio-8080-exec-8] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing refund for payment ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469, amount: 491
2025-10-06 14:44:20 [http-nio-8080-exec-8] INFO  c.e.p.p.s.i.PaymentGatewayServiceImpl - Processing refund through gateway for payment ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469
2025-10-06 14:44:20 [http-nio-8080-exec-8] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Publishing payment refunded event for payment ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469
2025-10-06 14:44:20 [http-nio-8080-exec-8] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Payment refunded event published successfully for payment ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469
2025-10-06 14:44:20 [http-nio-8080-exec-8] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Refund processed successfully for payment ID: 9ffc4f8f-c155-4744-8228-ddb7d5f24469
2025-10-06 14:44:31 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/query.do?jsessionid=f57688513cfad5989bec63849e8ee76e
2025-10-06 14:44:31 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:44:31 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:44:31 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/query.do?jsessionid=f57688513cfad5989bec63849e8ee76e
2025-10-06 14:44:31 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/stylesheet.css
2025-10-06 14:44:31 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:44:31 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:44:31 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/stylesheet.css
2025-10-06 14:44:31 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/table.js
2025-10-06 14:44:31 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:44:31 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:44:31 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/table.js
2025-10-06 14:44:40 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 14:44:40 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition payment.refunded-0 to 0 since the associated topicId changed from null to QgMN8r1lQeaXfA3DQZXVWA
2025-10-06 14:48:34 [Thread-2] INFO  c.e.p.config.GrpcServerConfig - Shutting down gRPC server...
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Revoke previously assigned partitions order.created-0
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Revoke previously assigned partitions payment.processed-0
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Revoke previously assigned partitions order.created-0
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Revoke previously assigned partitions order.cancelled-0
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: partitions revoked: [order.cancelled-0]
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: partitions revoked: [order.created-0]
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: partitions revoked: [payment.processed-0]
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: partitions revoked: [order.created-0]
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Member consumer-notification-service-4-843eb003-683a-48cd-b738-95adfe7d9f8e sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Member consumer-inventory-service-2-50c91a93-4b30-46ee-99d2-dfee5136bd85 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Member consumer-inventory-service-1-2f63e598-a1be-43f4-9cc4-8a5c2c0578da sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Member consumer-notification-service-3-972ada27-6481-4788-8cb2-e08808b7a0bc sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Unsubscribed all topics or patterns and assigned partitions
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Unsubscribed all topics or patterns and assigned partitions
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-inventory-service-2 unregistered
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-notification-service-3 unregistered
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: Consumer stopped
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: Consumer stopped
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-notification-service-4 unregistered
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: Consumer stopped
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-inventory-service-1 unregistered
2025-10-06 14:48:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: Consumer stopped
2025-10-06 14:48:35 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-10-06 14:48:35 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 14:48:35 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 14:48:35 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 14:48:35 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-10-06 14:48:35 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-06 14:48:35 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-06 14:48:35 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-06 14:48:35 [main] INFO  c.e.p.ProductOrderServiceApplication - Starting ProductOrderServiceApplication v1.0.0 using Java 17.0.16 with PID 89576 (/Users/sushantpandey/product-order-service/target/product-order-service-1.0.0.jar started by sushantpandey in /Users/sushantpandey/product-order-service)
2025-10-06 14:48:35 [main] DEBUG c.e.p.ProductOrderServiceApplication - Running with Spring Boot v3.1.5, Spring v6.0.13
2025-10-06 14:48:35 [main] INFO  c.e.p.ProductOrderServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-06 14:48:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-06 14:48:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-06 14:48:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 114 ms. Found 6 JPA repository interfaces.
2025-10-06 14:48:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-06 14:48:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-10-06 14:48:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.payment.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 14:48:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.domain.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 14:48:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.domain.repository.CustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 14:48:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.domain.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 14:48:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.domain.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 14:48:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.invoice.domain.repository.InvoiceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 14:48:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-10-06 14:48:37 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-10-06 14:48:37 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-06 14:48:37 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.15]
2025-10-06 14:48:37 [main] INFO  o.a.c.c.C.[.[.[/product-order-service] - Initializing Spring embedded WebApplicationContext
2025-10-06 14:48:37 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1546 ms
2025-10-06 14:48:37 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-06 14:48:37 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-10-06 14:48:37 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-06 14:48:37 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-10-06 14:48:37 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-06 14:48:37 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.13.Final
2025-10-06 14:48:37 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-06 14:48:37 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-06 14:48:37 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-06 14:48:38 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-06 14:48:38 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-06 14:48:38 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-06 14:48:39 [main] DEBUG c.e.p.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
2025-10-06 14:48:39 [main] INFO  c.e.p.config.GrpcServerConfig - Starting gRPC server on port: 9090
2025-10-06 14:48:39 [main] INFO  c.e.p.config.GrpcServerConfig - gRPC server started successfully on port: 9090
2025-10-06 14:48:39 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-10-06 14:48:39 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-06 14:48:39 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2f6fcc70, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@60666985, org.springframework.security.web.context.SecurityContextHolderFilter@76b9056d, org.springframework.security.web.header.HeaderWriterFilter@2e940dd0, org.springframework.web.filter.CorsFilter@5effc15d, org.springframework.security.web.authentication.logout.LogoutFilter@4545ac62, com.ecommerce.productorder.config.JwtRequestFilter@c2ddfeb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4bcfa08b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@20bc6f4d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2a7ed9bd, org.springframework.security.web.session.SessionManagementFilter@1e085e71, org.springframework.security.web.access.ExceptionTranslationFilter@3dcf26b5, org.springframework.security.web.access.intercept.AuthorizationFilter@67f5066e]
2025-10-06 14:48:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/product-order-service'
2025-10-06 14:48:40 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-inventory-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = inventory-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-10-06 14:48:40 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 14:48:40 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 14:48:40 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759742320545
2025-10-06 14:48:40 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Subscribed to topic(s): order.created
2025-10-06 14:48:40 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-inventory-service-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = inventory-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-10-06 14:48:40 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 14:48:40 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 14:48:40 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759742320556
2025-10-06 14:48:40 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Subscribed to topic(s): order.cancelled
2025-10-06 14:48:40 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-10-06 14:48:40 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 14:48:40 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 14:48:40 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759742320559
2025-10-06 14:48:40 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Subscribed to topic(s): order.created
2025-10-06 14:48:40 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-10-06 14:48:40 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 14:48:40 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 14:48:40 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759742320562
2025-10-06 14:48:40 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Subscribed to topic(s): payment.processed
2025-10-06 14:48:40 [main] INFO  c.e.p.ProductOrderServiceApplication - Started ProductOrderServiceApplication in 5.237 seconds (process running for 5.66)
2025-10-06 14:48:40 [main] INFO  c.e.p.config.DefaultUserInitializer - Initializing default users...
2025-10-06 14:48:40 [main] INFO  c.e.p.config.DefaultUserInitializer - Default admin user created: admin / admin123
2025-10-06 14:48:40 [main] INFO  c.e.p.config.DefaultUserInitializer - Default customer user created: customer / customer123
2025-10-06 14:48:40 [main] INFO  c.e.p.config.DefaultUserInitializer - Default users initialization completed
2025-10-06 14:48:40 [main] INFO  c.e.p.config.DataInitializer - === DATA INITIALIZER STARTING ===
2025-10-06 14:48:40 [main] INFO  c.e.p.config.DataInitializer - Starting data initialization...
2025-10-06 14:48:40 [main] INFO  c.e.p.config.DataInitializer - Initializing test data...
2025-10-06 14:48:40 [main] INFO  c.e.p.config.DataInitializer - Creating test categories and products...
2025-10-06 14:48:40 [main] INFO  c.e.p.config.DataInitializer - Created Electronics category
2025-10-06 14:48:40 [main] INFO  c.e.p.config.DataInitializer - Created Clothing category
2025-10-06 14:48:40 [main] INFO  c.e.p.config.DataInitializer - Created Books category
2025-10-06 14:48:40 [main] INFO  c.e.p.config.DataInitializer - Creating products...
2025-10-06 14:48:40 [main] INFO  c.e.p.config.DataInitializer - Created iPhone 15 product
2025-10-06 14:48:40 [main] INFO  c.e.p.config.DataInitializer - Created MacBook Pro product
2025-10-06 14:48:40 [main] INFO  c.e.p.config.DataInitializer - Created T-Shirt product
2025-10-06 14:48:40 [main] INFO  c.e.p.config.DataInitializer - Created Programming Book product
2025-10-06 14:48:40 [main] INFO  c.e.p.config.DataInitializer - Test data initialization completed
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting the last seen epoch of partition order.cancelled-0 to 10 since the associated topicId changed from null to hAqa7gqzSgOGNgRsGTUgvg
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting the last seen epoch of partition payment.processed-0 to 10 since the associated topicId changed from null to t5NxQuSTQC2hC3JUcDzeGg
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] (Re-)joining group
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] (Re-)joining group
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] (Re-)joining group
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] (Re-)joining group
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: need to re-join with the given member-id: consumer-inventory-service-2-a79812c7-b5fc-4878-9d53-706eddf25967
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-3-8002c232-bdfa-4468-b34b-6cac358cc4dd
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-4-b66ba09b-062f-440e-a0ba-176ce6422e18
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] (Re-)joining group
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] (Re-)joining group
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: need to re-join with the given member-id: consumer-inventory-service-1-273f8601-1ddc-434a-8580-0c7d6952e428
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] (Re-)joining group
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-10-06 14:48:40 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] (Re-)joining group
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Successfully joined group with generation Generation{generationId=3, memberId='consumer-notification-service-3-8002c232-bdfa-4468-b34b-6cac358cc4dd', protocol='range'}
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Successfully joined group with generation Generation{generationId=3, memberId='consumer-inventory-service-1-273f8601-1ddc-434a-8580-0c7d6952e428', protocol='range'}
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Successfully joined group with generation Generation{generationId=3, memberId='consumer-inventory-service-2-a79812c7-b5fc-4878-9d53-706eddf25967', protocol='range'}
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Successfully joined group with generation Generation{generationId=3, memberId='consumer-notification-service-4-b66ba09b-062f-440e-a0ba-176ce6422e18', protocol='range'}
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting the last seen epoch of partition order.cancelled-0 to 10 since the associated topicId changed from null to hAqa7gqzSgOGNgRsGTUgvg
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Finished assignment for group at generation 3: {consumer-inventory-service-2-a79812c7-b5fc-4878-9d53-706eddf25967=Assignment(partitions=[order.cancelled-0]), consumer-inventory-service-1-273f8601-1ddc-434a-8580-0c7d6952e428=Assignment(partitions=[order.created-0])}
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Finished assignment for group at generation 3: {consumer-notification-service-4-b66ba09b-062f-440e-a0ba-176ce6422e18=Assignment(partitions=[payment.processed-0]), consumer-notification-service-3-8002c232-bdfa-4468-b34b-6cac358cc4dd=Assignment(partitions=[order.created-0])}
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Successfully synced group in generation Generation{generationId=3, memberId='consumer-inventory-service-1-273f8601-1ddc-434a-8580-0c7d6952e428', protocol='range'}
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Successfully synced group in generation Generation{generationId=3, memberId='consumer-notification-service-4-b66ba09b-062f-440e-a0ba-176ce6422e18', protocol='range'}
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Successfully synced group in generation Generation{generationId=3, memberId='consumer-inventory-service-2-a79812c7-b5fc-4878-9d53-706eddf25967', protocol='range'}
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[order.cancelled-0])
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[payment.processed-0])
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Successfully synced group in generation Generation{generationId=3, memberId='consumer-notification-service-3-8002c232-bdfa-4468-b34b-6cac358cc4dd', protocol='range'}
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[order.created-0])
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order.created-0])
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Adding newly assigned partitions: order.created-0
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Adding newly assigned partitions: order.cancelled-0
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Adding newly assigned partitions: payment.processed-0
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Adding newly assigned partitions: order.created-0
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Found no committed offset for partition order.created-0
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Found no committed offset for partition order.created-0
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Found no committed offset for partition payment.processed-0
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Found no committed offset for partition order.cancelled-0
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting offset for partition order.cancelled-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=10}}.
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Resetting offset for partition order.created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=10}}.
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting offset for partition order.created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=10}}.
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting offset for partition payment.processed-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=10}}.
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: partitions assigned: [order.created-0]
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: partitions assigned: [order.created-0]
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: partitions assigned: [payment.processed-0]
2025-10-06 14:48:46 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: partitions assigned: [order.cancelled-0]
2025-10-06 14:48:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@7b3d3d3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"9234e0dd-1c94-4d30-b847-6ef24ff8becd","orderNumber":"382207e8-13ea-4ba3-b2e8-c194086b0daf","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,3,21,50,17,915871000],"customerEmail":"test@example.com","customerId":1,"shippingAddress":"123 Main St, City, State","timestamp":"2025-10-03T21:50:17.917054","status":"PENDING","updatedAt":[2025,10,3,21,50,17,915889000]}, headers={__ContentTypeId__=[B@588ed268, kafka_offset=0, __KeyTypeId__=[B@68a0064f, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5bc01b0b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759508417960, kafka_acknowledgment=Acknowledgment for order.created-0@0, __TypeId__=[B@1a7f1a4d, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:47 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for payment.processed-0@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handlePaymentProcessedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@7b3d3d3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"723ace4d-c757-4f6a-a166-d253e64e55e9","amount":991.00,"orderId":1,"eventType":"PAYMENT_PROCESSED","serviceName":"product-order-service","transactionId":null,"serviceVersion":"1.0.0","createdAt":[2025,10,6,12,31,27,376058000],"paymentId":"859d87c3-704f-4843-ae6b-b7b3e98bc894","gatewayResponse":null,"customerId":2,"processedAt":[2025,10,6,12,31,27,378405000],"paymentMethod":"CREDIT_CARD","timestamp":"2025-10-06T12:31:27.378803","status":"FAILED","updatedAt":[2025,10,6,12,31,27,376082000]}, headers={__ContentTypeId__=[B@35a920fa, kafka_offset=0, __KeyTypeId__=[B@14ee6e58, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@6b4d7042, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=859d87c3-704f-4843-ae6b-b7b3e98bc894, kafka_receivedTopic=payment.processed, kafka_receivedTimestamp=1759734087381, kafka_acknowledgment=Acknowledgment for payment.processed-0@0, __TypeId__=[B@5db9bba7, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:47 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"9234e0dd-1c94-4d30-b847-6ef24ff8becd","orderNumber":"382207e8-13ea-4ba3-b2e8-c194086b0daf","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,3,21,50,17,915871000],"customerEmail":"test@example.com","customerId":1,"shippingAddress":"123 Main St, City, State","timestamp":"2025-10-03T21:50:17.917054","status":"PENDING","updatedAt":[2025,10,3,21,50,17,915889000]}, headers={__ContentTypeId__=[B@a6ffb1e, kafka_offset=0, __KeyTypeId__=[B@1ad6a1e1, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3bcd100b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759508417960, kafka_acknowledgment=Acknowledgment for order.created-0@0, __TypeId__=[B@46d88d70, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:47 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"7155d081-0466-4ac3-9cf3-3745a67c8f61","orderNumber":"c2f007f9-afab-46c1-b0f6-3bddcc7fbea3","orderId":2,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,2,21,23,990587000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:22:47.292516","status":"CANCELLED","updatedAt":[2025,10,5,2,21,23,990602000]}, headers={__ContentTypeId__=[B@33f38a32, kafka_offset=0, __KeyTypeId__=[B@2e2c35f1, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@6c825f19, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759611167327, kafka_acknowledgment=Acknowledgment for order.cancelled-0@0, __TypeId__=[B@9b0af10, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:47 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 1 for partition order.created-0
2025-10-06 14:48:47 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 1 for partition order.cancelled-0
2025-10-06 14:48:47 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Seeking to offset 1 for partition payment.processed-0
2025-10-06 14:48:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 1 for partition order.created-0
2025-10-06 14:48:47 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for payment.processed-0@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handlePaymentProcessedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@7b3d3d3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"2249daaf-26c0-4568-aeb2-0e19fd437958","amount":991.00,"orderId":4,"eventType":"PAYMENT_PROCESSED","serviceName":"product-order-service","transactionId":"TXN_8211A67F","serviceVersion":"1.0.0","createdAt":[2025,10,6,14,33,49,790527000],"paymentId":"fad14391-88b2-4a54-997d-12b90c5a4ca0","gatewayResponse":"Payment authorized successfully","customerId":2,"processedAt":[2025,10,6,14,33,50,906999000],"paymentMethod":"CREDIT_CARD","timestamp":"2025-10-06T14:33:50.908785","status":"COMPLETED","updatedAt":[2025,10,6,14,33,49,790579000]}, headers={__ContentTypeId__=[B@4ebf2ec, kafka_offset=1, __KeyTypeId__=[B@5f4eb07d, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@6b4d7042, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=fad14391-88b2-4a54-997d-12b90c5a4ca0, kafka_receivedTopic=payment.processed, kafka_receivedTimestamp=1759741430912, kafka_acknowledgment=Acknowledgment for payment.processed-0@1, __TypeId__=[B@4eddabaf, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:47 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"9179492d-3893-4653-aff4-eb694c6a010e","orderNumber":"4c7d3c88-9b7a-423a-a1f6-7c27dcbb86d0","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":2999.97,"createdAt":[2025,10,5,13,17,23,227752000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:18:40.841978","status":"CANCELLED","updatedAt":[2025,10,5,13,17,23,227796000]}, headers={__ContentTypeId__=[B@6f4ce36f, kafka_offset=1, __KeyTypeId__=[B@aef4470, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@6c825f19, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759650520859, kafka_acknowledgment=Acknowledgment for order.cancelled-0@1, __TypeId__=[B@723b9ac6, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:47 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Seeking to offset 2 for partition payment.processed-0
2025-10-06 14:48:47 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 2 for partition order.cancelled-0
2025-10-06 14:48:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@7b3d3d3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"6a8e200d-3344-4499-a3cb-0d5f3235fe09","orderNumber":"40bd1de4-e3e8-47e4-a452-7cb9b32f99aa","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,2,5,58,707310000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:05:58.799749","status":"PENDING","updatedAt":[2025,10,5,2,5,58,707354000]}, headers={__ContentTypeId__=[B@15a8d327, kafka_offset=1, __KeyTypeId__=[B@ebbdace, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5bc01b0b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759610159101, kafka_acknowledgment=Acknowledgment for order.created-0@1, __TypeId__=[B@46425e85, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 2 for partition order.created-0
2025-10-06 14:48:47 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"6a8e200d-3344-4499-a3cb-0d5f3235fe09","orderNumber":"40bd1de4-e3e8-47e4-a452-7cb9b32f99aa","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,2,5,58,707310000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:05:58.799749","status":"PENDING","updatedAt":[2025,10,5,2,5,58,707354000]}, headers={__ContentTypeId__=[B@77d7cacc, kafka_offset=1, __KeyTypeId__=[B@79abe569, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3bcd100b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759610159101, kafka_acknowledgment=Acknowledgment for order.created-0@1, __TypeId__=[B@6f5f8497, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:47 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 2 for partition order.created-0
2025-10-06 14:48:48 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b7a9d0bd-56cd-4a82-b7ef-29dc61722d4e","orderNumber":"dd671d51-c52e-467b-bd37-754e4804cce9","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,36,5,859548000],"customerEmail":"testcustomer@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:36:22.696339","status":"CANCELLED","updatedAt":[2025,10,5,13,36,5,859555000]}, headers={__ContentTypeId__=[B@5f77592e, kafka_offset=2, __KeyTypeId__=[B@710e12f9, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@6c825f19, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759651582712, kafka_acknowledgment=Acknowledgment for order.cancelled-0@2, __TypeId__=[B@4f47b723, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@7b3d3d3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"cfde2282-fcb9-41a9-94ca-84608512a724","orderNumber":"c2f007f9-afab-46c1-b0f6-3bddcc7fbea3","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,2,21,23,990587000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:21:23.992450","status":"PENDING","updatedAt":[2025,10,5,2,21,23,990602000]}, headers={__ContentTypeId__=[B@1addb40, kafka_offset=2, __KeyTypeId__=[B@83ce9c8, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5bc01b0b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759611084008, kafka_acknowledgment=Acknowledgment for order.created-0@2, __TypeId__=[B@3f5c73d1, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:48 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 3 for partition order.cancelled-0
2025-10-06 14:48:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 3 for partition order.created-0
2025-10-06 14:48:48 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for payment.processed-0@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handlePaymentProcessedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@7b3d3d3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"225210ae-d345-4004-bd1f-f63512dbe97b","amount":980.00,"orderId":5,"eventType":"PAYMENT_PROCESSED","serviceName":"product-order-service","transactionId":"TXN_F8EB9DC1","serviceVersion":"1.0.0","createdAt":[2025,10,6,14,43,0,641018000],"paymentId":"9ffc4f8f-c155-4744-8228-ddb7d5f24469","gatewayResponse":"Payment authorized successfully","customerId":2,"processedAt":[2025,10,6,14,43,1,737752000],"paymentMethod":"CREDIT_CARD","timestamp":"2025-10-06T14:43:01.739004","status":"COMPLETED","updatedAt":[2025,10,6,14,43,0,641038000]}, headers={__ContentTypeId__=[B@41442e09, kafka_offset=2, __KeyTypeId__=[B@3136f49a, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@6b4d7042, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=9ffc4f8f-c155-4744-8228-ddb7d5f24469, kafka_receivedTopic=payment.processed, kafka_receivedTimestamp=1759741981744, kafka_acknowledgment=Acknowledgment for payment.processed-0@2, __TypeId__=[B@57c0444c, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:48 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"cfde2282-fcb9-41a9-94ca-84608512a724","orderNumber":"c2f007f9-afab-46c1-b0f6-3bddcc7fbea3","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,2,21,23,990587000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:21:23.992450","status":"PENDING","updatedAt":[2025,10,5,2,21,23,990602000]}, headers={__ContentTypeId__=[B@54080794, kafka_offset=2, __KeyTypeId__=[B@1aa6e22e, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3bcd100b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759611084008, kafka_acknowledgment=Acknowledgment for order.created-0@2, __TypeId__=[B@43f0e077, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:48 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 3 for partition order.created-0
2025-10-06 14:48:48 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@3
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"2db250f4-67f0-4a79-bb51-d46dad7ad65a","orderNumber":"77e4f83b-290c-4f6e-beec-b2b918f50032","orderId":2,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,43,55,498302000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:44:35.370358","status":"CANCELLED","updatedAt":[2025,10,5,13,43,55,498316000]}, headers={__ContentTypeId__=[B@4be77cc4, kafka_offset=3, __KeyTypeId__=[B@6abbc1df, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@6c825f19, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759652075391, kafka_acknowledgment=Acknowledgment for order.cancelled-0@3, __TypeId__=[B@805a6b5, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:48 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 4 for partition order.cancelled-0
2025-10-06 14:48:48 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@3
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"cdddf310-e09d-4221-b773-1e1f1807855f","orderNumber":"4c7d3c88-9b7a-423a-a1f6-7c27dcbb86d0","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":2999.97,"createdAt":[2025,10,5,13,17,23,227752000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:17:23.236511","status":"PENDING","updatedAt":[2025,10,5,13,17,23,227796000]}, headers={__ContentTypeId__=[B@658f0d50, kafka_offset=3, __KeyTypeId__=[B@26ccc1d9, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3bcd100b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759650443448, kafka_acknowledgment=Acknowledgment for order.created-0@3, __TypeId__=[B@191ba32a, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:48 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 4 for partition order.created-0
2025-10-06 14:48:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@3
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@7b3d3d3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"cdddf310-e09d-4221-b773-1e1f1807855f","orderNumber":"4c7d3c88-9b7a-423a-a1f6-7c27dcbb86d0","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":2999.97,"createdAt":[2025,10,5,13,17,23,227752000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:17:23.236511","status":"PENDING","updatedAt":[2025,10,5,13,17,23,227796000]}, headers={__ContentTypeId__=[B@3c85e26c, kafka_offset=3, __KeyTypeId__=[B@4a60ecf5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5bc01b0b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759650443448, kafka_acknowledgment=Acknowledgment for order.created-0@3, __TypeId__=[B@113591ba, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 4 for partition order.created-0
2025-10-06 14:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@4
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@7b3d3d3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"2817f087-4fc7-475a-86f7-ee18ed54f86b","orderNumber":"294cd00b-e7c8-4509-94d1-d460439a9666","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,20,39,830340000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:20:39.832097","status":"PENDING","updatedAt":[2025,10,5,13,20,39,830361000]}, headers={__ContentTypeId__=[B@300d3dcf, kafka_offset=4, __KeyTypeId__=[B@108159e7, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5bc01b0b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759650639832, kafka_acknowledgment=Acknowledgment for order.created-0@4, __TypeId__=[B@2f1efd44, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 5 for partition order.created-0
2025-10-06 14:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@4
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"2817f087-4fc7-475a-86f7-ee18ed54f86b","orderNumber":"294cd00b-e7c8-4509-94d1-d460439a9666","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,20,39,830340000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:20:39.832097","status":"PENDING","updatedAt":[2025,10,5,13,20,39,830361000]}, headers={__ContentTypeId__=[B@55d748ac, kafka_offset=4, __KeyTypeId__=[B@182a9e48, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3bcd100b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759650639832, kafka_acknowledgment=Acknowledgment for order.created-0@4, __TypeId__=[B@39fdc8a, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 5 for partition order.created-0
2025-10-06 14:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@4
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"e9596ab6-f8d8-4850-9189-cb4b5a87c9b2","orderNumber":"8ffed856-b73d-4b3a-bd39-b89bf9a4b3c7","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,5,13,55,13,110657000],"customerEmail":"testuser@example.com","customerId":1,"shippingAddress":"123 User Street, User City","timestamp":"2025-10-05T13:55:30.536357","status":"CANCELLED","updatedAt":[2025,10,5,13,55,13,110666000]}, headers={__ContentTypeId__=[B@36c10678, kafka_offset=4, __KeyTypeId__=[B@61f2ff4e, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@6c825f19, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759652730543, kafka_acknowledgment=Acknowledgment for order.cancelled-0@4, __TypeId__=[B@e1535f2, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 5 for partition order.cancelled-0
2025-10-06 14:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@5
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"1a097506-7279-4c02-8911-3cbd2051b023","orderNumber":"c6a235b3-1434-4c15-b197-e58d3680ca20","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,14,0,58,980609000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T14:02:24.293178","status":"CANCELLED","updatedAt":[2025,10,5,14,0,58,980621000]}, headers={__ContentTypeId__=[B@6a6949cf, kafka_offset=5, __KeyTypeId__=[B@5dd4fae3, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@6c825f19, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759653144311, kafka_acknowledgment=Acknowledgment for order.cancelled-0@5, __TypeId__=[B@68783169, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 6 for partition order.cancelled-0
2025-10-06 14:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@5
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@7b3d3d3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b0f426cf-a0a7-4589-a7bc-f216b4e949f8","orderNumber":"639675c4-90a4-42fa-b696-ac16a1a2644c","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,27,22,138475000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:27:22.140228","status":"PENDING","updatedAt":[2025,10,5,13,27,22,138487000]}, headers={__ContentTypeId__=[B@60b1d5e6, kafka_offset=5, __KeyTypeId__=[B@158def9a, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5bc01b0b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759651042177, kafka_acknowledgment=Acknowledgment for order.created-0@5, __TypeId__=[B@5b79dc5d, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@5
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b0f426cf-a0a7-4589-a7bc-f216b4e949f8","orderNumber":"639675c4-90a4-42fa-b696-ac16a1a2644c","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,27,22,138475000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:27:22.140228","status":"PENDING","updatedAt":[2025,10,5,13,27,22,138487000]}, headers={__ContentTypeId__=[B@43ef9cd5, kafka_offset=5, __KeyTypeId__=[B@373caa03, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3bcd100b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759651042177, kafka_acknowledgment=Acknowledgment for order.created-0@5, __TypeId__=[B@2fa7681a, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 6 for partition order.created-0
2025-10-06 14:48:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 6 for partition order.created-0
2025-10-06 14:48:49 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/product-order-service] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-06 14:48:49 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-06 14:48:49 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-06 14:48:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-10-06 14:48:49 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 14:48:49 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 14:48:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-10-06 14:48:50 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@6
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"75d8e24c-c15d-4cd5-a724-b0473361062d","orderNumber":"e363bf6d-5e07-47d6-a606-8826fb9b7c9a","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,6,12,16,37,643528000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"123 Customer Street, Customer City","timestamp":"2025-10-06T12:23:22.153599","status":"CANCELLED","updatedAt":[2025,10,6,12,16,37,643540000]}, headers={__ContentTypeId__=[B@7947782f, kafka_offset=6, __KeyTypeId__=[B@e60a16e, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@6c825f19, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759733602170, kafka_acknowledgment=Acknowledgment for order.cancelled-0@6, __TypeId__=[B@478976c, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@6
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"3afe55c1-fb98-41fc-8506-d9612ea5205b","orderNumber":"dd671d51-c52e-467b-bd37-754e4804cce9","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,36,5,859548000],"customerEmail":"testcustomer@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:36:05.861915","status":"PENDING","updatedAt":[2025,10,5,13,36,5,859555000]}, headers={__ContentTypeId__=[B@7e4c9c1b, kafka_offset=6, __KeyTypeId__=[B@a514117, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3bcd100b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759651565898, kafka_acknowledgment=Acknowledgment for order.created-0@6, __TypeId__=[B@5a616591, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 7 for partition order.created-0
2025-10-06 14:48:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@6
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@7b3d3d3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"3afe55c1-fb98-41fc-8506-d9612ea5205b","orderNumber":"dd671d51-c52e-467b-bd37-754e4804cce9","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,36,5,859548000],"customerEmail":"testcustomer@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:36:05.861915","status":"PENDING","updatedAt":[2025,10,5,13,36,5,859555000]}, headers={__ContentTypeId__=[B@298071be, kafka_offset=6, __KeyTypeId__=[B@448d7c47, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5bc01b0b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759651565898, kafka_acknowledgment=Acknowledgment for order.created-0@6, __TypeId__=[B@d18cee8, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 7 for partition order.created-0
2025-10-06 14:48:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@7
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@7b3d3d3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b60e7e47-569f-4c6d-b029-4c2c9328bcd0","orderNumber":"77e4f83b-290c-4f6e-beec-b2b918f50032","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,43,55,498302000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:43:55.500675","status":"PENDING","updatedAt":[2025,10,5,13,43,55,498316000]}, headers={__ContentTypeId__=[B@4f623692, kafka_offset=7, __KeyTypeId__=[B@7c9741e4, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5bc01b0b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652035504, kafka_acknowledgment=Acknowledgment for order.created-0@7, __TypeId__=[B@615a148d, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@7
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b60e7e47-569f-4c6d-b029-4c2c9328bcd0","orderNumber":"77e4f83b-290c-4f6e-beec-b2b918f50032","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,43,55,498302000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:43:55.500675","status":"PENDING","updatedAt":[2025,10,5,13,43,55,498316000]}, headers={__ContentTypeId__=[B@43f81f90, kafka_offset=7, __KeyTypeId__=[B@626fc9b7, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3bcd100b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652035504, kafka_acknowledgment=Acknowledgment for order.created-0@7, __TypeId__=[B@ef5e8a1, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 8 for partition order.created-0
2025-10-06 14:48:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 8 for partition order.created-0
2025-10-06 14:48:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@8
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@7b3d3d3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"e07d01a8-fa5a-4268-8a2d-032027c60cbf","orderNumber":"22251392-4b09-4b14-9a2d-28ce6e9b9616","orderId":3,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,13,45,2,791477000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:45:02.794013","status":"PENDING","updatedAt":[2025,10,5,13,45,2,791507000]}, headers={__ContentTypeId__=[B@36f0f41, kafka_offset=8, __KeyTypeId__=[B@2468e4cb, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5bc01b0b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=3, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652102794, kafka_acknowledgment=Acknowledgment for order.created-0@8, __TypeId__=[B@3282e7db, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 9 for partition order.created-0
2025-10-06 14:48:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@8
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"e07d01a8-fa5a-4268-8a2d-032027c60cbf","orderNumber":"22251392-4b09-4b14-9a2d-28ce6e9b9616","orderId":3,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,13,45,2,791477000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:45:02.794013","status":"PENDING","updatedAt":[2025,10,5,13,45,2,791507000]}, headers={__ContentTypeId__=[B@6b5815d4, kafka_offset=8, __KeyTypeId__=[B@574407b2, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3bcd100b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=3, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652102794, kafka_acknowledgment=Acknowledgment for order.created-0@8, __TypeId__=[B@543469b, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 9 for partition order.created-0
2025-10-06 14:48:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@9
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"baadd731-8880-4034-af61-bb3239c50fbd","orderNumber":"8ffed856-b73d-4b3a-bd39-b89bf9a4b3c7","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,5,13,55,13,110657000],"customerEmail":"testuser@example.com","customerId":1,"shippingAddress":"123 User Street, User City","timestamp":"2025-10-05T13:55:13.115094","status":"PENDING","updatedAt":[2025,10,5,13,55,13,110666000]}, headers={__ContentTypeId__=[B@6c713868, kafka_offset=9, __KeyTypeId__=[B@26ad408d, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3bcd100b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652713187, kafka_acknowledgment=Acknowledgment for order.created-0@9, __TypeId__=[B@36715a7, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@9
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@7b3d3d3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"baadd731-8880-4034-af61-bb3239c50fbd","orderNumber":"8ffed856-b73d-4b3a-bd39-b89bf9a4b3c7","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,5,13,55,13,110657000],"customerEmail":"testuser@example.com","customerId":1,"shippingAddress":"123 User Street, User City","timestamp":"2025-10-05T13:55:13.115094","status":"PENDING","updatedAt":[2025,10,5,13,55,13,110666000]}, headers={__ContentTypeId__=[B@15f1b756, kafka_offset=9, __KeyTypeId__=[B@5f312dda, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5bc01b0b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652713187, kafka_acknowledgment=Acknowledgment for order.created-0@9, __TypeId__=[B@19d1527a, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 10 for partition order.created-0
2025-10-06 14:48:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 10 for partition order.created-0
2025-10-06 14:48:52 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@10
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"80147450-718c-47c4-8886-ed5711a0e4a9","orderNumber":"c6a235b3-1434-4c15-b197-e58d3680ca20","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,14,0,58,980609000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T14:00:58.983578","status":"PENDING","updatedAt":[2025,10,5,14,0,58,980621000]}, headers={__ContentTypeId__=[B@7356c167, kafka_offset=10, __KeyTypeId__=[B@1f3564b3, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3bcd100b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759653059048, kafka_acknowledgment=Acknowledgment for order.created-0@10, __TypeId__=[B@136d10bc, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:52 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 11 for partition order.created-0
2025-10-06 14:48:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@10
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@7b3d3d3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"80147450-718c-47c4-8886-ed5711a0e4a9","orderNumber":"c6a235b3-1434-4c15-b197-e58d3680ca20","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,14,0,58,980609000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T14:00:58.983578","status":"PENDING","updatedAt":[2025,10,5,14,0,58,980621000]}, headers={__ContentTypeId__=[B@233da669, kafka_offset=10, __KeyTypeId__=[B@6921193e, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5bc01b0b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759653059048, kafka_acknowledgment=Acknowledgment for order.created-0@10, __TypeId__=[B@38106eb5, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 11 for partition order.created-0
2025-10-06 14:48:52 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@11
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"07ca2c52-026c-4db1-9b9b-6f36fc7d83d5","orderNumber":"e363bf6d-5e07-47d6-a606-8826fb9b7c9a","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,6,12,16,37,643528000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"123 Customer Street, Customer City","timestamp":"2025-10-06T12:16:37.656400","status":"PENDING","updatedAt":[2025,10,6,12,16,37,643540000]}, headers={__ContentTypeId__=[B@172095a3, kafka_offset=11, __KeyTypeId__=[B@218b048a, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3bcd100b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759733197742, kafka_acknowledgment=Acknowledgment for order.created-0@11, __TypeId__=[B@41b0a4d, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:52 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 12 for partition order.created-0
2025-10-06 14:48:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@11
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@7b3d3d3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"07ca2c52-026c-4db1-9b9b-6f36fc7d83d5","orderNumber":"e363bf6d-5e07-47d6-a606-8826fb9b7c9a","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,6,12,16,37,643528000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"123 Customer Street, Customer City","timestamp":"2025-10-06T12:16:37.656400","status":"PENDING","updatedAt":[2025,10,6,12,16,37,643540000]}, headers={__ContentTypeId__=[B@2e1d24a, kafka_offset=11, __KeyTypeId__=[B@29fce88e, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5bc01b0b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759733197742, kafka_acknowledgment=Acknowledgment for order.created-0@11, __TypeId__=[B@2bf514da, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 12 for partition order.created-0
2025-10-06 14:48:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@12
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@7b3d3d3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"f2f06bc0-0107-4262-8cd7-168a828de38c","orderNumber":"b0be4aa0-b061-4387-9a52-347abd1b468d","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,6,12,27,27,611165000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T12:27:27.614105","status":"PENDING","updatedAt":[2025,10,6,12,27,27,611182000]}, headers={__ContentTypeId__=[B@21af6253, kafka_offset=12, __KeyTypeId__=[B@5590ce87, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5bc01b0b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759733847631, kafka_acknowledgment=Acknowledgment for order.created-0@12, __TypeId__=[B@5e4d2ce5, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:53 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@12
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"f2f06bc0-0107-4262-8cd7-168a828de38c","orderNumber":"b0be4aa0-b061-4387-9a52-347abd1b468d","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,6,12,27,27,611165000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T12:27:27.614105","status":"PENDING","updatedAt":[2025,10,6,12,27,27,611182000]}, headers={__ContentTypeId__=[B@2d86583e, kafka_offset=12, __KeyTypeId__=[B@1700f9aa, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3bcd100b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759733847631, kafka_acknowledgment=Acknowledgment for order.created-0@12, __TypeId__=[B@63916f66, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 13 for partition order.created-0
2025-10-06 14:48:53 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 13 for partition order.created-0
2025-10-06 14:48:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@13
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@7b3d3d3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"3d450892-dfc9-4aa1-831d-0ca22a29622e","orderNumber":"63073bd3-dae7-4438-b42b-d5c888ed9a82","orderId":3,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,12,34,43,877389000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"123 Customer Street, Customer City","timestamp":"2025-10-06T12:34:43.879592","status":"PENDING","updatedAt":[2025,10,6,12,34,43,877406000]}, headers={__ContentTypeId__=[B@6cc59c7f, kafka_offset=13, __KeyTypeId__=[B@cffefa4, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5bc01b0b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=3, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759734283879, kafka_acknowledgment=Acknowledgment for order.created-0@13, __TypeId__=[B@7020f3d, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 14 for partition order.created-0
2025-10-06 14:48:54 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@13
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"3d450892-dfc9-4aa1-831d-0ca22a29622e","orderNumber":"63073bd3-dae7-4438-b42b-d5c888ed9a82","orderId":3,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,12,34,43,877389000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"123 Customer Street, Customer City","timestamp":"2025-10-06T12:34:43.879592","status":"PENDING","updatedAt":[2025,10,6,12,34,43,877406000]}, headers={__ContentTypeId__=[B@6881aa5a, kafka_offset=13, __KeyTypeId__=[B@5d88c5bc, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3bcd100b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=3, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759734283879, kafka_acknowledgment=Acknowledgment for order.created-0@13, __TypeId__=[B@13fa17fa, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:54 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 14 for partition order.created-0
2025-10-06 14:48:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@14
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@7b3d3d3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"28611ee8-81f5-4f5b-a647-12b5f0099484","orderNumber":"194030fe-e4cf-4f17-9135-32b410e8ebd3","orderId":4,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":15999.84,"createdAt":[2025,10,6,14,32,12,304814000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T14:32:12.307924","status":"PENDING","updatedAt":[2025,10,6,14,32,12,304828000]}, headers={__ContentTypeId__=[B@277d2ec1, kafka_offset=14, __KeyTypeId__=[B@4bd4313, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5bc01b0b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=4, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759741332312, kafka_acknowledgment=Acknowledgment for order.created-0@14, __TypeId__=[B@5e8cd5eb, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:54 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@14
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"28611ee8-81f5-4f5b-a647-12b5f0099484","orderNumber":"194030fe-e4cf-4f17-9135-32b410e8ebd3","orderId":4,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":15999.84,"createdAt":[2025,10,6,14,32,12,304814000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T14:32:12.307924","status":"PENDING","updatedAt":[2025,10,6,14,32,12,304828000]}, headers={__ContentTypeId__=[B@26651470, kafka_offset=14, __KeyTypeId__=[B@4d32132c, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3bcd100b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=4, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759741332312, kafka_acknowledgment=Acknowledgment for order.created-0@14, __TypeId__=[B@49f5a6e3, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 15 for partition order.created-0
2025-10-06 14:48:54 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 15 for partition order.created-0
2025-10-06 14:48:55 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@15
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"f2153287-0615-40d4-a561-d211f0342f87","orderNumber":"ec221793-5c90-4f77-8011-fff048dfe007","orderId":5,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":799.84,"createdAt":[2025,10,6,14,42,23,426209000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T14:42:23.430215","status":"PENDING","updatedAt":[2025,10,6,14,42,23,426220000]}, headers={__ContentTypeId__=[B@575ad780, kafka_offset=15, __KeyTypeId__=[B@413d7a0f, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3bcd100b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=5, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759741943437, kafka_acknowledgment=Acknowledgment for order.created-0@15, __TypeId__=[B@3cb1b3fd, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:48:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@15
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@7b3d3d3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"f2153287-0615-40d4-a561-d211f0342f87","orderNumber":"ec221793-5c90-4f77-8011-fff048dfe007","orderId":5,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":799.84,"createdAt":[2025,10,6,14,42,23,426209000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T14:42:23.430215","status":"PENDING","updatedAt":[2025,10,6,14,42,23,426220000]}, headers={__ContentTypeId__=[B@3356a189, kafka_offset=15, __KeyTypeId__=[B@80af03f, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5bc01b0b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=5, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759741943437, kafka_acknowledgment=Acknowledgment for order.created-0@15, __TypeId__=[B@667fbcf, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 14:57:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Node -1 disconnected.
2025-10-06 14:57:41 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Node -1 disconnected.
2025-10-06 14:57:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Node -1 disconnected.
2025-10-06 14:57:41 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Node -1 disconnected.
2025-10-06 15:09:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-10-06 15:09:37 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:09:37 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:09:37 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-10-06 15:09:37 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Login attempt for user: customer
2025-10-06 15:09:37 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Password provided: customer123
2025-10-06 15:09:37 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Attempting authentication for user: customer
2025-10-06 15:09:37 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:09:37 [http-nio-8080-exec-2] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:09:37 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:09:37 [http-nio-8080-exec-2] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-06 15:09:37 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Authentication successful for user: customer
2025-10-06 15:09:37 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:09:37 [http-nio-8080-exec-2] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:09:37 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:09:37 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - User details loaded: customer
2025-10-06 15:09:37 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - JWT token generated successfully
2025-10-06 15:09:37 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Login successful for user: customer
2025-10-06 15:09:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/orders
2025-10-06 15:09:37 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:09:37 [http-nio-8080-exec-4] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:09:37 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:09:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/orders
2025-10-06 15:09:37 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 15:09:37 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 15:09:37 [http-nio-8080-exec-4] INFO  c.e.p.controller.OrderController - Creating order for customer ID: 2
2025-10-06 15:09:37 [http-nio-8080-exec-4] INFO  c.e.p.d.s.impl.OrderServiceImpl - Creating order for customer ID: 2
2025-10-06 15:09:37 [http-nio-8080-exec-4] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created with ID: 1
2025-10-06 15:09:37 [http-nio-8080-exec-4] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Publishing order created event for order ID: 1
2025-10-06 15:09:37 [http-nio-8080-exec-4] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2025-10-06 15:09:37 [http-nio-8080-exec-4] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2025-10-06 15:09:37 [http-nio-8080-exec-4] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 15:09:37 [http-nio-8080-exec-4] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 15:09:37 [http-nio-8080-exec-4] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759743577820
2025-10-06 15:09:37 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 15:09:37 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 15:09:37 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 1007 with epoch 0
2025-10-06 15:09:37 [http-nio-8080-exec-4] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Order created event published successfully for order ID: 1
2025-10-06 15:09:37 [http-nio-8080-exec-4] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created successfully for customer ID: 2
2025-10-06 15:09:37 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@16
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"6d0e92dd-e6bd-4c0f-9228-c6af9200df2f","orderNumber":"97fa8459-5617-42aa-97d0-b465d90a20da","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,15,9,37,791909000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Addr","timestamp":"2025-10-06T15:09:37.794845","status":"PENDING","updatedAt":[2025,10,6,15,9,37,791926000]}, headers={__ContentTypeId__=[B@211d1572, kafka_offset=16, __KeyTypeId__=[B@343be878, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3bcd100b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759743577848, kafka_acknowledgment=Acknowledgment for order.created-0@16, __TypeId__=[B@34201a8a, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:09:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@16
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@7b3d3d3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"6d0e92dd-e6bd-4c0f-9228-c6af9200df2f","orderNumber":"97fa8459-5617-42aa-97d0-b465d90a20da","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,15,9,37,791909000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Addr","timestamp":"2025-10-06T15:09:37.794845","status":"PENDING","updatedAt":[2025,10,6,15,9,37,791926000]}, headers={__ContentTypeId__=[B@10427db7, kafka_offset=16, __KeyTypeId__=[B@770b5e57, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5bc01b0b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759743577848, kafka_acknowledgment=Acknowledgment for order.created-0@16, __TypeId__=[B@2202c2d6, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:09:37 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments
2025-10-06 15:09:37 [http-nio-8080-exec-5] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:09:37 [http-nio-8080-exec-5] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:09:37 [http-nio-8080-exec-5] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:09:37 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments
2025-10-06 15:09:37 [http-nio-8080-exec-5] ERROR c.e.p.c.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('1' (code 49)): was expecting comma to separate Object entries
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:406)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:354)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:183)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:136)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.ecommerce.productorder.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character ('1' (code 49)): was expecting comma to separate Object entries
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 2, column: 2]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2477)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:750)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:674)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(UTF8StreamJsonParser.java:1062)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:399)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2105)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1481)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:395)
	... 132 common frames omitted
2025-10-06 15:11:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-10-06 15:11:02 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:02 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-10-06 15:11:02 [http-nio-8080-exec-6] INFO  c.e.p.controller.AuthController - Login attempt for user: customer
2025-10-06 15:11:02 [http-nio-8080-exec-6] INFO  c.e.p.controller.AuthController - Password provided: customer123
2025-10-06 15:11:02 [http-nio-8080-exec-6] INFO  c.e.p.controller.AuthController - Attempting authentication for user: customer
2025-10-06 15:11:02 [http-nio-8080-exec-6] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:11:02 [http-nio-8080-exec-6] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:11:02 [http-nio-8080-exec-6] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:11:02 [http-nio-8080-exec-6] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-06 15:11:02 [http-nio-8080-exec-6] INFO  c.e.p.controller.AuthController - Authentication successful for user: customer
2025-10-06 15:11:02 [http-nio-8080-exec-6] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:11:02 [http-nio-8080-exec-6] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:11:02 [http-nio-8080-exec-6] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:11:02 [http-nio-8080-exec-6] INFO  c.e.p.controller.AuthController - User details loaded: customer
2025-10-06 15:11:02 [http-nio-8080-exec-6] INFO  c.e.p.controller.AuthController - JWT token generated successfully
2025-10-06 15:11:02 [http-nio-8080-exec-6] INFO  c.e.p.controller.AuthController - Login successful for user: customer
2025-10-06 15:11:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/orders
2025-10-06 15:11:02 [http-nio-8080-exec-8] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:11:02 [http-nio-8080-exec-8] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:11:02 [http-nio-8080-exec-8] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:11:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/orders
2025-10-06 15:11:02 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 15:11:02 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 15:11:02 [http-nio-8080-exec-8] INFO  c.e.p.controller.OrderController - Creating order for customer ID: 2
2025-10-06 15:11:02 [http-nio-8080-exec-8] INFO  c.e.p.d.s.impl.OrderServiceImpl - Creating order for customer ID: 2
2025-10-06 15:11:02 [http-nio-8080-exec-8] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created with ID: 2
2025-10-06 15:11:02 [http-nio-8080-exec-8] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Publishing order created event for order ID: 2
2025-10-06 15:11:02 [http-nio-8080-exec-8] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Order created event published successfully for order ID: 2
2025-10-06 15:11:02 [http-nio-8080-exec-8] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created successfully for customer ID: 2
2025-10-06 15:11:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments
2025-10-06 15:11:02 [http-nio-8080-exec-10] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:11:02 [http-nio-8080-exec-10] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:11:02 [http-nio-8080-exec-10] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:11:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments
2025-10-06 15:11:02 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@17
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"dfee185d-b101-405f-abce-38a6e278a43c","orderNumber":"aaccb545-1028-4ac5-808b-9f491b2394c7","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,15,11,2,485485000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Addr","timestamp":"2025-10-06T15:11:02.487151","status":"PENDING","updatedAt":[2025,10,6,15,11,2,485493000]}, headers={__ContentTypeId__=[B@648a1e1d, kafka_offset=17, __KeyTypeId__=[B@58fce9c6, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3bcd100b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759743662487, kafka_acknowledgment=Acknowledgment for order.created-0@17, __TypeId__=[B@155de9e5, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:11:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@17
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@7b3d3d3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"dfee185d-b101-405f-abce-38a6e278a43c","orderNumber":"aaccb545-1028-4ac5-808b-9f491b2394c7","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,15,11,2,485485000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Addr","timestamp":"2025-10-06T15:11:02.487151","status":"PENDING","updatedAt":[2025,10,6,15,11,2,485493000]}, headers={__ContentTypeId__=[B@4eabb223, kafka_offset=17, __KeyTypeId__=[B@70773f83, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5bc01b0b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759743662487, kafka_acknowledgment=Acknowledgment for order.created-0@17, __TypeId__=[B@430603ed, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:11:02 [http-nio-8080-exec-10] ERROR c.e.p.c.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('2' (code 50)): was expecting comma to separate Object entries
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:406)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:354)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:183)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:136)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.ecommerce.productorder.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character ('2' (code 50)): was expecting comma to separate Object entries
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 2, column: 2]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2477)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:750)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:674)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(UTF8StreamJsonParser.java:1062)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:399)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2105)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1481)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:395)
	... 132 common frames omitted
2025-10-06 15:11:34 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/query.do?jsessionid=f57688513cfad5989bec63849e8ee76e
2025-10-06 15:11:34 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:34 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:34 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/query.do?jsessionid=f57688513cfad5989bec63849e8ee76e
2025-10-06 15:11:34 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/stylesheet.css
2025-10-06 15:11:34 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:34 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:34 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/stylesheet.css
2025-10-06 15:11:34 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/login.jsp?jsessionid=ec7d5a17908ef444c7434a7003475d19
2025-10-06 15:11:34 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:34 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:34 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/login.jsp?jsessionid=ec7d5a17908ef444c7434a7003475d19
2025-10-06 15:11:34 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/login.jsp
2025-10-06 15:11:34 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:34 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:34 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/login.jsp
2025-10-06 15:11:34 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/background.gif
2025-10-06 15:11:34 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:34 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:34 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/background.gif
2025-10-06 15:11:34 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/login.jsp?jsessionid=a89f59e2d2da90f5cd1497dff835f5e0
2025-10-06 15:11:34 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:34 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:34 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/login.jsp?jsessionid=a89f59e2d2da90f5cd1497dff835f5e0
2025-10-06 15:11:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/login.do?jsessionid=a89f59e2d2da90f5cd1497dff835f5e0
2025-10-06 15:11:40 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/login.do?jsessionid=a89f59e2d2da90f5cd1497dff835f5e0
2025-10-06 15:11:40 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/header.jsp?jsessionid=a89f59e2d2da90f5cd1497dff835f5e0
2025-10-06 15:11:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tables.do?jsessionid=a89f59e2d2da90f5cd1497dff835f5e0
2025-10-06 15:11:40 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/query.jsp?jsessionid=a89f59e2d2da90f5cd1497dff835f5e0
2025-10-06 15:11:40 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/header.jsp?jsessionid=a89f59e2d2da90f5cd1497dff835f5e0
2025-10-06 15:11:40 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/query.jsp?jsessionid=a89f59e2d2da90f5cd1497dff835f5e0
2025-10-06 15:11:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/help.jsp?jsessionid=a89f59e2d2da90f5cd1497dff835f5e0
2025-10-06 15:11:40 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tables.do?jsessionid=a89f59e2d2da90f5cd1497dff835f5e0
2025-10-06 15:11:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/help.jsp?jsessionid=a89f59e2d2da90f5cd1497dff835f5e0
2025-10-06 15:11:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_line.gif
2025-10-06 15:11:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_disconnect.gif
2025-10-06 15:11:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_help.gif
2025-10-06 15:11:40 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_help.gif
2025-10-06 15:11:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_disconnect.gif
2025-10-06 15:11:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_line.gif
2025-10-06 15:11:40 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_history.gif
2025-10-06 15:11:40 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_commit.gif
2025-10-06 15:11:40 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_history.gif
2025-10-06 15:11:40 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_commit.gif
2025-10-06 15:11:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_refresh.gif
2025-10-06 15:11:40 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_refresh.gif
2025-10-06 15:11:40 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_rollback.gif
2025-10-06 15:11:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_run.gif
2025-10-06 15:11:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_stop.gif
2025-10-06 15:11:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_run_selected.gif
2025-10-06 15:11:40 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_run.gif
2025-10-06 15:11:40 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_rollback.gif
2025-10-06 15:11:40 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_stop.gif
2025-10-06 15:11:40 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_run_selected.gif
2025-10-06 15:11:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree.js
2025-10-06 15:11:40 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree.js
2025-10-06 15:11:40 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_database.gif
2025-10-06 15:11:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_table.gif
2025-10-06 15:11:40 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_minus.gif
2025-10-06 15:11:40 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_column.gif
2025-10-06 15:11:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_empty.gif
2025-10-06 15:11:40 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_plus.gif
2025-10-06 15:11:40 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_column.gif
2025-10-06 15:11:40 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_database.gif
2025-10-06 15:11:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_table.gif
2025-10-06 15:11:40 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_plus.gif
2025-10-06 15:11:40 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_minus.gif
2025-10-06 15:11:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_empty.gif
2025-10-06 15:11:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_type.gif
2025-10-06 15:11:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_folder.gif
2025-10-06 15:11:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_index_az.gif
2025-10-06 15:11:40 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_index.gif
2025-10-06 15:11:40 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_type.gif
2025-10-06 15:11:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_folder.gif
2025-10-06 15:11:40 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_view.gif
2025-10-06 15:11:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_index_az.gif
2025-10-06 15:11:40 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_index.gif
2025-10-06 15:11:40 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_view.gif
2025-10-06 15:11:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_users.gif
2025-10-06 15:11:40 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_users.gif
2025-10-06 15:11:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_info.gif
2025-10-06 15:11:40 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_info.gif
2025-10-06 15:11:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_user.gif
2025-10-06 15:11:40 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:40 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_user.gif
2025-10-06 15:11:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/query.do?jsessionid=a89f59e2d2da90f5cd1497dff835f5e0
2025-10-06 15:11:51 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:51 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/query.do?jsessionid=a89f59e2d2da90f5cd1497dff835f5e0
2025-10-06 15:11:51 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/stylesheet.css
2025-10-06 15:11:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/table.js
2025-10-06 15:11:51 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:51 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:51 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:11:51 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:11:51 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/stylesheet.css
2025-10-06 15:11:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/table.js
2025-10-06 15:12:00 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/query.do?jsessionid=a89f59e2d2da90f5cd1497dff835f5e0
2025-10-06 15:12:00 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:12:00 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:12:00 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/query.do?jsessionid=a89f59e2d2da90f5cd1497dff835f5e0
2025-10-06 15:12:57 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments
2025-10-06 15:12:57 [http-nio-8080-exec-10] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:12:57 [http-nio-8080-exec-10] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:12:57 [http-nio-8080-exec-10] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:12:57 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments
2025-10-06 15:12:57 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:12:57 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:12:57 [http-nio-8080-exec-10] INFO  c.e.p.controller.PaymentController - Processing payment for order ID: 1
2025-10-06 15:12:57 [http-nio-8080-exec-10] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing payment for order ID: 1, amount: 980.00
2025-10-06 15:12:57 [http-nio-8080-exec-10] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Payment created with ID: e1c13366-521e-49f0-b9ee-d34df9422d7b
2025-10-06 15:12:57 [http-nio-8080-exec-10] INFO  c.e.p.p.s.i.PaymentGatewayServiceImpl - Processing payment through gateway for payment ID: e1c13366-521e-49f0-b9ee-d34df9422d7b
2025-10-06 15:12:57 [http-nio-8080-exec-10] DEBUG c.e.p.p.s.i.PaymentGatewayServiceImpl - Validating payment method for request: CREDIT_CARD
2025-10-06 15:12:57 [http-nio-8080-exec-10] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Publishing payment processed event for payment ID: e1c13366-521e-49f0-b9ee-d34df9422d7b
2025-10-06 15:12:57 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition payment.processed-0 to 10 since the associated topicId changed from null to t5NxQuSTQC2hC3JUcDzeGg
2025-10-06 15:12:57 [http-nio-8080-exec-10] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Payment processed event published successfully for payment ID: e1c13366-521e-49f0-b9ee-d34df9422d7b
2025-10-06 15:12:57 [http-nio-8080-exec-10] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Payment processed successfully for order ID: 1
2025-10-06 15:12:57 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for payment.processed-0@3
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handlePaymentProcessedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@7b3d3d3d]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"4e69f2c3-eac9-4192-b08c-b852e2a5facc","amount":980.00,"orderId":1,"eventType":"PAYMENT_PROCESSED","serviceName":"product-order-service","transactionId":"TXN_B077043F","serviceVersion":"1.0.0","createdAt":[2025,10,6,15,12,57,317085000],"paymentId":"e1c13366-521e-49f0-b9ee-d34df9422d7b","gatewayResponse":"Payment authorized successfully","customerId":2,"processedAt":[2025,10,6,15,12,57,830703000],"paymentMethod":"CREDIT_CARD","timestamp":"2025-10-06T15:12:57.832823","status":"COMPLETED","updatedAt":[2025,10,6,15,12,57,317102000]}, headers={__ContentTypeId__=[B@1dc738b3, kafka_offset=3, __KeyTypeId__=[B@123ac111, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@6b4d7042, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=e1c13366-521e-49f0-b9ee-d34df9422d7b, kafka_receivedTopic=payment.processed, kafka_receivedTimestamp=1759743777844, kafka_acknowledgment=Acknowledgment for payment.processed-0@3, __TypeId__=[B@4151f972, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:13:03 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/query.do?jsessionid=a89f59e2d2da90f5cd1497dff835f5e0
2025-10-06 15:13:03 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:13:03 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:13:03 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/query.do?jsessionid=a89f59e2d2da90f5cd1497dff835f5e0
2025-10-06 15:13:03 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/table.js
2025-10-06 15:13:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/stylesheet.css
2025-10-06 15:13:03 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:13:03 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:13:03 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:13:03 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:13:03 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/stylesheet.css
2025-10-06 15:13:03 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/table.js
2025-10-06 15:13:15 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments
2025-10-06 15:13:15 [http-nio-8080-exec-8] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:13:15 [http-nio-8080-exec-8] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:13:15 [http-nio-8080-exec-8] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:13:15 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments
2025-10-06 15:13:15 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:13:15 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:13:15 [http-nio-8080-exec-8] INFO  c.e.p.controller.PaymentController - Processing payment for order ID: 1
2025-10-06 15:13:15 [http-nio-8080-exec-8] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing payment for order ID: 1, amount: 980.00
2025-10-06 15:13:15 [http-nio-8080-exec-8] ERROR c.e.p.p.s.impl.PaymentServiceImpl - Error processing payment for order ID: 1
com.ecommerce.productorder.exception.BusinessException: Payment already exists for order ID: 1
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl.processPayment(PaymentServiceImpl.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl$$SpringCGLIB$$0.processPayment(<generated>)
	at com.ecommerce.productorder.controller.PaymentController.processPayment(PaymentController.java:71)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:199)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.controller.PaymentController$$SpringCGLIB$$0.processPayment(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.ecommerce.productorder.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-10-06 15:13:15 [http-nio-8080-exec-8] ERROR c.e.p.c.GlobalExceptionHandler - Business rule violation: Failed to process payment: Payment already exists for order ID: 1
2025-10-06 15:14:37 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 15:15:28 [Thread-2] INFO  c.e.p.config.GrpcServerConfig - Shutting down gRPC server...
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Revoke previously assigned partitions payment.processed-0
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Revoke previously assigned partitions order.cancelled-0
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Revoke previously assigned partitions order.created-0
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Revoke previously assigned partitions order.created-0
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: partitions revoked: [order.cancelled-0]
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: partitions revoked: [payment.processed-0]
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: partitions revoked: [order.created-0]
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Member consumer-notification-service-3-8002c232-bdfa-4468-b34b-6cac358cc4dd sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Member consumer-notification-service-4-b66ba09b-062f-440e-a0ba-176ce6422e18 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: partitions revoked: [order.created-0]
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Member consumer-inventory-service-1-273f8601-1ddc-434a-8580-0c7d6952e428 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Member consumer-inventory-service-2-a79812c7-b5fc-4878-9d53-706eddf25967 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Unsubscribed all topics or patterns and assigned partitions
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Unsubscribed all topics or patterns and assigned partitions
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-notification-service-4 unregistered
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-inventory-service-2 unregistered
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: Consumer stopped
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: Consumer stopped
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-inventory-service-1 unregistered
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: Consumer stopped
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-notification-service-3 unregistered
2025-10-06 15:15:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: Consumer stopped
2025-10-06 15:15:28 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-10-06 15:15:28 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 15:15:28 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 15:15:28 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 15:15:28 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-10-06 15:15:28 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-06 15:15:28 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-06 15:15:28 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-06 15:15:29 [main] INFO  c.e.p.ProductOrderServiceApplication - Starting ProductOrderServiceApplication v1.0.0 using Java 17.0.16 with PID 89962 (/Users/sushantpandey/product-order-service/target/product-order-service-1.0.0.jar started by sushantpandey in /Users/sushantpandey/product-order-service)
2025-10-06 15:15:29 [main] DEBUG c.e.p.ProductOrderServiceApplication - Running with Spring Boot v3.1.5, Spring v6.0.13
2025-10-06 15:15:29 [main] INFO  c.e.p.ProductOrderServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-06 15:15:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-06 15:15:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-06 15:15:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 226 ms. Found 6 JPA repository interfaces.
2025-10-06 15:15:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-06 15:15:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-10-06 15:15:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.payment.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 15:15:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.domain.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 15:15:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.domain.repository.CustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 15:15:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.domain.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 15:15:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.domain.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 15:15:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.invoice.domain.repository.InvoiceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 15:15:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-10-06 15:15:32 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-10-06 15:15:32 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-06 15:15:32 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.15]
2025-10-06 15:15:32 [main] INFO  o.a.c.c.C.[.[.[/product-order-service] - Initializing Spring embedded WebApplicationContext
2025-10-06 15:15:32 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2833 ms
2025-10-06 15:15:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-06 15:15:32 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-10-06 15:15:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-06 15:15:32 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-10-06 15:15:32 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-06 15:15:32 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.13.Final
2025-10-06 15:15:32 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-06 15:15:32 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-06 15:15:32 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-06 15:15:33 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-06 15:15:33 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-06 15:15:33 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-06 15:15:34 [main] DEBUG c.e.p.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
2025-10-06 15:15:34 [main] INFO  c.e.p.config.GrpcServerConfig - Starting gRPC server on port: 9090
2025-10-06 15:15:34 [main] INFO  c.e.p.config.GrpcServerConfig - gRPC server started successfully on port: 9090
2025-10-06 15:15:35 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-10-06 15:15:35 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-06 15:15:35 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2f6fcc70, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@60666985, org.springframework.security.web.context.SecurityContextHolderFilter@76b9056d, org.springframework.security.web.header.HeaderWriterFilter@2e940dd0, org.springframework.web.filter.CorsFilter@5effc15d, org.springframework.security.web.authentication.logout.LogoutFilter@4545ac62, com.ecommerce.productorder.config.JwtRequestFilter@c2ddfeb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4bcfa08b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@20bc6f4d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2a7ed9bd, org.springframework.security.web.session.SessionManagementFilter@1e085e71, org.springframework.security.web.access.ExceptionTranslationFilter@3dcf26b5, org.springframework.security.web.access.intercept.AuthorizationFilter@67f5066e]
2025-10-06 15:15:35 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/product-order-service'
2025-10-06 15:15:35 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-inventory-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = inventory-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-10-06 15:15:36 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 15:15:36 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 15:15:36 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759743936071
2025-10-06 15:15:36 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Subscribed to topic(s): order.created
2025-10-06 15:15:36 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-inventory-service-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = inventory-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-10-06 15:15:36 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 15:15:36 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 15:15:36 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759743936082
2025-10-06 15:15:36 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Subscribed to topic(s): order.cancelled
2025-10-06 15:15:36 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-10-06 15:15:36 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 15:15:36 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 15:15:36 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759743936085
2025-10-06 15:15:36 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Subscribed to topic(s): order.created
2025-10-06 15:15:36 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-10-06 15:15:36 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 15:15:36 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 15:15:36 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759743936089
2025-10-06 15:15:36 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Subscribed to topic(s): payment.processed
2025-10-06 15:15:36 [main] INFO  c.e.p.ProductOrderServiceApplication - Started ProductOrderServiceApplication in 7.11 seconds (process running for 7.521)
2025-10-06 15:15:36 [main] INFO  c.e.p.config.DefaultUserInitializer - Initializing default users...
2025-10-06 15:15:36 [main] INFO  c.e.p.config.DefaultUserInitializer - Default admin user created: admin / admin123
2025-10-06 15:15:36 [main] INFO  c.e.p.config.DefaultUserInitializer - Default customer user created: customer / customer123
2025-10-06 15:15:36 [main] INFO  c.e.p.config.DefaultUserInitializer - Default users initialization completed
2025-10-06 15:15:36 [main] INFO  c.e.p.config.DataInitializer - === DATA INITIALIZER STARTING ===
2025-10-06 15:15:36 [main] INFO  c.e.p.config.DataInitializer - Starting data initialization...
2025-10-06 15:15:36 [main] INFO  c.e.p.config.DataInitializer - Initializing test data...
2025-10-06 15:15:36 [main] INFO  c.e.p.config.DataInitializer - Creating test categories and products...
2025-10-06 15:15:36 [main] INFO  c.e.p.config.DataInitializer - Created Electronics category
2025-10-06 15:15:36 [main] INFO  c.e.p.config.DataInitializer - Created Clothing category
2025-10-06 15:15:36 [main] INFO  c.e.p.config.DataInitializer - Created Books category
2025-10-06 15:15:36 [main] INFO  c.e.p.config.DataInitializer - Creating products...
2025-10-06 15:15:36 [main] INFO  c.e.p.config.DataInitializer - Created iPhone 15 product
2025-10-06 15:15:36 [main] INFO  c.e.p.config.DataInitializer - Created MacBook Pro product
2025-10-06 15:15:36 [main] INFO  c.e.p.config.DataInitializer - Created T-Shirt product
2025-10-06 15:15:36 [main] INFO  c.e.p.config.DataInitializer - Created Programming Book product
2025-10-06 15:15:36 [main] INFO  c.e.p.config.DataInitializer - Test data initialization completed
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting the last seen epoch of partition payment.processed-0 to 10 since the associated topicId changed from null to t5NxQuSTQC2hC3JUcDzeGg
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting the last seen epoch of partition order.cancelled-0 to 10 since the associated topicId changed from null to hAqa7gqzSgOGNgRsGTUgvg
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] (Re-)joining group
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] (Re-)joining group
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] (Re-)joining group
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] (Re-)joining group
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: need to re-join with the given member-id: consumer-inventory-service-2-7bf0a614-832c-46e9-a720-36f1d6c3762a
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-4-fc91780d-d920-491e-b271-5da826a60ded
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] (Re-)joining group
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-3-d42f933a-322d-436b-9065-5152dfb3e8ef
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] (Re-)joining group
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] (Re-)joining group
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: need to re-join with the given member-id: consumer-inventory-service-1-d1223592-1dfe-4827-98eb-59893144ff77
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-10-06 15:15:36 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] (Re-)joining group
2025-10-06 15:15:40 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/product-order-service] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-06 15:15:40 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-06 15:15:40 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-10-06 15:15:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-10-06 15:15:40 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:15:40 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:15:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Successfully joined group with generation Generation{generationId=5, memberId='consumer-inventory-service-1-d1223592-1dfe-4827-98eb-59893144ff77', protocol='range'}
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Successfully joined group with generation Generation{generationId=5, memberId='consumer-inventory-service-2-7bf0a614-832c-46e9-a720-36f1d6c3762a', protocol='range'}
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Successfully joined group with generation Generation{generationId=5, memberId='consumer-notification-service-3-d42f933a-322d-436b-9065-5152dfb3e8ef', protocol='range'}
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Successfully joined group with generation Generation{generationId=5, memberId='consumer-notification-service-4-fc91780d-d920-491e-b271-5da826a60ded', protocol='range'}
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Finished assignment for group at generation 5: {consumer-notification-service-3-d42f933a-322d-436b-9065-5152dfb3e8ef=Assignment(partitions=[order.created-0]), consumer-notification-service-4-fc91780d-d920-491e-b271-5da826a60ded=Assignment(partitions=[payment.processed-0])}
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Finished assignment for group at generation 5: {consumer-inventory-service-1-d1223592-1dfe-4827-98eb-59893144ff77=Assignment(partitions=[order.created-0]), consumer-inventory-service-2-7bf0a614-832c-46e9-a720-36f1d6c3762a=Assignment(partitions=[order.cancelled-0])}
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Successfully synced group in generation Generation{generationId=5, memberId='consumer-notification-service-3-d42f933a-322d-436b-9065-5152dfb3e8ef', protocol='range'}
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Successfully synced group in generation Generation{generationId=5, memberId='consumer-notification-service-4-fc91780d-d920-491e-b271-5da826a60ded', protocol='range'}
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Successfully synced group in generation Generation{generationId=5, memberId='consumer-inventory-service-2-7bf0a614-832c-46e9-a720-36f1d6c3762a', protocol='range'}
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Successfully synced group in generation Generation{generationId=5, memberId='consumer-inventory-service-1-d1223592-1dfe-4827-98eb-59893144ff77', protocol='range'}
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[order.created-0])
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order.created-0])
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[order.cancelled-0])
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[payment.processed-0])
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Adding newly assigned partitions: order.cancelled-0
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Adding newly assigned partitions: payment.processed-0
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Adding newly assigned partitions: order.created-0
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Adding newly assigned partitions: order.created-0
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Found no committed offset for partition order.created-0
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Found no committed offset for partition order.created-0
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Found no committed offset for partition payment.processed-0
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Found no committed offset for partition order.cancelled-0
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting offset for partition order.created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=10}}.
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting offset for partition payment.processed-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=10}}.
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting offset for partition order.cancelled-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=10}}.
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Resetting offset for partition order.created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=10}}.
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: partitions assigned: [order.created-0]
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: partitions assigned: [order.cancelled-0]
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: partitions assigned: [order.created-0]
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: partitions assigned: [payment.processed-0]
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for payment.processed-0@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handlePaymentProcessedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@24032706]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"723ace4d-c757-4f6a-a166-d253e64e55e9","amount":991.00,"orderId":1,"eventType":"PAYMENT_PROCESSED","serviceName":"product-order-service","transactionId":null,"serviceVersion":"1.0.0","createdAt":[2025,10,6,12,31,27,376058000],"paymentId":"859d87c3-704f-4843-ae6b-b7b3e98bc894","gatewayResponse":null,"customerId":2,"processedAt":[2025,10,6,12,31,27,378405000],"paymentMethod":"CREDIT_CARD","timestamp":"2025-10-06T12:31:27.378803","status":"FAILED","updatedAt":[2025,10,6,12,31,27,376082000]}, headers={__ContentTypeId__=[B@541af200, kafka_offset=0, __KeyTypeId__=[B@27ed917c, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@7c3e8081, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=859d87c3-704f-4843-ae6b-b7b3e98bc894, kafka_receivedTopic=payment.processed, kafka_receivedTimestamp=1759734087381, kafka_acknowledgment=Acknowledgment for payment.processed-0@0, __TypeId__=[B@65b0bd6e, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@24032706]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"9234e0dd-1c94-4d30-b847-6ef24ff8becd","orderNumber":"382207e8-13ea-4ba3-b2e8-c194086b0daf","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,3,21,50,17,915871000],"customerEmail":"test@example.com","customerId":1,"shippingAddress":"123 Main St, City, State","timestamp":"2025-10-03T21:50:17.917054","status":"PENDING","updatedAt":[2025,10,3,21,50,17,915889000]}, headers={__ContentTypeId__=[B@23bf08f7, kafka_offset=0, __KeyTypeId__=[B@32ff9614, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1e0ea37b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759508417960, kafka_acknowledgment=Acknowledgment for order.created-0@0, __TypeId__=[B@3717efc2, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"7155d081-0466-4ac3-9cf3-3745a67c8f61","orderNumber":"c2f007f9-afab-46c1-b0f6-3bddcc7fbea3","orderId":2,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,2,21,23,990587000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:22:47.292516","status":"CANCELLED","updatedAt":[2025,10,5,2,21,23,990602000]}, headers={__ContentTypeId__=[B@5ca911a1, kafka_offset=0, __KeyTypeId__=[B@66be33ab, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@497afc4d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759611167327, kafka_acknowledgment=Acknowledgment for order.cancelled-0@0, __TypeId__=[B@435bfbd8, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"9234e0dd-1c94-4d30-b847-6ef24ff8becd","orderNumber":"382207e8-13ea-4ba3-b2e8-c194086b0daf","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,3,21,50,17,915871000],"customerEmail":"test@example.com","customerId":1,"shippingAddress":"123 Main St, City, State","timestamp":"2025-10-03T21:50:17.917054","status":"PENDING","updatedAt":[2025,10,3,21,50,17,915889000]}, headers={__ContentTypeId__=[B@180086b0, kafka_offset=0, __KeyTypeId__=[B@6da94ec9, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3057f32c, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759508417960, kafka_acknowledgment=Acknowledgment for order.created-0@0, __TypeId__=[B@4ba6f8ea, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 1 for partition order.created-0
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 1 for partition order.created-0
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Seeking to offset 1 for partition payment.processed-0
2025-10-06 15:15:42 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 1 for partition order.cancelled-0
2025-10-06 15:15:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@24032706]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"6a8e200d-3344-4499-a3cb-0d5f3235fe09","orderNumber":"40bd1de4-e3e8-47e4-a452-7cb9b32f99aa","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,2,5,58,707310000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:05:58.799749","status":"PENDING","updatedAt":[2025,10,5,2,5,58,707354000]}, headers={__ContentTypeId__=[B@31178a20, kafka_offset=1, __KeyTypeId__=[B@5e240ea6, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1e0ea37b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759610159101, kafka_acknowledgment=Acknowledgment for order.created-0@1, __TypeId__=[B@61d8dc4b, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:43 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"9179492d-3893-4653-aff4-eb694c6a010e","orderNumber":"4c7d3c88-9b7a-423a-a1f6-7c27dcbb86d0","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":2999.97,"createdAt":[2025,10,5,13,17,23,227752000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:18:40.841978","status":"CANCELLED","updatedAt":[2025,10,5,13,17,23,227796000]}, headers={__ContentTypeId__=[B@1f5507ff, kafka_offset=1, __KeyTypeId__=[B@3d3c99f3, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@497afc4d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759650520859, kafka_acknowledgment=Acknowledgment for order.cancelled-0@1, __TypeId__=[B@7dcb4951, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 2 for partition order.created-0
2025-10-06 15:15:43 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 2 for partition order.cancelled-0
2025-10-06 15:15:43 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for payment.processed-0@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handlePaymentProcessedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@24032706]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"2249daaf-26c0-4568-aeb2-0e19fd437958","amount":991.00,"orderId":4,"eventType":"PAYMENT_PROCESSED","serviceName":"product-order-service","transactionId":"TXN_8211A67F","serviceVersion":"1.0.0","createdAt":[2025,10,6,14,33,49,790527000],"paymentId":"fad14391-88b2-4a54-997d-12b90c5a4ca0","gatewayResponse":"Payment authorized successfully","customerId":2,"processedAt":[2025,10,6,14,33,50,906999000],"paymentMethod":"CREDIT_CARD","timestamp":"2025-10-06T14:33:50.908785","status":"COMPLETED","updatedAt":[2025,10,6,14,33,49,790579000]}, headers={__ContentTypeId__=[B@7e8d7e83, kafka_offset=1, __KeyTypeId__=[B@13840c75, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@7c3e8081, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=fad14391-88b2-4a54-997d-12b90c5a4ca0, kafka_receivedTopic=payment.processed, kafka_receivedTimestamp=1759741430912, kafka_acknowledgment=Acknowledgment for payment.processed-0@1, __TypeId__=[B@4d6aad35, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:43 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Seeking to offset 2 for partition payment.processed-0
2025-10-06 15:15:43 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"6a8e200d-3344-4499-a3cb-0d5f3235fe09","orderNumber":"40bd1de4-e3e8-47e4-a452-7cb9b32f99aa","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,2,5,58,707310000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:05:58.799749","status":"PENDING","updatedAt":[2025,10,5,2,5,58,707354000]}, headers={__ContentTypeId__=[B@7eeb358b, kafka_offset=1, __KeyTypeId__=[B@7ea86279, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3057f32c, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759610159101, kafka_acknowledgment=Acknowledgment for order.created-0@1, __TypeId__=[B@31a3e6ba, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:43 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 2 for partition order.created-0
2025-10-06 15:15:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-10-06 15:15:43 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:15:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:15:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-10-06 15:15:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@24032706]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"cfde2282-fcb9-41a9-94ca-84608512a724","orderNumber":"c2f007f9-afab-46c1-b0f6-3bddcc7fbea3","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,2,21,23,990587000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:21:23.992450","status":"PENDING","updatedAt":[2025,10,5,2,21,23,990602000]}, headers={__ContentTypeId__=[B@1fda7d1, kafka_offset=2, __KeyTypeId__=[B@633a2c5b, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1e0ea37b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759611084008, kafka_acknowledgment=Acknowledgment for order.created-0@2, __TypeId__=[B@4423301, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 3 for partition order.created-0
2025-10-06 15:15:43 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b7a9d0bd-56cd-4a82-b7ef-29dc61722d4e","orderNumber":"dd671d51-c52e-467b-bd37-754e4804cce9","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,36,5,859548000],"customerEmail":"testcustomer@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:36:22.696339","status":"CANCELLED","updatedAt":[2025,10,5,13,36,5,859555000]}, headers={__ContentTypeId__=[B@706775b2, kafka_offset=2, __KeyTypeId__=[B@2258ca0f, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@497afc4d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759651582712, kafka_acknowledgment=Acknowledgment for order.cancelled-0@2, __TypeId__=[B@7ed36f44, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:43 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 3 for partition order.cancelled-0
2025-10-06 15:15:43 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for payment.processed-0@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handlePaymentProcessedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@24032706]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"225210ae-d345-4004-bd1f-f63512dbe97b","amount":980.00,"orderId":5,"eventType":"PAYMENT_PROCESSED","serviceName":"product-order-service","transactionId":"TXN_F8EB9DC1","serviceVersion":"1.0.0","createdAt":[2025,10,6,14,43,0,641018000],"paymentId":"9ffc4f8f-c155-4744-8228-ddb7d5f24469","gatewayResponse":"Payment authorized successfully","customerId":2,"processedAt":[2025,10,6,14,43,1,737752000],"paymentMethod":"CREDIT_CARD","timestamp":"2025-10-06T14:43:01.739004","status":"COMPLETED","updatedAt":[2025,10,6,14,43,0,641038000]}, headers={__ContentTypeId__=[B@2ed437cc, kafka_offset=2, __KeyTypeId__=[B@5a3687b3, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@7c3e8081, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=9ffc4f8f-c155-4744-8228-ddb7d5f24469, kafka_receivedTopic=payment.processed, kafka_receivedTimestamp=1759741981744, kafka_acknowledgment=Acknowledgment for payment.processed-0@2, __TypeId__=[B@3f0b34d3, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:43 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"cfde2282-fcb9-41a9-94ca-84608512a724","orderNumber":"c2f007f9-afab-46c1-b0f6-3bddcc7fbea3","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,2,21,23,990587000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:21:23.992450","status":"PENDING","updatedAt":[2025,10,5,2,21,23,990602000]}, headers={__ContentTypeId__=[B@b47a368, kafka_offset=2, __KeyTypeId__=[B@2258c2e5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3057f32c, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759611084008, kafka_acknowledgment=Acknowledgment for order.created-0@2, __TypeId__=[B@6d572ab, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:43 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Seeking to offset 3 for partition payment.processed-0
2025-10-06 15:15:43 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 3 for partition order.created-0
2025-10-06 15:15:44 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@3
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"2db250f4-67f0-4a79-bb51-d46dad7ad65a","orderNumber":"77e4f83b-290c-4f6e-beec-b2b918f50032","orderId":2,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,43,55,498302000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:44:35.370358","status":"CANCELLED","updatedAt":[2025,10,5,13,43,55,498316000]}, headers={__ContentTypeId__=[B@46a92c66, kafka_offset=3, __KeyTypeId__=[B@3f1e9594, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@497afc4d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759652075391, kafka_acknowledgment=Acknowledgment for order.cancelled-0@3, __TypeId__=[B@476d1b06, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@3
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@24032706]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"cdddf310-e09d-4221-b773-1e1f1807855f","orderNumber":"4c7d3c88-9b7a-423a-a1f6-7c27dcbb86d0","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":2999.97,"createdAt":[2025,10,5,13,17,23,227752000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:17:23.236511","status":"PENDING","updatedAt":[2025,10,5,13,17,23,227796000]}, headers={__ContentTypeId__=[B@71f4eba1, kafka_offset=3, __KeyTypeId__=[B@4d6808e6, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1e0ea37b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759650443448, kafka_acknowledgment=Acknowledgment for order.created-0@3, __TypeId__=[B@1b2faa96, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:44 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@3
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"cdddf310-e09d-4221-b773-1e1f1807855f","orderNumber":"4c7d3c88-9b7a-423a-a1f6-7c27dcbb86d0","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":2999.97,"createdAt":[2025,10,5,13,17,23,227752000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:17:23.236511","status":"PENDING","updatedAt":[2025,10,5,13,17,23,227796000]}, headers={__ContentTypeId__=[B@51e25718, kafka_offset=3, __KeyTypeId__=[B@55b5bd1d, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3057f32c, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759650443448, kafka_acknowledgment=Acknowledgment for order.created-0@3, __TypeId__=[B@68a7b17e, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for payment.processed-0@3
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handlePaymentProcessedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@24032706]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"4e69f2c3-eac9-4192-b08c-b852e2a5facc","amount":980.00,"orderId":1,"eventType":"PAYMENT_PROCESSED","serviceName":"product-order-service","transactionId":"TXN_B077043F","serviceVersion":"1.0.0","createdAt":[2025,10,6,15,12,57,317085000],"paymentId":"e1c13366-521e-49f0-b9ee-d34df9422d7b","gatewayResponse":"Payment authorized successfully","customerId":2,"processedAt":[2025,10,6,15,12,57,830703000],"paymentMethod":"CREDIT_CARD","timestamp":"2025-10-06T15:12:57.832823","status":"COMPLETED","updatedAt":[2025,10,6,15,12,57,317102000]}, headers={__ContentTypeId__=[B@597f960b, kafka_offset=3, __KeyTypeId__=[B@3b957d9d, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@7c3e8081, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=e1c13366-521e-49f0-b9ee-d34df9422d7b, kafka_receivedTopic=payment.processed, kafka_receivedTimestamp=1759743777844, kafka_acknowledgment=Acknowledgment for payment.processed-0@3, __TypeId__=[B@1fec31b5, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 4 for partition order.created-0
2025-10-06 15:15:44 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 4 for partition order.cancelled-0
2025-10-06 15:15:44 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 4 for partition order.created-0
2025-10-06 15:15:44 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@4
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"2817f087-4fc7-475a-86f7-ee18ed54f86b","orderNumber":"294cd00b-e7c8-4509-94d1-d460439a9666","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,20,39,830340000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:20:39.832097","status":"PENDING","updatedAt":[2025,10,5,13,20,39,830361000]}, headers={__ContentTypeId__=[B@629039a5, kafka_offset=4, __KeyTypeId__=[B@707f2e37, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3057f32c, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759650639832, kafka_acknowledgment=Acknowledgment for order.created-0@4, __TypeId__=[B@32770633, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:44 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 5 for partition order.created-0
2025-10-06 15:15:44 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@4
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"e9596ab6-f8d8-4850-9189-cb4b5a87c9b2","orderNumber":"8ffed856-b73d-4b3a-bd39-b89bf9a4b3c7","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,5,13,55,13,110657000],"customerEmail":"testuser@example.com","customerId":1,"shippingAddress":"123 User Street, User City","timestamp":"2025-10-05T13:55:30.536357","status":"CANCELLED","updatedAt":[2025,10,5,13,55,13,110666000]}, headers={__ContentTypeId__=[B@2f00049e, kafka_offset=4, __KeyTypeId__=[B@77b4f75e, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@497afc4d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759652730543, kafka_acknowledgment=Acknowledgment for order.cancelled-0@4, __TypeId__=[B@28f158cf, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:44 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 5 for partition order.cancelled-0
2025-10-06 15:15:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@4
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@24032706]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"2817f087-4fc7-475a-86f7-ee18ed54f86b","orderNumber":"294cd00b-e7c8-4509-94d1-d460439a9666","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,20,39,830340000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:20:39.832097","status":"PENDING","updatedAt":[2025,10,5,13,20,39,830361000]}, headers={__ContentTypeId__=[B@bbae40e, kafka_offset=4, __KeyTypeId__=[B@d9bd9a1, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1e0ea37b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759650639832, kafka_acknowledgment=Acknowledgment for order.created-0@4, __TypeId__=[B@16f17405, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 5 for partition order.created-0
2025-10-06 15:15:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@5
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@24032706]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b0f426cf-a0a7-4589-a7bc-f216b4e949f8","orderNumber":"639675c4-90a4-42fa-b696-ac16a1a2644c","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,27,22,138475000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:27:22.140228","status":"PENDING","updatedAt":[2025,10,5,13,27,22,138487000]}, headers={__ContentTypeId__=[B@1666218f, kafka_offset=5, __KeyTypeId__=[B@7e912fe0, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1e0ea37b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759651042177, kafka_acknowledgment=Acknowledgment for order.created-0@5, __TypeId__=[B@697bc2fd, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@5
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b0f426cf-a0a7-4589-a7bc-f216b4e949f8","orderNumber":"639675c4-90a4-42fa-b696-ac16a1a2644c","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,27,22,138475000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:27:22.140228","status":"PENDING","updatedAt":[2025,10,5,13,27,22,138487000]}, headers={__ContentTypeId__=[B@2fe58990, kafka_offset=5, __KeyTypeId__=[B@1f88fe90, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3057f32c, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759651042177, kafka_acknowledgment=Acknowledgment for order.created-0@5, __TypeId__=[B@1a9fb1e1, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:45 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@5
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"1a097506-7279-4c02-8911-3cbd2051b023","orderNumber":"c6a235b3-1434-4c15-b197-e58d3680ca20","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,14,0,58,980609000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T14:02:24.293178","status":"CANCELLED","updatedAt":[2025,10,5,14,0,58,980621000]}, headers={__ContentTypeId__=[B@379e6a68, kafka_offset=5, __KeyTypeId__=[B@206853ae, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@497afc4d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759653144311, kafka_acknowledgment=Acknowledgment for order.cancelled-0@5, __TypeId__=[B@1789dab0, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 6 for partition order.created-0
2025-10-06 15:15:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 6 for partition order.created-0
2025-10-06 15:15:45 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 6 for partition order.cancelled-0
2025-10-06 15:15:45 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@6
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"75d8e24c-c15d-4cd5-a724-b0473361062d","orderNumber":"e363bf6d-5e07-47d6-a606-8826fb9b7c9a","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,6,12,16,37,643528000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"123 Customer Street, Customer City","timestamp":"2025-10-06T12:23:22.153599","status":"CANCELLED","updatedAt":[2025,10,6,12,16,37,643540000]}, headers={__ContentTypeId__=[B@5eb206e6, kafka_offset=6, __KeyTypeId__=[B@7cd65f5f, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@497afc4d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759733602170, kafka_acknowledgment=Acknowledgment for order.cancelled-0@6, __TypeId__=[B@2ffdcbb3, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@6
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"3afe55c1-fb98-41fc-8506-d9612ea5205b","orderNumber":"dd671d51-c52e-467b-bd37-754e4804cce9","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,36,5,859548000],"customerEmail":"testcustomer@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:36:05.861915","status":"PENDING","updatedAt":[2025,10,5,13,36,5,859555000]}, headers={__ContentTypeId__=[B@75d9fc9f, kafka_offset=6, __KeyTypeId__=[B@199b6926, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3057f32c, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759651565898, kafka_acknowledgment=Acknowledgment for order.created-0@6, __TypeId__=[B@de20e5d, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@6
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@24032706]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"3afe55c1-fb98-41fc-8506-d9612ea5205b","orderNumber":"dd671d51-c52e-467b-bd37-754e4804cce9","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,36,5,859548000],"customerEmail":"testcustomer@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:36:05.861915","status":"PENDING","updatedAt":[2025,10,5,13,36,5,859555000]}, headers={__ContentTypeId__=[B@4925e49c, kafka_offset=6, __KeyTypeId__=[B@2a546ce5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1e0ea37b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759651565898, kafka_acknowledgment=Acknowledgment for order.created-0@6, __TypeId__=[B@70af6e19, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 7 for partition order.created-0
2025-10-06 15:15:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 7 for partition order.created-0
2025-10-06 15:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@7
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b60e7e47-569f-4c6d-b029-4c2c9328bcd0","orderNumber":"77e4f83b-290c-4f6e-beec-b2b918f50032","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,43,55,498302000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:43:55.500675","status":"PENDING","updatedAt":[2025,10,5,13,43,55,498316000]}, headers={__ContentTypeId__=[B@42ed1f44, kafka_offset=7, __KeyTypeId__=[B@25451bca, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3057f32c, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652035504, kafka_acknowledgment=Acknowledgment for order.created-0@7, __TypeId__=[B@4999dc8, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@7
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@24032706]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b60e7e47-569f-4c6d-b029-4c2c9328bcd0","orderNumber":"77e4f83b-290c-4f6e-beec-b2b918f50032","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,43,55,498302000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:43:55.500675","status":"PENDING","updatedAt":[2025,10,5,13,43,55,498316000]}, headers={__ContentTypeId__=[B@591822d5, kafka_offset=7, __KeyTypeId__=[B@7d5c61cd, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1e0ea37b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652035504, kafka_acknowledgment=Acknowledgment for order.created-0@7, __TypeId__=[B@3649b5b, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 8 for partition order.created-0
2025-10-06 15:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 8 for partition order.created-0
2025-10-06 15:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@8
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"e07d01a8-fa5a-4268-8a2d-032027c60cbf","orderNumber":"22251392-4b09-4b14-9a2d-28ce6e9b9616","orderId":3,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,13,45,2,791477000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:45:02.794013","status":"PENDING","updatedAt":[2025,10,5,13,45,2,791507000]}, headers={__ContentTypeId__=[B@686a1c82, kafka_offset=8, __KeyTypeId__=[B@7fca412e, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3057f32c, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=3, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652102794, kafka_acknowledgment=Acknowledgment for order.created-0@8, __TypeId__=[B@53ba2a09, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@8
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@24032706]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"e07d01a8-fa5a-4268-8a2d-032027c60cbf","orderNumber":"22251392-4b09-4b14-9a2d-28ce6e9b9616","orderId":3,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,13,45,2,791477000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:45:02.794013","status":"PENDING","updatedAt":[2025,10,5,13,45,2,791507000]}, headers={__ContentTypeId__=[B@9a57be1, kafka_offset=8, __KeyTypeId__=[B@58cb60f5, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1e0ea37b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=3, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652102794, kafka_acknowledgment=Acknowledgment for order.created-0@8, __TypeId__=[B@75069c10, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 9 for partition order.created-0
2025-10-06 15:15:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 9 for partition order.created-0
2025-10-06 15:15:47 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@9
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"baadd731-8880-4034-af61-bb3239c50fbd","orderNumber":"8ffed856-b73d-4b3a-bd39-b89bf9a4b3c7","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,5,13,55,13,110657000],"customerEmail":"testuser@example.com","customerId":1,"shippingAddress":"123 User Street, User City","timestamp":"2025-10-05T13:55:13.115094","status":"PENDING","updatedAt":[2025,10,5,13,55,13,110666000]}, headers={__ContentTypeId__=[B@310542ea, kafka_offset=9, __KeyTypeId__=[B@5130416a, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3057f32c, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652713187, kafka_acknowledgment=Acknowledgment for order.created-0@9, __TypeId__=[B@6bd386fd, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@9
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@24032706]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"baadd731-8880-4034-af61-bb3239c50fbd","orderNumber":"8ffed856-b73d-4b3a-bd39-b89bf9a4b3c7","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,5,13,55,13,110657000],"customerEmail":"testuser@example.com","customerId":1,"shippingAddress":"123 User Street, User City","timestamp":"2025-10-05T13:55:13.115094","status":"PENDING","updatedAt":[2025,10,5,13,55,13,110666000]}, headers={__ContentTypeId__=[B@6fcfea74, kafka_offset=9, __KeyTypeId__=[B@327725a0, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1e0ea37b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652713187, kafka_acknowledgment=Acknowledgment for order.created-0@9, __TypeId__=[B@1448bb93, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:47 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 10 for partition order.created-0
2025-10-06 15:15:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 10 for partition order.created-0
2025-10-06 15:15:47 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@10
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"80147450-718c-47c4-8886-ed5711a0e4a9","orderNumber":"c6a235b3-1434-4c15-b197-e58d3680ca20","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,14,0,58,980609000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T14:00:58.983578","status":"PENDING","updatedAt":[2025,10,5,14,0,58,980621000]}, headers={__ContentTypeId__=[B@297d799a, kafka_offset=10, __KeyTypeId__=[B@7b3a32bf, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3057f32c, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759653059048, kafka_acknowledgment=Acknowledgment for order.created-0@10, __TypeId__=[B@3bd8bf53, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:47 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 11 for partition order.created-0
2025-10-06 15:15:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@10
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@24032706]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"80147450-718c-47c4-8886-ed5711a0e4a9","orderNumber":"c6a235b3-1434-4c15-b197-e58d3680ca20","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,14,0,58,980609000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T14:00:58.983578","status":"PENDING","updatedAt":[2025,10,5,14,0,58,980621000]}, headers={__ContentTypeId__=[B@30541b65, kafka_offset=10, __KeyTypeId__=[B@7070f91d, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1e0ea37b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759653059048, kafka_acknowledgment=Acknowledgment for order.created-0@10, __TypeId__=[B@3025de54, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 11 for partition order.created-0
2025-10-06 15:15:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@11
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@24032706]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"07ca2c52-026c-4db1-9b9b-6f36fc7d83d5","orderNumber":"e363bf6d-5e07-47d6-a606-8826fb9b7c9a","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,6,12,16,37,643528000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"123 Customer Street, Customer City","timestamp":"2025-10-06T12:16:37.656400","status":"PENDING","updatedAt":[2025,10,6,12,16,37,643540000]}, headers={__ContentTypeId__=[B@6395e499, kafka_offset=11, __KeyTypeId__=[B@1826ae7b, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1e0ea37b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759733197742, kafka_acknowledgment=Acknowledgment for order.created-0@11, __TypeId__=[B@69041206, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 12 for partition order.created-0
2025-10-06 15:15:48 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@11
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"07ca2c52-026c-4db1-9b9b-6f36fc7d83d5","orderNumber":"e363bf6d-5e07-47d6-a606-8826fb9b7c9a","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,6,12,16,37,643528000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"123 Customer Street, Customer City","timestamp":"2025-10-06T12:16:37.656400","status":"PENDING","updatedAt":[2025,10,6,12,16,37,643540000]}, headers={__ContentTypeId__=[B@58ad4754, kafka_offset=11, __KeyTypeId__=[B@5c1b47e7, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3057f32c, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759733197742, kafka_acknowledgment=Acknowledgment for order.created-0@11, __TypeId__=[B@59d0541f, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:48 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 12 for partition order.created-0
2025-10-06 15:15:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@12
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@24032706]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"f2f06bc0-0107-4262-8cd7-168a828de38c","orderNumber":"b0be4aa0-b061-4387-9a52-347abd1b468d","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,6,12,27,27,611165000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T12:27:27.614105","status":"PENDING","updatedAt":[2025,10,6,12,27,27,611182000]}, headers={__ContentTypeId__=[B@5e99820f, kafka_offset=12, __KeyTypeId__=[B@43bd3316, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1e0ea37b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759733847631, kafka_acknowledgment=Acknowledgment for order.created-0@12, __TypeId__=[B@3212cdf1, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:48 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@12
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"f2f06bc0-0107-4262-8cd7-168a828de38c","orderNumber":"b0be4aa0-b061-4387-9a52-347abd1b468d","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,6,12,27,27,611165000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T12:27:27.614105","status":"PENDING","updatedAt":[2025,10,6,12,27,27,611182000]}, headers={__ContentTypeId__=[B@2df7ef8d, kafka_offset=12, __KeyTypeId__=[B@3160c424, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3057f32c, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759733847631, kafka_acknowledgment=Acknowledgment for order.created-0@12, __TypeId__=[B@6636c696, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 13 for partition order.created-0
2025-10-06 15:15:48 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 13 for partition order.created-0
2025-10-06 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@13
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"3d450892-dfc9-4aa1-831d-0ca22a29622e","orderNumber":"63073bd3-dae7-4438-b42b-d5c888ed9a82","orderId":3,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,12,34,43,877389000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"123 Customer Street, Customer City","timestamp":"2025-10-06T12:34:43.879592","status":"PENDING","updatedAt":[2025,10,6,12,34,43,877406000]}, headers={__ContentTypeId__=[B@b06509c, kafka_offset=13, __KeyTypeId__=[B@107ece25, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3057f32c, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=3, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759734283879, kafka_acknowledgment=Acknowledgment for order.created-0@13, __TypeId__=[B@971c6fb, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@13
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@24032706]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"3d450892-dfc9-4aa1-831d-0ca22a29622e","orderNumber":"63073bd3-dae7-4438-b42b-d5c888ed9a82","orderId":3,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,12,34,43,877389000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"123 Customer Street, Customer City","timestamp":"2025-10-06T12:34:43.879592","status":"PENDING","updatedAt":[2025,10,6,12,34,43,877406000]}, headers={__ContentTypeId__=[B@6757ca94, kafka_offset=13, __KeyTypeId__=[B@32b8fb38, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1e0ea37b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=3, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759734283879, kafka_acknowledgment=Acknowledgment for order.created-0@13, __TypeId__=[B@304ece54, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 14 for partition order.created-0
2025-10-06 15:15:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 14 for partition order.created-0
2025-10-06 15:15:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@14
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@24032706]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"28611ee8-81f5-4f5b-a647-12b5f0099484","orderNumber":"194030fe-e4cf-4f17-9135-32b410e8ebd3","orderId":4,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":15999.84,"createdAt":[2025,10,6,14,32,12,304814000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T14:32:12.307924","status":"PENDING","updatedAt":[2025,10,6,14,32,12,304828000]}, headers={__ContentTypeId__=[B@5d43fbd0, kafka_offset=14, __KeyTypeId__=[B@3fe2d275, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1e0ea37b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=4, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759741332312, kafka_acknowledgment=Acknowledgment for order.created-0@14, __TypeId__=[B@a56bfd4, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@14
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"28611ee8-81f5-4f5b-a647-12b5f0099484","orderNumber":"194030fe-e4cf-4f17-9135-32b410e8ebd3","orderId":4,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":15999.84,"createdAt":[2025,10,6,14,32,12,304814000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T14:32:12.307924","status":"PENDING","updatedAt":[2025,10,6,14,32,12,304828000]}, headers={__ContentTypeId__=[B@4f7cd508, kafka_offset=14, __KeyTypeId__=[B@6b580981, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3057f32c, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=4, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759741332312, kafka_acknowledgment=Acknowledgment for order.created-0@14, __TypeId__=[B@66988816, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 15 for partition order.created-0
2025-10-06 15:15:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 15 for partition order.created-0
2025-10-06 15:15:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@15
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@24032706]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"f2153287-0615-40d4-a561-d211f0342f87","orderNumber":"ec221793-5c90-4f77-8011-fff048dfe007","orderId":5,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":799.84,"createdAt":[2025,10,6,14,42,23,426209000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T14:42:23.430215","status":"PENDING","updatedAt":[2025,10,6,14,42,23,426220000]}, headers={__ContentTypeId__=[B@20094dfe, kafka_offset=15, __KeyTypeId__=[B@42824b94, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1e0ea37b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=5, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759741943437, kafka_acknowledgment=Acknowledgment for order.created-0@15, __TypeId__=[B@498976c8, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@15
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"f2153287-0615-40d4-a561-d211f0342f87","orderNumber":"ec221793-5c90-4f77-8011-fff048dfe007","orderId":5,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":799.84,"createdAt":[2025,10,6,14,42,23,426209000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T14:42:23.430215","status":"PENDING","updatedAt":[2025,10,6,14,42,23,426220000]}, headers={__ContentTypeId__=[B@5bbc8b58, kafka_offset=15, __KeyTypeId__=[B@533b722, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3057f32c, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=5, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759741943437, kafka_acknowledgment=Acknowledgment for order.created-0@15, __TypeId__=[B@8336051, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 16 for partition order.created-0
2025-10-06 15:15:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 16 for partition order.created-0
2025-10-06 15:15:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@16
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"6d0e92dd-e6bd-4c0f-9228-c6af9200df2f","orderNumber":"97fa8459-5617-42aa-97d0-b465d90a20da","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,15,9,37,791909000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Addr","timestamp":"2025-10-06T15:09:37.794845","status":"PENDING","updatedAt":[2025,10,6,15,9,37,791926000]}, headers={__ContentTypeId__=[B@79bd2445, kafka_offset=16, __KeyTypeId__=[B@36035c57, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3057f32c, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759743577848, kafka_acknowledgment=Acknowledgment for order.created-0@16, __TypeId__=[B@7005905b, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@16
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@24032706]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"6d0e92dd-e6bd-4c0f-9228-c6af9200df2f","orderNumber":"97fa8459-5617-42aa-97d0-b465d90a20da","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,15,9,37,791909000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Addr","timestamp":"2025-10-06T15:09:37.794845","status":"PENDING","updatedAt":[2025,10,6,15,9,37,791926000]}, headers={__ContentTypeId__=[B@75d71698, kafka_offset=16, __KeyTypeId__=[B@744c6d3f, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1e0ea37b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759743577848, kafka_acknowledgment=Acknowledgment for order.created-0@16, __TypeId__=[B@54f93130, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 17 for partition order.created-0
2025-10-06 15:15:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 17 for partition order.created-0
2025-10-06 15:15:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@17
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@16c3e494]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"dfee185d-b101-405f-abce-38a6e278a43c","orderNumber":"aaccb545-1028-4ac5-808b-9f491b2394c7","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,15,11,2,485485000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Addr","timestamp":"2025-10-06T15:11:02.487151","status":"PENDING","updatedAt":[2025,10,6,15,11,2,485493000]}, headers={__ContentTypeId__=[B@13e768ac, kafka_offset=17, __KeyTypeId__=[B@3fedf613, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@3057f32c, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759743662487, kafka_acknowledgment=Acknowledgment for order.created-0@17, __TypeId__=[B@57609751, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:15:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@17
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@24032706]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"dfee185d-b101-405f-abce-38a6e278a43c","orderNumber":"aaccb545-1028-4ac5-808b-9f491b2394c7","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,15,11,2,485485000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Addr","timestamp":"2025-10-06T15:11:02.487151","status":"PENDING","updatedAt":[2025,10,6,15,11,2,485493000]}, headers={__ContentTypeId__=[B@3060a822, kafka_offset=17, __KeyTypeId__=[B@617dc300, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1e0ea37b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759743662487, kafka_acknowledgment=Acknowledgment for order.created-0@17, __TypeId__=[B@3286aca1, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:18:23 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-10-06 15:18:23 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:18:23 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:18:23 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-10-06 15:19:14 [Thread-2] INFO  c.e.p.config.GrpcServerConfig - Shutting down gRPC server...
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Revoke previously assigned partitions order.created-0
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Revoke previously assigned partitions order.created-0
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Revoke previously assigned partitions order.cancelled-0
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Revoke previously assigned partitions payment.processed-0
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: partitions revoked: [order.created-0]
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: partitions revoked: [order.created-0]
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: partitions revoked: [order.cancelled-0]
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: partitions revoked: [payment.processed-0]
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Member consumer-notification-service-4-fc91780d-d920-491e-b271-5da826a60ded sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Member consumer-inventory-service-1-d1223592-1dfe-4827-98eb-59893144ff77 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Member consumer-inventory-service-2-7bf0a614-832c-46e9-a720-36f1d6c3762a sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Member consumer-notification-service-3-d42f933a-322d-436b-9065-5152dfb3e8ef sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Unsubscribed all topics or patterns and assigned partitions
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Unsubscribed all topics or patterns and assigned partitions
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Unsubscribed all topics or patterns and assigned partitions
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: consumer pro-actively leaving the group
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-inventory-service-2 unregistered
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-notification-service-4 unregistered
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: Consumer stopped
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: Consumer stopped
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-notification-service-3 unregistered
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: Consumer stopped
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-inventory-service-1 unregistered
2025-10-06 15:19:14 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: Consumer stopped
2025-10-06 15:19:14 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-06 15:19:14 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-06 15:19:14 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-06 15:19:15 [main] INFO  c.e.p.ProductOrderServiceApplication - Starting ProductOrderServiceApplication v1.0.0 using Java 17.0.16 with PID 90153 (/Users/sushantpandey/product-order-service/target/product-order-service-1.0.0.jar started by sushantpandey in /Users/sushantpandey/product-order-service)
2025-10-06 15:19:15 [main] DEBUG c.e.p.ProductOrderServiceApplication - Running with Spring Boot v3.1.5, Spring v6.0.13
2025-10-06 15:19:15 [main] INFO  c.e.p.ProductOrderServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-06 15:19:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-06 15:19:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-06 15:19:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 145 ms. Found 6 JPA repository interfaces.
2025-10-06 15:19:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-06 15:19:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-10-06 15:19:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.payment.domain.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 15:19:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.domain.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 15:19:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.domain.repository.CustomerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 15:19:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.domain.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 15:19:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.domain.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 15:19:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ecommerce.productorder.invoice.domain.repository.InvoiceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-06 15:19:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-10-06 15:19:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-10-06 15:19:17 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-06 15:19:17 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.15]
2025-10-06 15:19:17 [main] INFO  o.a.c.c.C.[.[.[/product-order-service] - Initializing Spring embedded WebApplicationContext
2025-10-06 15:19:17 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2040 ms
2025-10-06 15:19:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-06 15:19:17 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-10-06 15:19:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-06 15:19:17 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-10-06 15:19:17 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-06 15:19:17 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.13.Final
2025-10-06 15:19:17 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-10-06 15:19:17 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-06 15:19:17 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-06 15:19:18 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-06 15:19:18 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-06 15:19:18 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-06 15:19:19 [main] DEBUG c.e.p.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
2025-10-06 15:19:19 [main] INFO  c.e.p.config.GrpcServerConfig - Starting gRPC server on port: 9090
2025-10-06 15:19:19 [main] INFO  c.e.p.config.GrpcServerConfig - gRPC server started successfully on port: 9090
2025-10-06 15:19:20 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 4 endpoint(s) beneath base path '/actuator'
2025-10-06 15:19:20 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-06 15:19:20 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6903bec9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2f6fcc70, org.springframework.security.web.context.SecurityContextHolderFilter@33ccc8cd, org.springframework.security.web.header.HeaderWriterFilter@1a9ba6c2, org.springframework.web.filter.CorsFilter@60666985, org.springframework.security.web.authentication.logout.LogoutFilter@214fe287, com.ecommerce.productorder.config.JwtRequestFilter@5b908c6d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2a9e261d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1e90939f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5effc15d, org.springframework.security.web.session.SessionManagementFilter@2a6dfbb2, org.springframework.security.web.access.ExceptionTranslationFilter@1aa21319, org.springframework.security.web.access.intercept.AuthorizationFilter@4300b54c]
2025-10-06 15:19:20 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/product-order-service'
2025-10-06 15:19:20 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-inventory-service-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = inventory-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-10-06 15:19:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 15:19:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 15:19:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759744161084
2025-10-06 15:19:21 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Subscribed to topic(s): order.created
2025-10-06 15:19:21 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-inventory-service-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = inventory-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-10-06 15:19:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 15:19:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 15:19:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759744161096
2025-10-06 15:19:21 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Subscribed to topic(s): order.cancelled
2025-10-06 15:19:21 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-10-06 15:19:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 15:19:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 15:19:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759744161099
2025-10-06 15:19:21 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Subscribed to topic(s): order.created
2025-10-06 15:19:21 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notification-service-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notification-service
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-10-06 15:19:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 15:19:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 15:19:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759744161102
2025-10-06 15:19:21 [main] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Subscribed to topic(s): payment.processed
2025-10-06 15:19:21 [main] INFO  c.e.p.ProductOrderServiceApplication - Started ProductOrderServiceApplication in 6.537 seconds (process running for 6.884)
2025-10-06 15:19:21 [main] INFO  c.e.p.config.DefaultUserInitializer - Initializing default users...
2025-10-06 15:19:21 [main] INFO  c.e.p.config.DefaultUserInitializer - Default admin user created: admin / admin123
2025-10-06 15:19:21 [main] INFO  c.e.p.config.DefaultUserInitializer - Default customer user created: customer / customer123
2025-10-06 15:19:21 [main] INFO  c.e.p.config.DefaultUserInitializer - Default users initialization completed
2025-10-06 15:19:21 [main] INFO  c.e.p.config.DataInitializer - === DATA INITIALIZER STARTING ===
2025-10-06 15:19:21 [main] INFO  c.e.p.config.DataInitializer - Starting data initialization...
2025-10-06 15:19:21 [main] INFO  c.e.p.config.DataInitializer - Initializing test data...
2025-10-06 15:19:21 [main] INFO  c.e.p.config.DataInitializer - Creating test categories and products...
2025-10-06 15:19:21 [main] INFO  c.e.p.config.DataInitializer - Created Electronics category
2025-10-06 15:19:21 [main] INFO  c.e.p.config.DataInitializer - Created Clothing category
2025-10-06 15:19:21 [main] INFO  c.e.p.config.DataInitializer - Created Books category
2025-10-06 15:19:21 [main] INFO  c.e.p.config.DataInitializer - Creating products...
2025-10-06 15:19:21 [main] INFO  c.e.p.config.DataInitializer - Created iPhone 15 product
2025-10-06 15:19:21 [main] INFO  c.e.p.config.DataInitializer - Created MacBook Pro product
2025-10-06 15:19:21 [main] INFO  c.e.p.config.DataInitializer - Created T-Shirt product
2025-10-06 15:19:21 [main] INFO  c.e.p.config.DataInitializer - Created Programming Book product
2025-10-06 15:19:21 [main] INFO  c.e.p.config.DataInitializer - Test data initialization completed
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting the last seen epoch of partition order.cancelled-0 to 10 since the associated topicId changed from null to hAqa7gqzSgOGNgRsGTUgvg
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting the last seen epoch of partition payment.processed-0 to 10 since the associated topicId changed from null to t5NxQuSTQC2hC3JUcDzeGg
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] (Re-)joining group
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] (Re-)joining group
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] (Re-)joining group
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] (Re-)joining group
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: need to re-join with the given member-id: consumer-inventory-service-1-1782c604-fc46-4af3-b52b-12d73802386f
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-3-b15874e0-ebce-4d61-858e-b0a9e3f871c4
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: need to re-join with the given member-id: consumer-inventory-service-2-a6b3405e-b34a-4148-92fd-3c87621dd228
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] (Re-)joining group
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] (Re-)joining group
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] (Re-)joining group
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Request joining group due to: need to re-join with the given member-id: consumer-notification-service-4-41cc2005-f588-49df-94a0-e05697b699c7
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2025-10-06 15:19:21 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] (Re-)joining group
2025-10-06 15:19:26 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[.[/product-order-service] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-06 15:19:26 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-06 15:19:26 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2025-10-06 15:19:26 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-10-06 15:19:26 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:19:26 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:19:26 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Successfully joined group with generation Generation{generationId=7, memberId='consumer-notification-service-3-b15874e0-ebce-4d61-858e-b0a9e3f871c4', protocol='range'}
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Successfully joined group with generation Generation{generationId=7, memberId='consumer-notification-service-4-41cc2005-f588-49df-94a0-e05697b699c7', protocol='range'}
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Successfully joined group with generation Generation{generationId=7, memberId='consumer-inventory-service-1-1782c604-fc46-4af3-b52b-12d73802386f', protocol='range'}
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Successfully joined group with generation Generation{generationId=7, memberId='consumer-inventory-service-2-a6b3405e-b34a-4148-92fd-3c87621dd228', protocol='range'}
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Resetting the last seen epoch of partition payment.processed-0 to 10 since the associated topicId changed from null to t5NxQuSTQC2hC3JUcDzeGg
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Finished assignment for group at generation 7: {consumer-notification-service-3-b15874e0-ebce-4d61-858e-b0a9e3f871c4=Assignment(partitions=[order.created-0]), consumer-notification-service-4-41cc2005-f588-49df-94a0-e05697b699c7=Assignment(partitions=[payment.processed-0])}
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Finished assignment for group at generation 7: {consumer-inventory-service-2-a6b3405e-b34a-4148-92fd-3c87621dd228=Assignment(partitions=[order.cancelled-0]), consumer-inventory-service-1-1782c604-fc46-4af3-b52b-12d73802386f=Assignment(partitions=[order.created-0])}
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Successfully synced group in generation Generation{generationId=7, memberId='consumer-inventory-service-1-1782c604-fc46-4af3-b52b-12d73802386f', protocol='range'}
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Successfully synced group in generation Generation{generationId=7, memberId='consumer-notification-service-4-41cc2005-f588-49df-94a0-e05697b699c7', protocol='range'}
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Successfully synced group in generation Generation{generationId=7, memberId='consumer-inventory-service-2-a6b3405e-b34a-4148-92fd-3c87621dd228', protocol='range'}
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Successfully synced group in generation Generation{generationId=7, memberId='consumer-notification-service-3-b15874e0-ebce-4d61-858e-b0a9e3f871c4', protocol='range'}
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[order.created-0])
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[order.created-0])
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Notifying assignor about the new Assignment(partitions=[payment.processed-0])
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Notifying assignor about the new Assignment(partitions=[order.cancelled-0])
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Adding newly assigned partitions: order.created-0
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Adding newly assigned partitions: order.cancelled-0
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Adding newly assigned partitions: order.created-0
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Adding newly assigned partitions: payment.processed-0
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Found no committed offset for partition order.created-0
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Found no committed offset for partition payment.processed-0
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Found no committed offset for partition order.cancelled-0
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Found no committed offset for partition order.created-0
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Resetting offset for partition order.created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=10}}.
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Resetting offset for partition order.created-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=10}}.
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Resetting offset for partition order.cancelled-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=10}}.
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Resetting offset for partition payment.processed-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=10}}.
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: partitions assigned: [payment.processed-0]
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - notification-service: partitions assigned: [order.created-0]
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: partitions assigned: [order.created-0]
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - inventory-service: partitions assigned: [order.cancelled-0]
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"7155d081-0466-4ac3-9cf3-3745a67c8f61","orderNumber":"c2f007f9-afab-46c1-b0f6-3bddcc7fbea3","orderId":2,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,2,21,23,990587000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:22:47.292516","status":"CANCELLED","updatedAt":[2025,10,5,2,21,23,990602000]}, headers={__ContentTypeId__=[B@535e38db, kafka_offset=0, __KeyTypeId__=[B@45fc384d, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1dcf1a39, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759611167327, kafka_acknowledgment=Acknowledgment for order.cancelled-0@0, __TypeId__=[B@13571d00, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"9234e0dd-1c94-4d30-b847-6ef24ff8becd","orderNumber":"382207e8-13ea-4ba3-b2e8-c194086b0daf","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,3,21,50,17,915871000],"customerEmail":"test@example.com","customerId":1,"shippingAddress":"123 Main St, City, State","timestamp":"2025-10-03T21:50:17.917054","status":"PENDING","updatedAt":[2025,10,3,21,50,17,915889000]}, headers={__ContentTypeId__=[B@74b00008, kafka_offset=0, __KeyTypeId__=[B@20f184bb, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759508417960, kafka_acknowledgment=Acknowledgment for order.created-0@0, __TypeId__=[B@579bddc6, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for payment.processed-0@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handlePaymentProcessedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"723ace4d-c757-4f6a-a166-d253e64e55e9","amount":991.00,"orderId":1,"eventType":"PAYMENT_PROCESSED","serviceName":"product-order-service","transactionId":null,"serviceVersion":"1.0.0","createdAt":[2025,10,6,12,31,27,376058000],"paymentId":"859d87c3-704f-4843-ae6b-b7b3e98bc894","gatewayResponse":null,"customerId":2,"processedAt":[2025,10,6,12,31,27,378405000],"paymentMethod":"CREDIT_CARD","timestamp":"2025-10-06T12:31:27.378803","status":"FAILED","updatedAt":[2025,10,6,12,31,27,376082000]}, headers={__ContentTypeId__=[B@4124d680, kafka_offset=0, __KeyTypeId__=[B@1a9c8a84, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@6306f8bb, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=859d87c3-704f-4843-ae6b-b7b3e98bc894, kafka_receivedTopic=payment.processed, kafka_receivedTimestamp=1759734087381, kafka_acknowledgment=Acknowledgment for payment.processed-0@0, __TypeId__=[B@5cc62073, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"9234e0dd-1c94-4d30-b847-6ef24ff8becd","orderNumber":"382207e8-13ea-4ba3-b2e8-c194086b0daf","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,3,21,50,17,915871000],"customerEmail":"test@example.com","customerId":1,"shippingAddress":"123 Main St, City, State","timestamp":"2025-10-03T21:50:17.917054","status":"PENDING","updatedAt":[2025,10,3,21,50,17,915889000]}, headers={__ContentTypeId__=[B@7c973b5a, kafka_offset=0, __KeyTypeId__=[B@29d340a9, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759508417960, kafka_acknowledgment=Acknowledgment for order.created-0@0, __TypeId__=[B@447f4148, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 1 for partition order.cancelled-0
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 1 for partition order.created-0
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Seeking to offset 1 for partition payment.processed-0
2025-10-06 15:19:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 1 for partition order.created-0
2025-10-06 15:19:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"6a8e200d-3344-4499-a3cb-0d5f3235fe09","orderNumber":"40bd1de4-e3e8-47e4-a452-7cb9b32f99aa","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,2,5,58,707310000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:05:58.799749","status":"PENDING","updatedAt":[2025,10,5,2,5,58,707354000]}, headers={__ContentTypeId__=[B@5cbce2d6, kafka_offset=1, __KeyTypeId__=[B@7eee6ad4, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759610159101, kafka_acknowledgment=Acknowledgment for order.created-0@1, __TypeId__=[B@60625818, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for payment.processed-0@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handlePaymentProcessedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"2249daaf-26c0-4568-aeb2-0e19fd437958","amount":991.00,"orderId":4,"eventType":"PAYMENT_PROCESSED","serviceName":"product-order-service","transactionId":"TXN_8211A67F","serviceVersion":"1.0.0","createdAt":[2025,10,6,14,33,49,790527000],"paymentId":"fad14391-88b2-4a54-997d-12b90c5a4ca0","gatewayResponse":"Payment authorized successfully","customerId":2,"processedAt":[2025,10,6,14,33,50,906999000],"paymentMethod":"CREDIT_CARD","timestamp":"2025-10-06T14:33:50.908785","status":"COMPLETED","updatedAt":[2025,10,6,14,33,49,790579000]}, headers={__ContentTypeId__=[B@baef150, kafka_offset=1, __KeyTypeId__=[B@318c8e17, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@6306f8bb, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=fad14391-88b2-4a54-997d-12b90c5a4ca0, kafka_receivedTopic=payment.processed, kafka_receivedTimestamp=1759741430912, kafka_acknowledgment=Acknowledgment for payment.processed-0@1, __TypeId__=[B@73480ac4, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 2 for partition order.created-0
2025-10-06 15:19:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Seeking to offset 2 for partition payment.processed-0
2025-10-06 15:19:28 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"9179492d-3893-4653-aff4-eb694c6a010e","orderNumber":"4c7d3c88-9b7a-423a-a1f6-7c27dcbb86d0","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":2999.97,"createdAt":[2025,10,5,13,17,23,227752000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:18:40.841978","status":"CANCELLED","updatedAt":[2025,10,5,13,17,23,227796000]}, headers={__ContentTypeId__=[B@76d58479, kafka_offset=1, __KeyTypeId__=[B@10346a7f, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1dcf1a39, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759650520859, kafka_acknowledgment=Acknowledgment for order.cancelled-0@1, __TypeId__=[B@3262dcd9, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:28 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 2 for partition order.cancelled-0
2025-10-06 15:19:28 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"6a8e200d-3344-4499-a3cb-0d5f3235fe09","orderNumber":"40bd1de4-e3e8-47e4-a452-7cb9b32f99aa","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,2,5,58,707310000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:05:58.799749","status":"PENDING","updatedAt":[2025,10,5,2,5,58,707354000]}, headers={__ContentTypeId__=[B@4e38d11c, kafka_offset=1, __KeyTypeId__=[B@6261f779, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759610159101, kafka_acknowledgment=Acknowledgment for order.created-0@1, __TypeId__=[B@26e819c2, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:28 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 2 for partition order.created-0
2025-10-06 15:19:28 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b7a9d0bd-56cd-4a82-b7ef-29dc61722d4e","orderNumber":"dd671d51-c52e-467b-bd37-754e4804cce9","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,36,5,859548000],"customerEmail":"testcustomer@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:36:22.696339","status":"CANCELLED","updatedAt":[2025,10,5,13,36,5,859555000]}, headers={__ContentTypeId__=[B@33bab1d7, kafka_offset=2, __KeyTypeId__=[B@70a7d0b3, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1dcf1a39, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759651582712, kafka_acknowledgment=Acknowledgment for order.cancelled-0@2, __TypeId__=[B@278d8cdd, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"cfde2282-fcb9-41a9-94ca-84608512a724","orderNumber":"c2f007f9-afab-46c1-b0f6-3bddcc7fbea3","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,2,21,23,990587000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:21:23.992450","status":"PENDING","updatedAt":[2025,10,5,2,21,23,990602000]}, headers={__ContentTypeId__=[B@7562d176, kafka_offset=2, __KeyTypeId__=[B@31b23f49, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759611084008, kafka_acknowledgment=Acknowledgment for order.created-0@2, __TypeId__=[B@539beb41, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:28 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"cfde2282-fcb9-41a9-94ca-84608512a724","orderNumber":"c2f007f9-afab-46c1-b0f6-3bddcc7fbea3","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,2,21,23,990587000],"customerEmail":"test@gmail.com","customerId":2,"shippingAddress":"Address 1","timestamp":"2025-10-05T02:21:23.992450","status":"PENDING","updatedAt":[2025,10,5,2,21,23,990602000]}, headers={__ContentTypeId__=[B@64ecc622, kafka_offset=2, __KeyTypeId__=[B@67d69a64, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759611084008, kafka_acknowledgment=Acknowledgment for order.created-0@2, __TypeId__=[B@36034abc, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for payment.processed-0@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handlePaymentProcessedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"225210ae-d345-4004-bd1f-f63512dbe97b","amount":980.00,"orderId":5,"eventType":"PAYMENT_PROCESSED","serviceName":"product-order-service","transactionId":"TXN_F8EB9DC1","serviceVersion":"1.0.0","createdAt":[2025,10,6,14,43,0,641018000],"paymentId":"9ffc4f8f-c155-4744-8228-ddb7d5f24469","gatewayResponse":"Payment authorized successfully","customerId":2,"processedAt":[2025,10,6,14,43,1,737752000],"paymentMethod":"CREDIT_CARD","timestamp":"2025-10-06T14:43:01.739004","status":"COMPLETED","updatedAt":[2025,10,6,14,43,0,641038000]}, headers={__ContentTypeId__=[B@7ef33b8f, kafka_offset=2, __KeyTypeId__=[B@52d9d6f2, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@6306f8bb, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=9ffc4f8f-c155-4744-8228-ddb7d5f24469, kafka_receivedTopic=payment.processed, kafka_receivedTimestamp=1759741981744, kafka_acknowledgment=Acknowledgment for payment.processed-0@2, __TypeId__=[B@651aef54, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:28 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 3 for partition order.cancelled-0
2025-10-06 15:19:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 3 for partition order.created-0
2025-10-06 15:19:28 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 3 for partition order.created-0
2025-10-06 15:19:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Seeking to offset 3 for partition payment.processed-0
2025-10-06 15:19:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@3
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"cdddf310-e09d-4221-b773-1e1f1807855f","orderNumber":"4c7d3c88-9b7a-423a-a1f6-7c27dcbb86d0","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":2999.97,"createdAt":[2025,10,5,13,17,23,227752000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:17:23.236511","status":"PENDING","updatedAt":[2025,10,5,13,17,23,227796000]}, headers={__ContentTypeId__=[B@5ad89ac7, kafka_offset=3, __KeyTypeId__=[B@3aa237e1, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759650443448, kafka_acknowledgment=Acknowledgment for order.created-0@3, __TypeId__=[B@3b09c522, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:29 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@3
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"2db250f4-67f0-4a79-bb51-d46dad7ad65a","orderNumber":"77e4f83b-290c-4f6e-beec-b2b918f50032","orderId":2,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,43,55,498302000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:44:35.370358","status":"CANCELLED","updatedAt":[2025,10,5,13,43,55,498316000]}, headers={__ContentTypeId__=[B@444f1afd, kafka_offset=3, __KeyTypeId__=[B@1fad0aec, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1dcf1a39, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759652075391, kafka_acknowledgment=Acknowledgment for order.cancelled-0@3, __TypeId__=[B@ba51c9e, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 4 for partition order.created-0
2025-10-06 15:19:29 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 4 for partition order.cancelled-0
2025-10-06 15:19:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@3
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"cdddf310-e09d-4221-b773-1e1f1807855f","orderNumber":"4c7d3c88-9b7a-423a-a1f6-7c27dcbb86d0","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":2999.97,"createdAt":[2025,10,5,13,17,23,227752000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:17:23.236511","status":"PENDING","updatedAt":[2025,10,5,13,17,23,227796000]}, headers={__ContentTypeId__=[B@6f8debbd, kafka_offset=3, __KeyTypeId__=[B@74bf69d, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759650443448, kafka_acknowledgment=Acknowledgment for order.created-0@3, __TypeId__=[B@9418b7f, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 4 for partition order.created-0
2025-10-06 15:19:29 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for payment.processed-0@3
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handlePaymentProcessedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"4e69f2c3-eac9-4192-b08c-b852e2a5facc","amount":980.00,"orderId":1,"eventType":"PAYMENT_PROCESSED","serviceName":"product-order-service","transactionId":"TXN_B077043F","serviceVersion":"1.0.0","createdAt":[2025,10,6,15,12,57,317085000],"paymentId":"e1c13366-521e-49f0-b9ee-d34df9422d7b","gatewayResponse":"Payment authorized successfully","customerId":2,"processedAt":[2025,10,6,15,12,57,830703000],"paymentMethod":"CREDIT_CARD","timestamp":"2025-10-06T15:12:57.832823","status":"COMPLETED","updatedAt":[2025,10,6,15,12,57,317102000]}, headers={__ContentTypeId__=[B@79407792, kafka_offset=3, __KeyTypeId__=[B@65bc9779, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@6306f8bb, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=e1c13366-521e-49f0-b9ee-d34df9422d7b, kafka_receivedTopic=payment.processed, kafka_receivedTimestamp=1759743777844, kafka_acknowledgment=Acknowledgment for payment.processed-0@3, __TypeId__=[B@74152147, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@4
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"2817f087-4fc7-475a-86f7-ee18ed54f86b","orderNumber":"294cd00b-e7c8-4509-94d1-d460439a9666","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,20,39,830340000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:20:39.832097","status":"PENDING","updatedAt":[2025,10,5,13,20,39,830361000]}, headers={__ContentTypeId__=[B@5acbc2, kafka_offset=4, __KeyTypeId__=[B@27248c1b, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759650639832, kafka_acknowledgment=Acknowledgment for order.created-0@4, __TypeId__=[B@676a4675, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:29 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@4
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"e9596ab6-f8d8-4850-9189-cb4b5a87c9b2","orderNumber":"8ffed856-b73d-4b3a-bd39-b89bf9a4b3c7","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,5,13,55,13,110657000],"customerEmail":"testuser@example.com","customerId":1,"shippingAddress":"123 User Street, User City","timestamp":"2025-10-05T13:55:30.536357","status":"CANCELLED","updatedAt":[2025,10,5,13,55,13,110666000]}, headers={__ContentTypeId__=[B@3cac15e7, kafka_offset=4, __KeyTypeId__=[B@27aaab3d, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1dcf1a39, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759652730543, kafka_acknowledgment=Acknowledgment for order.cancelled-0@4, __TypeId__=[B@27d236cb, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@4
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"2817f087-4fc7-475a-86f7-ee18ed54f86b","orderNumber":"294cd00b-e7c8-4509-94d1-d460439a9666","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,20,39,830340000],"customerEmail":"stocktest@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:20:39.832097","status":"PENDING","updatedAt":[2025,10,5,13,20,39,830361000]}, headers={__ContentTypeId__=[B@303d69d8, kafka_offset=4, __KeyTypeId__=[B@4da571c, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759650639832, kafka_acknowledgment=Acknowledgment for order.created-0@4, __TypeId__=[B@2a465ce9, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 5 for partition order.created-0
2025-10-06 15:19:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 5 for partition order.created-0
2025-10-06 15:19:29 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 5 for partition order.cancelled-0
2025-10-06 15:19:30 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@5
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"1a097506-7279-4c02-8911-3cbd2051b023","orderNumber":"c6a235b3-1434-4c15-b197-e58d3680ca20","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,14,0,58,980609000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T14:02:24.293178","status":"CANCELLED","updatedAt":[2025,10,5,14,0,58,980621000]}, headers={__ContentTypeId__=[B@6bd53c27, kafka_offset=5, __KeyTypeId__=[B@2c9f2f45, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1dcf1a39, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759653144311, kafka_acknowledgment=Acknowledgment for order.cancelled-0@5, __TypeId__=[B@14e57203, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@5
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b0f426cf-a0a7-4589-a7bc-f216b4e949f8","orderNumber":"639675c4-90a4-42fa-b696-ac16a1a2644c","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,27,22,138475000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:27:22.140228","status":"PENDING","updatedAt":[2025,10,5,13,27,22,138487000]}, headers={__ContentTypeId__=[B@2b7b1d88, kafka_offset=5, __KeyTypeId__=[B@7963d447, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759651042177, kafka_acknowledgment=Acknowledgment for order.created-0@5, __TypeId__=[B@100adcfa, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@5
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b0f426cf-a0a7-4589-a7bc-f216b4e949f8","orderNumber":"639675c4-90a4-42fa-b696-ac16a1a2644c","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,27,22,138475000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:27:22.140228","status":"PENDING","updatedAt":[2025,10,5,13,27,22,138487000]}, headers={__ContentTypeId__=[B@10ae5ad7, kafka_offset=5, __KeyTypeId__=[B@560de62d, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759651042177, kafka_acknowledgment=Acknowledgment for order.created-0@5, __TypeId__=[B@6042eb3a, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:30 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Seeking to offset 6 for partition order.cancelled-0
2025-10-06 15:19:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 6 for partition order.created-0
2025-10-06 15:19:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 6 for partition order.created-0
2025-10-06 15:19:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@6
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"3afe55c1-fb98-41fc-8506-d9612ea5205b","orderNumber":"dd671d51-c52e-467b-bd37-754e4804cce9","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,36,5,859548000],"customerEmail":"testcustomer@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:36:05.861915","status":"PENDING","updatedAt":[2025,10,5,13,36,5,859555000]}, headers={__ContentTypeId__=[B@28276272, kafka_offset=6, __KeyTypeId__=[B@2ec85262, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759651565898, kafka_acknowledgment=Acknowledgment for order.created-0@6, __TypeId__=[B@7e600523, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 7 for partition order.created-0
2025-10-06 15:19:30 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.cancelled-0@6
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCancelledEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"75d8e24c-c15d-4cd5-a724-b0473361062d","orderNumber":"e363bf6d-5e07-47d6-a606-8826fb9b7c9a","orderId":1,"eventType":"ORDER_CANCELLED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,6,12,16,37,643528000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"123 Customer Street, Customer City","timestamp":"2025-10-06T12:23:22.153599","status":"CANCELLED","updatedAt":[2025,10,6,12,16,37,643540000]}, headers={__ContentTypeId__=[B@27a67c4a, kafka_offset=6, __KeyTypeId__=[B@510367f1, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@1dcf1a39, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.cancelled, kafka_receivedTimestamp=1759733602170, kafka_acknowledgment=Acknowledgment for order.cancelled-0@6, __TypeId__=[B@751e0349, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@6
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"3afe55c1-fb98-41fc-8506-d9612ea5205b","orderNumber":"dd671d51-c52e-467b-bd37-754e4804cce9","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,5,13,36,5,859548000],"customerEmail":"testcustomer@example.com","customerId":1,"shippingAddress":"123 Test Street, Test City","timestamp":"2025-10-05T13:36:05.861915","status":"PENDING","updatedAt":[2025,10,5,13,36,5,859555000]}, headers={__ContentTypeId__=[B@474a7e7b, kafka_offset=6, __KeyTypeId__=[B@19900a0b, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759651565898, kafka_acknowledgment=Acknowledgment for order.created-0@6, __TypeId__=[B@53afa285, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 7 for partition order.created-0
2025-10-06 15:19:31 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@7
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b60e7e47-569f-4c6d-b029-4c2c9328bcd0","orderNumber":"77e4f83b-290c-4f6e-beec-b2b918f50032","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,43,55,498302000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:43:55.500675","status":"PENDING","updatedAt":[2025,10,5,13,43,55,498316000]}, headers={__ContentTypeId__=[B@44ab6053, kafka_offset=7, __KeyTypeId__=[B@1be69d02, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652035504, kafka_acknowledgment=Acknowledgment for order.created-0@7, __TypeId__=[B@10254472, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:31 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 8 for partition order.created-0
2025-10-06 15:19:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@7
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b60e7e47-569f-4c6d-b029-4c2c9328bcd0","orderNumber":"77e4f83b-290c-4f6e-beec-b2b918f50032","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,5,13,43,55,498302000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:43:55.500675","status":"PENDING","updatedAt":[2025,10,5,13,43,55,498316000]}, headers={__ContentTypeId__=[B@375d4e38, kafka_offset=7, __KeyTypeId__=[B@50732334, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652035504, kafka_acknowledgment=Acknowledgment for order.created-0@7, __TypeId__=[B@6258c326, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 8 for partition order.created-0
2025-10-06 15:19:31 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@8
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"e07d01a8-fa5a-4268-8a2d-032027c60cbf","orderNumber":"22251392-4b09-4b14-9a2d-28ce6e9b9616","orderId":3,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,13,45,2,791477000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:45:02.794013","status":"PENDING","updatedAt":[2025,10,5,13,45,2,791507000]}, headers={__ContentTypeId__=[B@6fac05d4, kafka_offset=8, __KeyTypeId__=[B@789e2052, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=3, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652102794, kafka_acknowledgment=Acknowledgment for order.created-0@8, __TypeId__=[B@4c72418f, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@8
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"e07d01a8-fa5a-4268-8a2d-032027c60cbf","orderNumber":"22251392-4b09-4b14-9a2d-28ce6e9b9616","orderId":3,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,13,45,2,791477000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T13:45:02.794013","status":"PENDING","updatedAt":[2025,10,5,13,45,2,791507000]}, headers={__ContentTypeId__=[B@6924f8bd, kafka_offset=8, __KeyTypeId__=[B@37bf9bd6, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=3, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652102794, kafka_acknowledgment=Acknowledgment for order.created-0@8, __TypeId__=[B@3f96cf52, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 9 for partition order.created-0
2025-10-06 15:19:31 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 9 for partition order.created-0
2025-10-06 15:19:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@9
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"baadd731-8880-4034-af61-bb3239c50fbd","orderNumber":"8ffed856-b73d-4b3a-bd39-b89bf9a4b3c7","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,5,13,55,13,110657000],"customerEmail":"testuser@example.com","customerId":1,"shippingAddress":"123 User Street, User City","timestamp":"2025-10-05T13:55:13.115094","status":"PENDING","updatedAt":[2025,10,5,13,55,13,110666000]}, headers={__ContentTypeId__=[B@3ce848ec, kafka_offset=9, __KeyTypeId__=[B@3cb0591, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652713187, kafka_acknowledgment=Acknowledgment for order.created-0@9, __TypeId__=[B@25fc4674, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 10 for partition order.created-0
2025-10-06 15:19:32 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@9
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"baadd731-8880-4034-af61-bb3239c50fbd","orderNumber":"8ffed856-b73d-4b3a-bd39-b89bf9a4b3c7","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,5,13,55,13,110657000],"customerEmail":"testuser@example.com","customerId":1,"shippingAddress":"123 User Street, User City","timestamp":"2025-10-05T13:55:13.115094","status":"PENDING","updatedAt":[2025,10,5,13,55,13,110666000]}, headers={__ContentTypeId__=[B@7f83e2ef, kafka_offset=9, __KeyTypeId__=[B@1ac88729, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759652713187, kafka_acknowledgment=Acknowledgment for order.created-0@9, __TypeId__=[B@5f7a8674, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:32 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 10 for partition order.created-0
2025-10-06 15:19:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@10
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"80147450-718c-47c4-8886-ed5711a0e4a9","orderNumber":"c6a235b3-1434-4c15-b197-e58d3680ca20","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,14,0,58,980609000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T14:00:58.983578","status":"PENDING","updatedAt":[2025,10,5,14,0,58,980621000]}, headers={__ContentTypeId__=[B@2ad1014a, kafka_offset=10, __KeyTypeId__=[B@37760ee7, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759653059048, kafka_acknowledgment=Acknowledgment for order.created-0@10, __TypeId__=[B@125c5eb4, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 11 for partition order.created-0
2025-10-06 15:19:32 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@10
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"80147450-718c-47c4-8886-ed5711a0e4a9","orderNumber":"c6a235b3-1434-4c15-b197-e58d3680ca20","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":19999.80,"createdAt":[2025,10,5,14,0,58,980609000],"customerEmail":"customer@gmail.com","customerId":1,"shippingAddress":"Address 1","timestamp":"2025-10-05T14:00:58.983578","status":"PENDING","updatedAt":[2025,10,5,14,0,58,980621000]}, headers={__ContentTypeId__=[B@6f5d3964, kafka_offset=10, __KeyTypeId__=[B@33b3c3eb, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759653059048, kafka_acknowledgment=Acknowledgment for order.created-0@10, __TypeId__=[B@48048e16, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:32 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 11 for partition order.created-0
2025-10-06 15:19:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@11
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"07ca2c52-026c-4db1-9b9b-6f36fc7d83d5","orderNumber":"e363bf6d-5e07-47d6-a606-8826fb9b7c9a","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,6,12,16,37,643528000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"123 Customer Street, Customer City","timestamp":"2025-10-06T12:16:37.656400","status":"PENDING","updatedAt":[2025,10,6,12,16,37,643540000]}, headers={__ContentTypeId__=[B@6009e5e9, kafka_offset=11, __KeyTypeId__=[B@a6625fd, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759733197742, kafka_acknowledgment=Acknowledgment for order.created-0@11, __TypeId__=[B@5614b6f9, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:33 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@11
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"07ca2c52-026c-4db1-9b9b-6f36fc7d83d5","orderNumber":"e363bf6d-5e07-47d6-a606-8826fb9b7c9a","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":1999.98,"createdAt":[2025,10,6,12,16,37,643528000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"123 Customer Street, Customer City","timestamp":"2025-10-06T12:16:37.656400","status":"PENDING","updatedAt":[2025,10,6,12,16,37,643540000]}, headers={__ContentTypeId__=[B@3babad42, kafka_offset=11, __KeyTypeId__=[B@40c79bb8, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759733197742, kafka_acknowledgment=Acknowledgment for order.created-0@11, __TypeId__=[B@18f406be, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 12 for partition order.created-0
2025-10-06 15:19:33 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 12 for partition order.created-0
2025-10-06 15:19:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@12
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"f2f06bc0-0107-4262-8cd7-168a828de38c","orderNumber":"b0be4aa0-b061-4387-9a52-347abd1b468d","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,6,12,27,27,611165000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T12:27:27.614105","status":"PENDING","updatedAt":[2025,10,6,12,27,27,611182000]}, headers={__ContentTypeId__=[B@3be4b994, kafka_offset=12, __KeyTypeId__=[B@34803c3d, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759733847631, kafka_acknowledgment=Acknowledgment for order.created-0@12, __TypeId__=[B@1407d38b, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:34 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@12
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"f2f06bc0-0107-4262-8cd7-168a828de38c","orderNumber":"b0be4aa0-b061-4387-9a52-347abd1b468d","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":9999.90,"createdAt":[2025,10,6,12,27,27,611165000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T12:27:27.614105","status":"PENDING","updatedAt":[2025,10,6,12,27,27,611182000]}, headers={__ContentTypeId__=[B@4b4f3182, kafka_offset=12, __KeyTypeId__=[B@c3bf430, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759733847631, kafka_acknowledgment=Acknowledgment for order.created-0@12, __TypeId__=[B@57dd635, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 13 for partition order.created-0
2025-10-06 15:19:34 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 13 for partition order.created-0
2025-10-06 15:19:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@13
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"3d450892-dfc9-4aa1-831d-0ca22a29622e","orderNumber":"63073bd3-dae7-4438-b42b-d5c888ed9a82","orderId":3,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,12,34,43,877389000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"123 Customer Street, Customer City","timestamp":"2025-10-06T12:34:43.879592","status":"PENDING","updatedAt":[2025,10,6,12,34,43,877406000]}, headers={__ContentTypeId__=[B@69766b6d, kafka_offset=13, __KeyTypeId__=[B@6f6a5cc2, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=3, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759734283879, kafka_acknowledgment=Acknowledgment for order.created-0@13, __TypeId__=[B@79427102, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:34 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@13
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"3d450892-dfc9-4aa1-831d-0ca22a29622e","orderNumber":"63073bd3-dae7-4438-b42b-d5c888ed9a82","orderId":3,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,12,34,43,877389000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"123 Customer Street, Customer City","timestamp":"2025-10-06T12:34:43.879592","status":"PENDING","updatedAt":[2025,10,6,12,34,43,877406000]}, headers={__ContentTypeId__=[B@a0f80b3, kafka_offset=13, __KeyTypeId__=[B@4a5ba5ea, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=3, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759734283879, kafka_acknowledgment=Acknowledgment for order.created-0@13, __TypeId__=[B@16e7bbc8, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 14 for partition order.created-0
2025-10-06 15:19:34 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 14 for partition order.created-0
2025-10-06 15:19:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@14
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"28611ee8-81f5-4f5b-a647-12b5f0099484","orderNumber":"194030fe-e4cf-4f17-9135-32b410e8ebd3","orderId":4,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":15999.84,"createdAt":[2025,10,6,14,32,12,304814000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T14:32:12.307924","status":"PENDING","updatedAt":[2025,10,6,14,32,12,304828000]}, headers={__ContentTypeId__=[B@6b04aaec, kafka_offset=14, __KeyTypeId__=[B@404aed90, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=4, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759741332312, kafka_acknowledgment=Acknowledgment for order.created-0@14, __TypeId__=[B@600e92fd, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@14
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"28611ee8-81f5-4f5b-a647-12b5f0099484","orderNumber":"194030fe-e4cf-4f17-9135-32b410e8ebd3","orderId":4,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":15999.84,"createdAt":[2025,10,6,14,32,12,304814000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T14:32:12.307924","status":"PENDING","updatedAt":[2025,10,6,14,32,12,304828000]}, headers={__ContentTypeId__=[B@1135ca91, kafka_offset=14, __KeyTypeId__=[B@235f4ff7, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=4, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759741332312, kafka_acknowledgment=Acknowledgment for order.created-0@14, __TypeId__=[B@22243cfc, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 15 for partition order.created-0
2025-10-06 15:19:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 15 for partition order.created-0
2025-10-06 15:19:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@15
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"f2153287-0615-40d4-a561-d211f0342f87","orderNumber":"ec221793-5c90-4f77-8011-fff048dfe007","orderId":5,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":799.84,"createdAt":[2025,10,6,14,42,23,426209000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T14:42:23.430215","status":"PENDING","updatedAt":[2025,10,6,14,42,23,426220000]}, headers={__ContentTypeId__=[B@6e60f5b0, kafka_offset=15, __KeyTypeId__=[B@674447b6, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=5, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759741943437, kafka_acknowledgment=Acknowledgment for order.created-0@15, __TypeId__=[B@79c5b792, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@15
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"f2153287-0615-40d4-a561-d211f0342f87","orderNumber":"ec221793-5c90-4f77-8011-fff048dfe007","orderId":5,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":799.84,"createdAt":[2025,10,6,14,42,23,426209000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Address 10","timestamp":"2025-10-06T14:42:23.430215","status":"PENDING","updatedAt":[2025,10,6,14,42,23,426220000]}, headers={__ContentTypeId__=[B@240e8ec, kafka_offset=15, __KeyTypeId__=[B@12a3479e, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=5, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759741943437, kafka_acknowledgment=Acknowledgment for order.created-0@15, __TypeId__=[B@1f80124a, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 16 for partition order.created-0
2025-10-06 15:19:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 16 for partition order.created-0
2025-10-06 15:19:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@16
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"6d0e92dd-e6bd-4c0f-9228-c6af9200df2f","orderNumber":"97fa8459-5617-42aa-97d0-b465d90a20da","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,15,9,37,791909000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Addr","timestamp":"2025-10-06T15:09:37.794845","status":"PENDING","updatedAt":[2025,10,6,15,9,37,791926000]}, headers={__ContentTypeId__=[B@589f653d, kafka_offset=16, __KeyTypeId__=[B@50ab3344, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759743577848, kafka_acknowledgment=Acknowledgment for order.created-0@16, __TypeId__=[B@797dc023, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:36 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@16
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"6d0e92dd-e6bd-4c0f-9228-c6af9200df2f","orderNumber":"97fa8459-5617-42aa-97d0-b465d90a20da","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,15,9,37,791909000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Addr","timestamp":"2025-10-06T15:09:37.794845","status":"PENDING","updatedAt":[2025,10,6,15,9,37,791926000]}, headers={__ContentTypeId__=[B@7efbcf38, kafka_offset=16, __KeyTypeId__=[B@6a74ad1e, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759743577848, kafka_acknowledgment=Acknowledgment for order.created-0@16, __TypeId__=[B@4f70f218, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Seeking to offset 17 for partition order.created-0
2025-10-06 15:19:36 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Seeking to offset 17 for partition order.created-0
2025-10-06 15:19:36 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@17
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"dfee185d-b101-405f-abce-38a6e278a43c","orderNumber":"aaccb545-1028-4ac5-808b-9f491b2394c7","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,15,11,2,485485000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Addr","timestamp":"2025-10-06T15:11:02.487151","status":"PENDING","updatedAt":[2025,10,6,15,11,2,485493000]}, headers={__ContentTypeId__=[B@62252513, kafka_offset=17, __KeyTypeId__=[B@c51a152, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759743662487, kafka_acknowledgment=Acknowledgment for order.created-0@17, __TypeId__=[B@3716d871, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:19:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@17
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"dfee185d-b101-405f-abce-38a6e278a43c","orderNumber":"aaccb545-1028-4ac5-808b-9f491b2394c7","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,15,11,2,485485000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Addr","timestamp":"2025-10-06T15:11:02.487151","status":"PENDING","updatedAt":[2025,10,6,15,11,2,485493000]}, headers={__ContentTypeId__=[B@110f8daa, kafka_offset=17, __KeyTypeId__=[B@596f2801, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759743662487, kafka_acknowledgment=Acknowledgment for order.created-0@17, __TypeId__=[B@592070c0, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:25:38 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-10-06 15:25:38 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:25:38 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:25:38 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-10-06 15:25:39 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Login attempt for user: customer
2025-10-06 15:25:39 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Password provided: customer123
2025-10-06 15:25:39 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Attempting authentication for user: customer
2025-10-06 15:25:39 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:25:39 [http-nio-8080-exec-2] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:25:39 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:25:39 [http-nio-8080-exec-2] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-06 15:25:39 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Authentication successful for user: customer
2025-10-06 15:25:39 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:25:39 [http-nio-8080-exec-2] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:25:39 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:25:39 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - User details loaded: customer
2025-10-06 15:25:39 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - JWT token generated successfully
2025-10-06 15:25:39 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Login successful for user: customer
2025-10-06 15:25:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/orders
2025-10-06 15:25:39 [http-nio-8080-exec-3] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:25:39 [http-nio-8080-exec-3] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:25:39 [http-nio-8080-exec-3] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:25:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/orders
2025-10-06 15:25:39 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 15:25:39 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 15:25:39 [http-nio-8080-exec-3] INFO  c.e.p.controller.OrderController - Creating order for customer ID: 2
2025-10-06 15:25:39 [http-nio-8080-exec-3] INFO  c.e.p.d.s.impl.OrderServiceImpl - Creating order for customer ID: 2
2025-10-06 15:25:39 [http-nio-8080-exec-3] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created with ID: 1
2025-10-06 15:25:39 [http-nio-8080-exec-3] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Publishing order created event for order ID: 1
2025-10-06 15:25:39 [http-nio-8080-exec-3] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 3
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2025-10-06 15:25:39 [http-nio-8080-exec-3] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2025-10-06 15:25:39 [http-nio-8080-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2025-10-06 15:25:39 [http-nio-8080-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2025-10-06 15:25:39 [http-nio-8080-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1759744539624
2025-10-06 15:25:39 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 15:25:39 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: z1qwaTE8RNyxthyGOJ02kg
2025-10-06 15:25:39 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 1008 with epoch 0
2025-10-06 15:25:39 [http-nio-8080-exec-3] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Order created event published successfully for order ID: 1
2025-10-06 15:25:39 [http-nio-8080-exec-3] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created successfully for customer ID: 2
2025-10-06 15:25:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@18
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"3e50634f-e381-4665-a04d-768a5fe66e7f","orderNumber":"3b165c73-f2c5-4288-ab79-d822c9ff8e2a","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,15,25,39,577162000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Addr","timestamp":"2025-10-06T15:25:39.579578","status":"PENDING","updatedAt":[2025,10,6,15,25,39,577174000]}, headers={__ContentTypeId__=[B@78657834, kafka_offset=18, __KeyTypeId__=[B@14265991, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759744539650, kafka_acknowledgment=Acknowledgment for order.created-0@18, __TypeId__=[B@20355571, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:25:39 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@18
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"3e50634f-e381-4665-a04d-768a5fe66e7f","orderNumber":"3b165c73-f2c5-4288-ab79-d822c9ff8e2a","orderId":1,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,15,25,39,577162000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Addr","timestamp":"2025-10-06T15:25:39.579578","status":"PENDING","updatedAt":[2025,10,6,15,25,39,577174000]}, headers={__ContentTypeId__=[B@7ca124ed, kafka_offset=18, __KeyTypeId__=[B@3761a311, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=1, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759744539650, kafka_acknowledgment=Acknowledgment for order.created-0@18, __TypeId__=[B@2eb356e7, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:25:39 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments
2025-10-06 15:25:39 [http-nio-8080-exec-5] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:25:39 [http-nio-8080-exec-5] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:25:39 [http-nio-8080-exec-5] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:25:39 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments
2025-10-06 15:25:39 [http-nio-8080-exec-5] ERROR c.e.p.c.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('1' (code 49)): was expecting comma to separate Object entries
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:406)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:354)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:183)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:136)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.ecommerce.productorder.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character ('1' (code 49)): was expecting comma to separate Object entries
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 2, column: 2]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2477)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:750)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:674)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(UTF8StreamJsonParser.java:1062)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:399)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2105)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1481)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:395)
	... 132 common frames omitted
2025-10-06 15:28:21 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-2, groupId=inventory-service] Node -1 disconnected.
2025-10-06 15:28:21 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-inventory-service-1, groupId=inventory-service] Node -1 disconnected.
2025-10-06 15:28:21 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-4, groupId=notification-service] Node -1 disconnected.
2025-10-06 15:28:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-notification-service-3, groupId=notification-service] Node -1 disconnected.
2025-10-06 15:28:31 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-10-06 15:28:31 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:28:31 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:28:31 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-10-06 15:28:31 [http-nio-8080-exec-6] INFO  c.e.p.controller.AuthController - Login attempt for user: customer
2025-10-06 15:28:31 [http-nio-8080-exec-6] INFO  c.e.p.controller.AuthController - Password provided: customer123
2025-10-06 15:28:31 [http-nio-8080-exec-6] INFO  c.e.p.controller.AuthController - Attempting authentication for user: customer
2025-10-06 15:28:31 [http-nio-8080-exec-6] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:28:31 [http-nio-8080-exec-6] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:28:31 [http-nio-8080-exec-6] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:28:31 [http-nio-8080-exec-6] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-06 15:28:31 [http-nio-8080-exec-6] INFO  c.e.p.controller.AuthController - Authentication successful for user: customer
2025-10-06 15:28:31 [http-nio-8080-exec-6] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:28:31 [http-nio-8080-exec-6] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:28:31 [http-nio-8080-exec-6] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:28:31 [http-nio-8080-exec-6] INFO  c.e.p.controller.AuthController - User details loaded: customer
2025-10-06 15:28:31 [http-nio-8080-exec-6] INFO  c.e.p.controller.AuthController - JWT token generated successfully
2025-10-06 15:28:31 [http-nio-8080-exec-6] INFO  c.e.p.controller.AuthController - Login successful for user: customer
2025-10-06 15:28:31 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/orders
2025-10-06 15:28:31 [http-nio-8080-exec-8] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:28:31 [http-nio-8080-exec-8] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:28:31 [http-nio-8080-exec-8] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:28:31 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/orders
2025-10-06 15:28:31 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 15:28:31 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 15:28:31 [http-nio-8080-exec-8] INFO  c.e.p.controller.OrderController - Creating order for customer ID: 2
2025-10-06 15:28:31 [http-nio-8080-exec-8] INFO  c.e.p.d.s.impl.OrderServiceImpl - Creating order for customer ID: 2
2025-10-06 15:28:31 [http-nio-8080-exec-8] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created with ID: 2
2025-10-06 15:28:31 [http-nio-8080-exec-8] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Publishing order created event for order ID: 2
2025-10-06 15:28:31 [http-nio-8080-exec-8] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Order created event published successfully for order ID: 2
2025-10-06 15:28:31 [http-nio-8080-exec-8] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created successfully for customer ID: 2
2025-10-06 15:28:31 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@19
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b86ddc85-467c-4538-8469-8514cc6c8411","orderNumber":"b32afa6f-b667-4789-8aaa-6ad8200e8e98","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,15,28,31,709187000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Addr","timestamp":"2025-10-06T15:28:31.715329","status":"PENDING","updatedAt":[2025,10,6,15,28,31,709224000]}, headers={__ContentTypeId__=[B@35a023fd, kafka_offset=19, __KeyTypeId__=[B@756e1861, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759744711715, kafka_acknowledgment=Acknowledgment for order.created-0@19, __TypeId__=[B@4fd5ded, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:28:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@19
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"b86ddc85-467c-4538-8469-8514cc6c8411","orderNumber":"b32afa6f-b667-4789-8aaa-6ad8200e8e98","orderId":2,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":999.99,"createdAt":[2025,10,6,15,28,31,709187000],"customerEmail":"customer@gmail.com","customerId":2,"shippingAddress":"Addr","timestamp":"2025-10-06T15:28:31.715329","status":"PENDING","updatedAt":[2025,10,6,15,28,31,709224000]}, headers={__ContentTypeId__=[B@51ac56d4, kafka_offset=19, __KeyTypeId__=[B@170e58ca, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=2, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759744711715, kafka_acknowledgment=Acknowledgment for order.created-0@19, __TypeId__=[B@36bd7298, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:28:31 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments
2025-10-06 15:28:31 [http-nio-8080-exec-10] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:28:31 [http-nio-8080-exec-10] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:28:31 [http-nio-8080-exec-10] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:28:31 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments
2025-10-06 15:28:31 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:28:31 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:28:31 [http-nio-8080-exec-10] INFO  c.e.p.controller.PaymentController - Processing payment for order ID: 2
2025-10-06 15:28:31 [http-nio-8080-exec-10] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing payment for order ID: 2
2025-10-06 15:28:31 [http-nio-8080-exec-10] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Payment created with ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab
2025-10-06 15:28:31 [http-nio-8080-exec-10] INFO  c.e.p.p.s.i.PaymentGatewayServiceImpl - Processing payment through gateway for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab
2025-10-06 15:28:31 [http-nio-8080-exec-10] DEBUG c.e.p.p.s.i.PaymentGatewayServiceImpl - Validating payment method for request: CREDIT_CARD
2025-10-06 15:28:32 [http-nio-8080-exec-10] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Publishing payment processed event for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab
2025-10-06 15:28:32 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition payment.processed-0 to 10 since the associated topicId changed from null to t5NxQuSTQC2hC3JUcDzeGg
2025-10-06 15:28:32 [http-nio-8080-exec-10] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Payment processed event published successfully for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab
2025-10-06 15:28:32 [http-nio-8080-exec-10] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Payment processed successfully for order ID: 2
2025-10-06 15:28:32 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for payment.processed-0@4
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handlePaymentProcessedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"c2589ca4-dd0b-4a91-b424-797646e854f9","amount":999.99,"orderId":2,"eventType":"PAYMENT_PROCESSED","serviceName":"product-order-service","transactionId":"TXN_71C6F564","serviceVersion":"1.0.0","createdAt":[2025,10,6,15,28,31,787321000],"paymentId":"3b2687e0-1ee4-4ef9-acde-47df7d84dbab","gatewayResponse":"Payment authorized successfully","customerId":2,"processedAt":[2025,10,6,15,28,32,812632000],"paymentMethod":"CREDIT_CARD","timestamp":"2025-10-06T15:28:32.820969","status":"COMPLETED","updatedAt":[2025,10,6,15,28,31,787335000]}, headers={__ContentTypeId__=[B@af46154, kafka_offset=4, __KeyTypeId__=[B@bd0b37f, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@6306f8bb, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=3b2687e0-1ee4-4ef9-acde-47df7d84dbab, kafka_receivedTopic=payment.processed, kafka_receivedTimestamp=1759744712857, kafka_acknowledgment=Acknowledgment for payment.processed-0@4, __TypeId__=[B@13d6cd54, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:28:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-10-06 15:28:32 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:28:32 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:28:32 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-10-06 15:28:32 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Login attempt for user: admin
2025-10-06 15:28:32 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Password provided: admin123
2025-10-06 15:28:32 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Attempting authentication for user: admin
2025-10-06 15:28:32 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 15:28:32 [http-nio-8080-exec-2] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 15:28:32 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 15:28:32 [http-nio-8080-exec-2] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-06 15:28:32 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Authentication successful for user: admin
2025-10-06 15:28:32 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 15:28:32 [http-nio-8080-exec-2] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 15:28:32 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 15:28:32 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - User details loaded: admin
2025-10-06 15:28:32 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - JWT token generated successfully
2025-10-06 15:28:32 [http-nio-8080-exec-2] INFO  c.e.p.controller.AuthController - Login successful for user: admin
2025-10-06 15:28:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments/3b2687e0-1ee4-4ef9-acde-47df7d84dbab/refund?refundAmount=500.00
2025-10-06 15:28:32 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 15:28:32 [http-nio-8080-exec-4] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 15:28:32 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 15:28:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments/3b2687e0-1ee4-4ef9-acde-47df7d84dbab/refund?refundAmount=500.00
2025-10-06 15:28:32 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:28:32 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:28:32 [http-nio-8080-exec-4] INFO  c.e.p.controller.PaymentController - Refunding payment with ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab for amount: 500.00
2025-10-06 15:28:32 [http-nio-8080-exec-4] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing refund for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab, amount: 500.00
2025-10-06 15:28:32 [http-nio-8080-exec-4] INFO  c.e.p.p.s.i.PaymentGatewayServiceImpl - Processing refund through gateway for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab
2025-10-06 15:28:33 [http-nio-8080-exec-4] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Publishing payment refunded event for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab
2025-10-06 15:28:33 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition payment.refunded-0 to 0 since the associated topicId changed from null to QgMN8r1lQeaXfA3DQZXVWA
2025-10-06 15:28:33 [http-nio-8080-exec-4] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Payment refunded event published successfully for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab
2025-10-06 15:28:33 [http-nio-8080-exec-4] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Refund processed successfully for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab
2025-10-06 15:28:33 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments/3b2687e0-1ee4-4ef9-acde-47df7d84dbab/refund?refundAmount=500.00
2025-10-06 15:28:33 [http-nio-8080-exec-6] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 15:28:33 [http-nio-8080-exec-6] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 15:28:33 [http-nio-8080-exec-6] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 15:28:33 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments/3b2687e0-1ee4-4ef9-acde-47df7d84dbab/refund?refundAmount=500.00
2025-10-06 15:28:33 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:28:33 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:28:33 [http-nio-8080-exec-6] INFO  c.e.p.controller.PaymentController - Refunding payment with ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab for amount: 500.00
2025-10-06 15:28:33 [http-nio-8080-exec-6] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing refund for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab, amount: 500.00
2025-10-06 15:28:33 [http-nio-8080-exec-6] INFO  c.e.p.p.s.i.PaymentGatewayServiceImpl - Processing refund through gateway for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab
2025-10-06 15:28:35 [http-nio-8080-exec-6] ERROR c.e.p.p.s.impl.PaymentServiceImpl - Error processing refund for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab
java.lang.IllegalArgumentException: Refund amount cannot exceed remaining refundable amount: 499.99
	at com.ecommerce.productorder.payment.domain.entity.Payment.refundPayment(Payment.java:164)
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl.refundPayment(PaymentServiceImpl.java:207)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl$$SpringCGLIB$$0.refundPayment(<generated>)
	at com.ecommerce.productorder.controller.PaymentController.refundPayment(PaymentController.java:176)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:199)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.controller.PaymentController$$SpringCGLIB$$0.refundPayment(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.ecommerce.productorder.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-10-06 15:28:35 [http-nio-8080-exec-6] ERROR c.e.p.c.GlobalExceptionHandler - Business rule violation: Failed to process refund: Refund amount cannot exceed remaining refundable amount: 499.99
2025-10-06 15:28:35 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments/3b2687e0-1ee4-4ef9-acde-47df7d84dbab/refund?refundAmount=500.00
2025-10-06 15:28:35 [http-nio-8080-exec-7] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 15:28:35 [http-nio-8080-exec-7] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 15:28:35 [http-nio-8080-exec-7] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 15:28:35 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments/3b2687e0-1ee4-4ef9-acde-47df7d84dbab/refund?refundAmount=500.00
2025-10-06 15:28:35 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:28:35 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:28:35 [http-nio-8080-exec-7] INFO  c.e.p.controller.PaymentController - Refunding payment with ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab for amount: 500.00
2025-10-06 15:28:35 [http-nio-8080-exec-7] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing refund for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab, amount: 500.00
2025-10-06 15:28:35 [http-nio-8080-exec-7] INFO  c.e.p.p.s.i.PaymentGatewayServiceImpl - Processing refund through gateway for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab
2025-10-06 15:28:36 [http-nio-8080-exec-7] ERROR c.e.p.p.s.impl.PaymentServiceImpl - Error processing refund for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab
java.lang.IllegalArgumentException: Refund amount cannot exceed remaining refundable amount: 499.99
	at com.ecommerce.productorder.payment.domain.entity.Payment.refundPayment(Payment.java:164)
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl.refundPayment(PaymentServiceImpl.java:207)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl$$SpringCGLIB$$0.refundPayment(<generated>)
	at com.ecommerce.productorder.controller.PaymentController.refundPayment(PaymentController.java:176)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:199)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.controller.PaymentController$$SpringCGLIB$$0.refundPayment(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.ecommerce.productorder.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-10-06 15:28:36 [http-nio-8080-exec-7] ERROR c.e.p.c.GlobalExceptionHandler - Business rule violation: Failed to process refund: Refund amount cannot exceed remaining refundable amount: 499.99
2025-10-06 15:29:44 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/query.do?jsessionid=a89f59e2d2da90f5cd1497dff835f5e0
2025-10-06 15:29:44 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:44 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:44 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/query.do?jsessionid=a89f59e2d2da90f5cd1497dff835f5e0
2025-10-06 15:29:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/stylesheet.css
2025-10-06 15:29:44 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:44 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/stylesheet.css
2025-10-06 15:29:44 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/login.jsp?jsessionid=3f3dafc13fe7ba074f6685943ea3998c
2025-10-06 15:29:44 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:44 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:44 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/login.jsp?jsessionid=3f3dafc13fe7ba074f6685943ea3998c
2025-10-06 15:29:44 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/login.jsp
2025-10-06 15:29:44 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:44 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:44 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/login.jsp
2025-10-06 15:29:44 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/background.gif
2025-10-06 15:29:44 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:44 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:44 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/background.gif
2025-10-06 15:29:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/login.jsp?jsessionid=d44a9992a4aba76e8ef6587447b4ff41
2025-10-06 15:29:45 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:45 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/login.jsp?jsessionid=d44a9992a4aba76e8ef6587447b4ff41
2025-10-06 15:29:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/login.do?jsessionid=d44a9992a4aba76e8ef6587447b4ff41
2025-10-06 15:29:50 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/login.do?jsessionid=d44a9992a4aba76e8ef6587447b4ff41
2025-10-06 15:29:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tables.do?jsessionid=d44a9992a4aba76e8ef6587447b4ff41
2025-10-06 15:29:50 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/query.jsp?jsessionid=d44a9992a4aba76e8ef6587447b4ff41
2025-10-06 15:29:50 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tables.do?jsessionid=d44a9992a4aba76e8ef6587447b4ff41
2025-10-06 15:29:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/header.jsp?jsessionid=d44a9992a4aba76e8ef6587447b4ff41
2025-10-06 15:29:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/query.jsp?jsessionid=d44a9992a4aba76e8ef6587447b4ff41
2025-10-06 15:29:50 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/help.jsp?jsessionid=d44a9992a4aba76e8ef6587447b4ff41
2025-10-06 15:29:50 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/help.jsp?jsessionid=d44a9992a4aba76e8ef6587447b4ff41
2025-10-06 15:29:50 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/header.jsp?jsessionid=d44a9992a4aba76e8ef6587447b4ff41
2025-10-06 15:29:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_line.gif
2025-10-06 15:29:50 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_line.gif
2025-10-06 15:29:50 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_disconnect.gif
2025-10-06 15:29:50 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_help.gif
2025-10-06 15:29:50 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_disconnect.gif
2025-10-06 15:29:50 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_commit.gif
2025-10-06 15:29:50 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_history.gif
2025-10-06 15:29:50 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_help.gif
2025-10-06 15:29:50 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_commit.gif
2025-10-06 15:29:50 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_history.gif
2025-10-06 15:29:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_run.gif
2025-10-06 15:29:50 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_run.gif
2025-10-06 15:29:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_run_selected.gif
2025-10-06 15:29:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_stop.gif
2025-10-06 15:29:50 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_stop.gif
2025-10-06 15:29:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_refresh.gif
2025-10-06 15:29:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_run_selected.gif
2025-10-06 15:29:50 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_rollback.gif
2025-10-06 15:29:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_refresh.gif
2025-10-06 15:29:50 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_rollback.gif
2025-10-06 15:29:50 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree.js
2025-10-06 15:29:50 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree.js
2025-10-06 15:29:50 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_table.gif
2025-10-06 15:29:50 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_empty.gif
2025-10-06 15:29:50 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_minus.gif
2025-10-06 15:29:50 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_plus.gif
2025-10-06 15:29:50 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_database.gif
2025-10-06 15:29:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_plus.gif
2025-10-06 15:29:50 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_empty.gif
2025-10-06 15:29:50 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_table.gif
2025-10-06 15:29:50 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_column.gif
2025-10-06 15:29:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_database.gif
2025-10-06 15:29:50 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_minus.gif
2025-10-06 15:29:50 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_column.gif
2025-10-06 15:29:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_type.gif
2025-10-06 15:29:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_index_az.gif
2025-10-06 15:29:50 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_folder.gif
2025-10-06 15:29:50 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_view.gif
2025-10-06 15:29:50 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-3] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_type.gif
2025-10-06 15:29:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_index.gif
2025-10-06 15:29:50 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_info.gif
2025-10-06 15:29:50 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_view.gif
2025-10-06 15:29:50 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_info.gif
2025-10-06 15:29:50 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_folder.gif
2025-10-06 15:29:50 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_index_az.gif
2025-10-06 15:29:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_index.gif
2025-10-06 15:29:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_users.gif
2025-10-06 15:29:50 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_users.gif
2025-10-06 15:29:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_user.gif
2025-10-06 15:29:50 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:50 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:50 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_user.gif
2025-10-06 15:29:55 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /h2-console/query.do?jsessionid=d44a9992a4aba76e8ef6587447b4ff41
2025-10-06 15:29:55 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:55 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:55 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /h2-console/query.do?jsessionid=d44a9992a4aba76e8ef6587447b4ff41
2025-10-06 15:29:55 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/stylesheet.css
2025-10-06 15:29:55 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /h2-console/table.js
2025-10-06 15:29:55 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:55 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:29:55 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:55 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:29:55 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/stylesheet.css
2025-10-06 15:29:55 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /h2-console/table.js
2025-10-06 15:30:24 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments/3b2687e0-1ee4-4ef9-acde-47df7d84dbab	/refund?refundAmount=491
2025-10-06 15:30:24 [http-nio-8080-exec-3] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 15:30:24 [http-nio-8080-exec-3] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 15:30:24 [http-nio-8080-exec-3] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 15:30:24 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments/3b2687e0-1ee4-4ef9-acde-47df7d84dbab	/refund?refundAmount=491
2025-10-06 15:30:24 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:30:24 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:30:24 [http-nio-8080-exec-3] INFO  c.e.p.controller.PaymentController - Refunding payment with ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab	 for amount: 491
2025-10-06 15:30:24 [http-nio-8080-exec-3] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing refund for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab	, amount: 491
2025-10-06 15:30:24 [http-nio-8080-exec-3] ERROR c.e.p.c.GlobalExceptionHandler - Resource not found: Payment not found with ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab	
2025-10-06 15:30:39 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 15:30:39 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition payment.processed-0 to 10 since the associated topicId changed from null to t5NxQuSTQC2hC3JUcDzeGg
2025-10-06 15:30:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-10-06 15:30:43 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:30:43 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:30:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-10-06 15:30:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-10-06 15:30:47 [http-nio-8080-exec-10] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 15:30:47 [http-nio-8080-exec-10] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 15:30:47 [http-nio-8080-exec-10] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 15:30:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-10-06 15:30:47 [http-nio-8080-exec-10] INFO  c.e.p.controller.AuthController - Login attempt for user: admin
2025-10-06 15:30:47 [http-nio-8080-exec-10] INFO  c.e.p.controller.AuthController - Password provided: admin123
2025-10-06 15:30:47 [http-nio-8080-exec-10] INFO  c.e.p.controller.AuthController - Attempting authentication for user: admin
2025-10-06 15:30:47 [http-nio-8080-exec-10] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 15:30:47 [http-nio-8080-exec-10] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 15:30:47 [http-nio-8080-exec-10] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 15:30:47 [http-nio-8080-exec-10] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-06 15:30:47 [http-nio-8080-exec-10] INFO  c.e.p.controller.AuthController - Authentication successful for user: admin
2025-10-06 15:30:47 [http-nio-8080-exec-10] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 15:30:47 [http-nio-8080-exec-10] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 15:30:47 [http-nio-8080-exec-10] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 15:30:47 [http-nio-8080-exec-10] INFO  c.e.p.controller.AuthController - User details loaded: admin
2025-10-06 15:30:47 [http-nio-8080-exec-10] INFO  c.e.p.controller.AuthController - JWT token generated successfully
2025-10-06 15:30:47 [http-nio-8080-exec-10] INFO  c.e.p.controller.AuthController - Login successful for user: admin
2025-10-06 15:31:14 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments/3b2687e0-1ee4-4ef9-acde-47df7d84dbab	/refund?refundAmount=491
2025-10-06 15:31:14 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 15:31:14 [http-nio-8080-exec-9] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 15:31:14 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 15:31:14 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments/3b2687e0-1ee4-4ef9-acde-47df7d84dbab	/refund?refundAmount=491
2025-10-06 15:31:14 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:31:14 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:31:14 [http-nio-8080-exec-9] INFO  c.e.p.controller.PaymentController - Refunding payment with ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab	 for amount: 491
2025-10-06 15:31:14 [http-nio-8080-exec-9] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing refund for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab	, amount: 491
2025-10-06 15:31:14 [http-nio-8080-exec-9] ERROR c.e.p.c.GlobalExceptionHandler - Resource not found: Payment not found with ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab	
2025-10-06 15:31:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments/3b2687e0-1ee4-4ef9-acde-47df7d84dbab/refund?refundAmount=491
2025-10-06 15:31:52 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 15:31:52 [http-nio-8080-exec-4] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 15:31:52 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 15:31:52 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments/3b2687e0-1ee4-4ef9-acde-47df7d84dbab/refund?refundAmount=491
2025-10-06 15:31:52 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:31:52 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:31:52 [http-nio-8080-exec-4] INFO  c.e.p.controller.PaymentController - Refunding payment with ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab for amount: 491
2025-10-06 15:31:52 [http-nio-8080-exec-4] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing refund for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab, amount: 491
2025-10-06 15:31:52 [http-nio-8080-exec-4] INFO  c.e.p.p.s.i.PaymentGatewayServiceImpl - Processing refund through gateway for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab
2025-10-06 15:31:54 [http-nio-8080-exec-4] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Publishing payment refunded event for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab
2025-10-06 15:31:54 [http-nio-8080-exec-4] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Payment refunded event published successfully for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab
2025-10-06 15:31:54 [http-nio-8080-exec-4] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Refund processed successfully for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab
2025-10-06 15:31:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments/3b2687e0-1ee4-4ef9-acde-47df7d84dbab/refund?refundAmount=491
2025-10-06 15:31:58 [http-nio-8080-exec-3] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 15:31:58 [http-nio-8080-exec-3] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 15:31:58 [http-nio-8080-exec-3] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 15:31:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments/3b2687e0-1ee4-4ef9-acde-47df7d84dbab/refund?refundAmount=491
2025-10-06 15:31:58 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:31:58 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:31:58 [http-nio-8080-exec-3] INFO  c.e.p.controller.PaymentController - Refunding payment with ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab for amount: 491
2025-10-06 15:31:58 [http-nio-8080-exec-3] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing refund for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab, amount: 491
2025-10-06 15:31:58 [http-nio-8080-exec-3] INFO  c.e.p.p.s.i.PaymentGatewayServiceImpl - Processing refund through gateway for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab
2025-10-06 15:31:59 [http-nio-8080-exec-3] ERROR c.e.p.p.s.impl.PaymentServiceImpl - Error processing refund for payment ID: 3b2687e0-1ee4-4ef9-acde-47df7d84dbab
java.lang.IllegalArgumentException: Refund amount cannot exceed remaining refundable amount: 8.99
	at com.ecommerce.productorder.payment.domain.entity.Payment.refundPayment(Payment.java:164)
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl.refundPayment(PaymentServiceImpl.java:207)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl$$SpringCGLIB$$0.refundPayment(<generated>)
	at com.ecommerce.productorder.controller.PaymentController.refundPayment(PaymentController.java:176)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:199)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.controller.PaymentController$$SpringCGLIB$$0.refundPayment(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.ecommerce.productorder.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-10-06 15:31:59 [http-nio-8080-exec-3] ERROR c.e.p.c.GlobalExceptionHandler - Business rule violation: Failed to process refund: Refund amount cannot exceed remaining refundable amount: 8.99
2025-10-06 15:32:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.html
2025-10-06 15:32:36 [http-nio-8080-exec-2] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:32:36 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:32:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.html
2025-10-06 15:32:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-10-06 15:32:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui.css
2025-10-06 15:32:36 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-ui-bundle.js
2025-10-06 15:32:36 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:32:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/swagger-initializer.js
2025-10-06 15:32:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/index.css
2025-10-06 15:32:36 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:32:36 [http-nio-8080-exec-1] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:32:36 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:32:36 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:32:36 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:32:36 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:32:36 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:32:36 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:32:36 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-10-06 15:32:36 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui.css
2025-10-06 15:32:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:32:36 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-initializer.js
2025-10-06 15:32:36 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/swagger-ui-bundle.js
2025-10-06 15:32:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/index.css
2025-10-06 15:32:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-10-06 15:32:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api-docs/swagger-config
2025-10-06 15:32:36 [http-nio-8080-exec-4] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:32:36 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:32:36 [http-nio-8080-exec-7] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:32:36 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:32:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-10-06 15:32:36 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api-docs/swagger-config
2025-10-06 15:32:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api-docs
2025-10-06 15:32:36 [http-nio-8080-exec-5] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:32:36 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:32:36 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api-docs
2025-10-06 15:32:37 [http-nio-8080-exec-5] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 472 ms
2025-10-06 15:33:17 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-10-06 15:33:17 [http-nio-8080-exec-10] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:33:17 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:33:17 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-10-06 15:33:17 [http-nio-8080-exec-10] INFO  c.e.p.controller.AuthController - Login attempt for user: customer
2025-10-06 15:33:17 [http-nio-8080-exec-10] INFO  c.e.p.controller.AuthController - Password provided: customer123
2025-10-06 15:33:17 [http-nio-8080-exec-10] INFO  c.e.p.controller.AuthController - Attempting authentication for user: customer
2025-10-06 15:33:17 [http-nio-8080-exec-10] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:33:17 [http-nio-8080-exec-10] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:33:17 [http-nio-8080-exec-10] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:33:17 [http-nio-8080-exec-10] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-06 15:33:17 [http-nio-8080-exec-10] INFO  c.e.p.controller.AuthController - Authentication successful for user: customer
2025-10-06 15:33:17 [http-nio-8080-exec-10] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:33:17 [http-nio-8080-exec-10] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:33:17 [http-nio-8080-exec-10] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:33:17 [http-nio-8080-exec-10] INFO  c.e.p.controller.AuthController - User details loaded: customer
2025-10-06 15:33:17 [http-nio-8080-exec-10] INFO  c.e.p.controller.AuthController - JWT token generated successfully
2025-10-06 15:33:17 [http-nio-8080-exec-10] INFO  c.e.p.controller.AuthController - Login successful for user: customer
2025-10-06 15:33:20 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-10-06 15:33:20 [http-nio-8080-exec-9] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:33:20 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:33:20 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-10-06 15:33:20 [http-nio-8080-exec-9] INFO  c.e.p.controller.AuthController - Login attempt for user: customer
2025-10-06 15:33:20 [http-nio-8080-exec-9] INFO  c.e.p.controller.AuthController - Password provided: customer123
2025-10-06 15:33:20 [http-nio-8080-exec-9] INFO  c.e.p.controller.AuthController - Attempting authentication for user: customer
2025-10-06 15:33:20 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:33:20 [http-nio-8080-exec-9] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:33:20 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:33:20 [http-nio-8080-exec-9] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-10-06 15:33:20 [http-nio-8080-exec-9] INFO  c.e.p.controller.AuthController - Authentication successful for user: customer
2025-10-06 15:33:20 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:33:20 [http-nio-8080-exec-9] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:33:20 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:33:20 [http-nio-8080-exec-9] INFO  c.e.p.controller.AuthController - User details loaded: customer
2025-10-06 15:33:20 [http-nio-8080-exec-9] INFO  c.e.p.controller.AuthController - JWT token generated successfully
2025-10-06 15:33:20 [http-nio-8080-exec-9] INFO  c.e.p.controller.AuthController - Login successful for user: customer
2025-10-06 15:34:54 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -1 disconnected.
2025-10-06 15:35:06 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/orders
2025-10-06 15:35:06 [http-nio-8080-exec-5] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:35:06 [http-nio-8080-exec-5] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:35:06 [http-nio-8080-exec-5] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:35:06 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/orders
2025-10-06 15:35:06 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 15:35:06 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 15:35:06 [http-nio-8080-exec-5] INFO  c.e.p.controller.OrderController - Creating order for customer ID: 2
2025-10-06 15:35:06 [http-nio-8080-exec-5] INFO  c.e.p.d.s.impl.OrderServiceImpl - Creating order for customer ID: 2
2025-10-06 15:35:06 [http-nio-8080-exec-5] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created with ID: 3
2025-10-06 15:35:06 [http-nio-8080-exec-5] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Publishing order created event for order ID: 3
2025-10-06 15:35:06 [http-nio-8080-exec-5] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Order created event published successfully for order ID: 3
2025-10-06 15:35:06 [http-nio-8080-exec-5] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created successfully for customer ID: 2
2025-10-06 15:35:06 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@20
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"73c11139-be23-40cc-8084-265fef10699d","orderNumber":"188125d0-7750-4b7b-9bce-f444ac9ce77f","orderId":3,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":499.90,"createdAt":[2025,10,6,15,35,6,887565000],"customerEmail":"hekp@gmail.com","customerId":2,"shippingAddress":"string","timestamp":"2025-10-06T15:35:06.889398","status":"PENDING","updatedAt":[2025,10,6,15,35,6,887579000]}, headers={__ContentTypeId__=[B@5a0d9b82, kafka_offset=20, __KeyTypeId__=[B@79d3e307, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=3, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759745106894, kafka_acknowledgment=Acknowledgment for order.created-0@20, __TypeId__=[B@1af3930b, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:35:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@20
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"73c11139-be23-40cc-8084-265fef10699d","orderNumber":"188125d0-7750-4b7b-9bce-f444ac9ce77f","orderId":3,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":499.90,"createdAt":[2025,10,6,15,35,6,887565000],"customerEmail":"hekp@gmail.com","customerId":2,"shippingAddress":"string","timestamp":"2025-10-06T15:35:06.889398","status":"PENDING","updatedAt":[2025,10,6,15,35,6,887579000]}, headers={__ContentTypeId__=[B@69d12432, kafka_offset=20, __KeyTypeId__=[B@6e71faa6, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=3, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759745106894, kafka_acknowledgment=Acknowledgment for order.created-0@20, __TypeId__=[B@62dbf011, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:35:09 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/orders
2025-10-06 15:35:09 [http-nio-8080-exec-1] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:35:09 [http-nio-8080-exec-1] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:35:09 [http-nio-8080-exec-1] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:35:09 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/orders
2025-10-06 15:35:09 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 15:35:09 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 15:35:09 [http-nio-8080-exec-1] INFO  c.e.p.controller.OrderController - Creating order for customer ID: 2
2025-10-06 15:35:09 [http-nio-8080-exec-1] INFO  c.e.p.d.s.impl.OrderServiceImpl - Creating order for customer ID: 2
2025-10-06 15:35:09 [http-nio-8080-exec-1] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created with ID: 4
2025-10-06 15:35:09 [http-nio-8080-exec-1] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Publishing order created event for order ID: 4
2025-10-06 15:35:09 [http-nio-8080-exec-1] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Order created event published successfully for order ID: 4
2025-10-06 15:35:09 [http-nio-8080-exec-1] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created successfully for customer ID: 2
2025-10-06 15:35:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@21
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"680faf46-8687-4d19-b9e8-a99c02b51269","orderNumber":"a55cbd26-8c32-4869-9a18-3b8279e9b09c","orderId":4,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":499.90,"createdAt":[2025,10,6,15,35,9,278715000],"customerEmail":"hekp@gmail.com","customerId":2,"shippingAddress":"string","timestamp":"2025-10-06T15:35:09.280911","status":"PENDING","updatedAt":[2025,10,6,15,35,9,278730000]}, headers={__ContentTypeId__=[B@6befd4ee, kafka_offset=21, __KeyTypeId__=[B@491851a3, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=4, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759745109280, kafka_acknowledgment=Acknowledgment for order.created-0@21, __TypeId__=[B@216479db, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:35:09 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@21
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"680faf46-8687-4d19-b9e8-a99c02b51269","orderNumber":"a55cbd26-8c32-4869-9a18-3b8279e9b09c","orderId":4,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":499.90,"createdAt":[2025,10,6,15,35,9,278715000],"customerEmail":"hekp@gmail.com","customerId":2,"shippingAddress":"string","timestamp":"2025-10-06T15:35:09.280911","status":"PENDING","updatedAt":[2025,10,6,15,35,9,278730000]}, headers={__ContentTypeId__=[B@668ad9a1, kafka_offset=21, __KeyTypeId__=[B@2c0cc00b, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=4, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759745109280, kafka_acknowledgment=Acknowledgment for order.created-0@21, __TypeId__=[B@68efc3d5, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:35:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments
2025-10-06 15:35:56 [http-nio-8080-exec-8] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:35:56 [http-nio-8080-exec-8] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:35:56 [http-nio-8080-exec-8] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:35:56 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments
2025-10-06 15:35:56 [http-nio-8080-exec-8] ERROR c.e.p.c.GlobalExceptionHandler - Validation error: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.ecommerce.productorder.payment.dto.response.PaymentResponse> com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest): [Field error in object 'processPaymentRequest' on field 'customerEmail': rejected value [string]; codes [Email.processPaymentRequest.customerEmail,Email.customerEmail,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [processPaymentRequest.customerEmail,customerEmail]; arguments []; default message [customerEmail],[Ljakarta.validation.constraints.Pattern$Flag;@1a411e7d,.*]; default message [Email must be valid]] 
2025-10-06 15:35:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments
2025-10-06 15:35:58 [http-nio-8080-exec-3] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:35:58 [http-nio-8080-exec-3] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:35:58 [http-nio-8080-exec-3] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:35:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments
2025-10-06 15:35:58 [http-nio-8080-exec-3] ERROR c.e.p.c.GlobalExceptionHandler - Validation error: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.ecommerce.productorder.payment.dto.response.PaymentResponse> com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest): [Field error in object 'processPaymentRequest' on field 'customerEmail': rejected value [string]; codes [Email.processPaymentRequest.customerEmail,Email.customerEmail,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [processPaymentRequest.customerEmail,customerEmail]; arguments []; default message [customerEmail],[Ljakarta.validation.constraints.Pattern$Flag;@1a411e7d,.*]; default message [Email must be valid]] 
2025-10-06 15:36:16 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments
2025-10-06 15:36:16 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:36:16 [http-nio-8080-exec-2] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:36:16 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:36:16 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments
2025-10-06 15:36:16 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:36:16 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:36:16 [http-nio-8080-exec-2] INFO  c.e.p.controller.PaymentController - Processing payment for order ID: 4
2025-10-06 15:36:16 [http-nio-8080-exec-2] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing payment for order ID: 4
2025-10-06 15:36:16 [http-nio-8080-exec-2] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Payment created with ID: 691321d4-f47d-4133-8805-9f7af96a9171
2025-10-06 15:36:16 [http-nio-8080-exec-2] INFO  c.e.p.p.s.i.PaymentGatewayServiceImpl - Processing payment through gateway for payment ID: 691321d4-f47d-4133-8805-9f7af96a9171
2025-10-06 15:36:16 [http-nio-8080-exec-2] DEBUG c.e.p.p.s.i.PaymentGatewayServiceImpl - Validating payment method for request: CREDIT_CARD
2025-10-06 15:36:16 [http-nio-8080-exec-2] WARN  c.e.p.p.s.i.PaymentGatewayServiceImpl - Invalid card number: 74846366189087935
2025-10-06 15:36:16 [http-nio-8080-exec-2] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Publishing payment processed event for payment ID: 691321d4-f47d-4133-8805-9f7af96a9171
2025-10-06 15:36:16 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition payment.processed-0 to 10 since the associated topicId changed from null to t5NxQuSTQC2hC3JUcDzeGg
2025-10-06 15:36:16 [http-nio-8080-exec-2] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Payment processed event published successfully for payment ID: 691321d4-f47d-4133-8805-9f7af96a9171
2025-10-06 15:36:16 [http-nio-8080-exec-2] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Payment processed successfully for order ID: 4
2025-10-06 15:36:16 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for payment.processed-0@5
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handlePaymentProcessedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"5f483a9d-7700-493e-8b8d-cff3c19089cd","amount":499.90,"orderId":4,"eventType":"PAYMENT_PROCESSED","serviceName":"product-order-service","transactionId":null,"serviceVersion":"1.0.0","createdAt":[2025,10,6,15,36,16,341034000],"paymentId":"691321d4-f47d-4133-8805-9f7af96a9171","gatewayResponse":null,"customerId":2,"processedAt":[2025,10,6,15,36,16,342538000],"paymentMethod":"CREDIT_CARD","timestamp":"2025-10-06T15:36:16.343175","status":"FAILED","updatedAt":[2025,10,6,15,36,16,341049000]}, headers={__ContentTypeId__=[B@19d9b56b, kafka_offset=5, __KeyTypeId__=[B@4abb3158, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@6306f8bb, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=691321d4-f47d-4133-8805-9f7af96a9171, kafka_receivedTopic=payment.processed, kafka_receivedTimestamp=1759745176359, kafka_acknowledgment=Acknowledgment for payment.processed-0@5, __TypeId__=[B@3fca24bd, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:37:06 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments
2025-10-06 15:37:06 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:37:06 [http-nio-8080-exec-9] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:37:06 [http-nio-8080-exec-9] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:37:06 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments
2025-10-06 15:37:06 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:37:06 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:37:06 [http-nio-8080-exec-9] INFO  c.e.p.controller.PaymentController - Processing payment for order ID: 4
2025-10-06 15:37:06 [http-nio-8080-exec-9] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing payment for order ID: 4
2025-10-06 15:37:06 [http-nio-8080-exec-9] ERROR c.e.p.p.s.impl.PaymentServiceImpl - Error processing payment for order ID: 4
com.ecommerce.productorder.exception.BusinessException: Payment already exists for order ID: 4
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl.processPayment(PaymentServiceImpl.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl$$SpringCGLIB$$0.processPayment(<generated>)
	at com.ecommerce.productorder.controller.PaymentController.processPayment(PaymentController.java:71)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:199)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.controller.PaymentController$$SpringCGLIB$$0.processPayment(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.ecommerce.productorder.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-10-06 15:37:06 [http-nio-8080-exec-9] ERROR c.e.p.c.GlobalExceptionHandler - Business rule violation: Failed to process payment: Payment already exists for order ID: 4
2025-10-06 15:37:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/orders
2025-10-06 15:37:25 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:37:25 [http-nio-8080-exec-4] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:37:25 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:37:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/orders
2025-10-06 15:37:25 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 15:37:25 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.OrderController.createOrder(com.ecommerce.productorder.dto.request.CreateOrderRequest); target is of class [com.ecommerce.productorder.controller.OrderController]
2025-10-06 15:37:25 [http-nio-8080-exec-4] INFO  c.e.p.controller.OrderController - Creating order for customer ID: 2
2025-10-06 15:37:25 [http-nio-8080-exec-4] INFO  c.e.p.d.s.impl.OrderServiceImpl - Creating order for customer ID: 2
2025-10-06 15:37:25 [http-nio-8080-exec-4] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created with ID: 5
2025-10-06 15:37:25 [http-nio-8080-exec-4] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Publishing order created event for order ID: 5
2025-10-06 15:37:25 [http-nio-8080-exec-4] INFO  c.e.p.s.impl.OrderEventPublisherImpl - Order created event published successfully for order ID: 5
2025-10-06 15:37:25 [http-nio-8080-exec-4] INFO  c.e.p.d.s.impl.OrderServiceImpl - Order created successfully for customer ID: 2
2025-10-06 15:37:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@22
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"e3ae293e-5a1d-4f06-b336-4739b17dd026","orderNumber":"c8eacd79-703a-4c4a-8236-bcbcfed505f3","orderId":5,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":499.90,"createdAt":[2025,10,6,15,37,25,85753000],"customerEmail":"hekp@gmail.com","customerId":2,"shippingAddress":"string","timestamp":"2025-10-06T15:37:25.088241","status":"PENDING","updatedAt":[2025,10,6,15,37,25,85771000]}, headers={__ContentTypeId__=[B@63e7f85a, kafka_offset=22, __KeyTypeId__=[B@2394e522, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@9ae54d, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=5, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759745245088, kafka_acknowledgment=Acknowledgment for order.created-0@22, __TypeId__=[B@1e33ff8c, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:37:25 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for order.created-0@22
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl.handleOrderCreatedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.inventory.service.impl.InventoryServiceImpl@5f455d91]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"e3ae293e-5a1d-4f06-b336-4739b17dd026","orderNumber":"c8eacd79-703a-4c4a-8236-bcbcfed505f3","orderId":5,"eventType":"ORDER_CREATED","serviceName":"product-order-service","serviceVersion":"1.0.0","totalAmount":499.90,"createdAt":[2025,10,6,15,37,25,85753000],"customerEmail":"hekp@gmail.com","customerId":2,"shippingAddress":"string","timestamp":"2025-10-06T15:37:25.088241","status":"PENDING","updatedAt":[2025,10,6,15,37,25,85771000]}, headers={__ContentTypeId__=[B@3c891ee6, kafka_offset=22, __KeyTypeId__=[B@27733733, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@4bddb05b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=5, kafka_receivedTopic=order.created, kafka_receivedTimestamp=1759745245088, kafka_acknowledgment=Acknowledgment for order.created-0@22, __TypeId__=[B@42e2c2ab, kafka_groupId=inventory-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:37:34 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments
2025-10-06 15:37:34 [http-nio-8080-exec-5] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: customer
2025-10-06 15:37:34 [http-nio-8080-exec-5] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: customer
2025-10-06 15:37:34 [http-nio-8080-exec-5] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: customer
2025-10-06 15:37:34 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments
2025-10-06 15:37:34 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:37:34 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.processPayment(com.ecommerce.productorder.payment.dto.request.ProcessPaymentRequest); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:37:34 [http-nio-8080-exec-5] INFO  c.e.p.controller.PaymentController - Processing payment for order ID: 5
2025-10-06 15:37:34 [http-nio-8080-exec-5] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing payment for order ID: 5
2025-10-06 15:37:34 [http-nio-8080-exec-5] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Payment created with ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea
2025-10-06 15:37:34 [http-nio-8080-exec-5] INFO  c.e.p.p.s.i.PaymentGatewayServiceImpl - Processing payment through gateway for payment ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea
2025-10-06 15:37:34 [http-nio-8080-exec-5] DEBUG c.e.p.p.s.i.PaymentGatewayServiceImpl - Validating payment method for request: CREDIT_CARD
2025-10-06 15:37:34 [http-nio-8080-exec-5] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Publishing payment processed event for payment ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea
2025-10-06 15:37:34 [http-nio-8080-exec-5] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Payment processed event published successfully for payment ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea
2025-10-06 15:37:34 [http-nio-8080-exec-5] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Payment processed successfully for order ID: 5
2025-10-06 15:37:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for payment.processed-0@6
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl.handlePaymentProcessedEvent(java.util.Map<java.lang.String, java.lang.Object>)]
Bean [com.ecommerce.productorder.notification.service.impl.NotificationServiceImpl@18a9e8db]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2942)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2887)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$57(KafkaMessageListenerContainer.java:2772)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2770)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2622)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2508)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2150)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1505)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1469)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1344)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:402)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:380)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2873)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [java.util.Map] for GenericMessage [payload={"eventId":"985e5b6c-455d-483a-a747-702236e157d7","amount":499.90,"orderId":5,"eventType":"PAYMENT_PROCESSED","serviceName":"product-order-service","transactionId":"TXN_24D344CA","serviceVersion":"1.0.0","createdAt":[2025,10,6,15,37,34,139053000],"paymentId":"b4d4ae5f-6d13-4b1b-bab7-91e1931957ea","gatewayResponse":"Payment authorized successfully","customerId":2,"processedAt":[2025,10,6,15,37,34,789606000],"paymentMethod":"CREDIT_CARD","timestamp":"2025-10-06T15:37:34.791421","status":"COMPLETED","updatedAt":[2025,10,6,15,37,34,139059000]}, headers={__ContentTypeId__=[B@51efef94, kafka_offset=6, __KeyTypeId__=[B@68a10f74, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@6306f8bb, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=b4d4ae5f-6d13-4b1b-bab7-91e1931957ea, kafka_receivedTopic=payment.processed, kafka_receivedTimestamp=1759745254791, kafka_acknowledgment=Acknowledgment for payment.processed-0@6, __TypeId__=[B@54b834b9, kafka_groupId=notification-service}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375)
	... 17 common frames omitted
2025-10-06 15:39:54 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition order.created-0 to 10 since the associated topicId changed from null to cB6v8tXmTj-DlGVmwldBnw
2025-10-06 15:41:11 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-10-06 15:41:11 [http-nio-8080-exec-6] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:41:11 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:41:11 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-10-06 15:41:12 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /swagger-ui/favicon-32x32.png
2025-10-06 15:41:12 [http-nio-8080-exec-8] WARN  c.e.p.config.JwtRequestFilter - JWT token does not begin with Bearer String
2025-10-06 15:41:12 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-06 15:41:12 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /swagger-ui/favicon-32x32.png
2025-10-06 15:41:57 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments/b4d4ae5f-6d13-4b1b-bab7-91e1931957ea/refund?refundAmount=4910
2025-10-06 15:41:57 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 15:41:57 [http-nio-8080-exec-2] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 15:41:57 [http-nio-8080-exec-2] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 15:41:57 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments/b4d4ae5f-6d13-4b1b-bab7-91e1931957ea/refund?refundAmount=4910
2025-10-06 15:41:57 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:41:57 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:41:57 [http-nio-8080-exec-2] INFO  c.e.p.controller.PaymentController - Refunding payment with ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea for amount: 4910
2025-10-06 15:41:57 [http-nio-8080-exec-2] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing refund for payment ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea, amount: 4910
2025-10-06 15:41:57 [http-nio-8080-exec-2] ERROR c.e.p.p.s.impl.PaymentServiceImpl - Error processing refund for payment ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea
com.ecommerce.productorder.exception.BusinessException: Refund amount cannot exceed payment amount
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl.refundPayment(PaymentServiceImpl.java:200)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl$$SpringCGLIB$$0.refundPayment(<generated>)
	at com.ecommerce.productorder.controller.PaymentController.refundPayment(PaymentController.java:176)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:199)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.controller.PaymentController$$SpringCGLIB$$0.refundPayment(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.ecommerce.productorder.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-10-06 15:41:57 [http-nio-8080-exec-2] ERROR c.e.p.c.GlobalExceptionHandler - Business rule violation: Failed to process refund: Refund amount cannot exceed payment amount
2025-10-06 15:42:24 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments/b4d4ae5f-6d13-4b1b-bab7-91e1931957ea/refund?refundAmount=49
2025-10-06 15:42:24 [http-nio-8080-exec-10] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 15:42:24 [http-nio-8080-exec-10] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 15:42:24 [http-nio-8080-exec-10] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 15:42:24 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments/b4d4ae5f-6d13-4b1b-bab7-91e1931957ea/refund?refundAmount=49
2025-10-06 15:42:24 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:42:24 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:42:24 [http-nio-8080-exec-10] INFO  c.e.p.controller.PaymentController - Refunding payment with ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea for amount: 49
2025-10-06 15:42:24 [http-nio-8080-exec-10] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing refund for payment ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea, amount: 49
2025-10-06 15:42:24 [http-nio-8080-exec-10] INFO  c.e.p.p.s.i.PaymentGatewayServiceImpl - Processing refund through gateway for payment ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea
2025-10-06 15:42:25 [http-nio-8080-exec-10] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Publishing payment refunded event for payment ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea
2025-10-06 15:42:25 [http-nio-8080-exec-10] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Payment refunded event published successfully for payment ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea
2025-10-06 15:42:25 [http-nio-8080-exec-10] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Refund processed successfully for payment ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea
2025-10-06 15:42:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments/b4d4ae5f-6d13-4b1b-bab7-91e1931957ea/refund?refundAmount=451
2025-10-06 15:42:37 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 15:42:37 [http-nio-8080-exec-4] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 15:42:37 [http-nio-8080-exec-4] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 15:42:37 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments/b4d4ae5f-6d13-4b1b-bab7-91e1931957ea/refund?refundAmount=451
2025-10-06 15:42:37 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:42:37 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:42:37 [http-nio-8080-exec-4] INFO  c.e.p.controller.PaymentController - Refunding payment with ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea for amount: 451
2025-10-06 15:42:37 [http-nio-8080-exec-4] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing refund for payment ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea, amount: 451
2025-10-06 15:42:37 [http-nio-8080-exec-4] INFO  c.e.p.p.s.i.PaymentGatewayServiceImpl - Processing refund through gateway for payment ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea
2025-10-06 15:42:39 [http-nio-8080-exec-4] ERROR c.e.p.p.s.impl.PaymentServiceImpl - Error processing refund for payment ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea
java.lang.IllegalArgumentException: Refund amount cannot exceed remaining refundable amount: 450.90
	at com.ecommerce.productorder.payment.domain.entity.Payment.refundPayment(Payment.java:164)
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl.refundPayment(PaymentServiceImpl.java:207)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.payment.service.impl.PaymentServiceImpl$$SpringCGLIB$$0.refundPayment(<generated>)
	at com.ecommerce.productorder.controller.PaymentController.refundPayment(PaymentController.java:176)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:199)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.ecommerce.productorder.controller.PaymentController$$SpringCGLIB$$0.refundPayment(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.ecommerce.productorder.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-10-06 15:42:39 [http-nio-8080-exec-4] ERROR c.e.p.c.GlobalExceptionHandler - Business rule violation: Failed to process refund: Refund amount cannot exceed remaining refundable amount: 450.90
2025-10-06 15:42:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/v1/payments/b4d4ae5f-6d13-4b1b-bab7-91e1931957ea/refund?refundAmount=450.90000
2025-10-06 15:42:50 [http-nio-8080-exec-7] INFO  c.e.p.c.CustomUserDetailsService - Loading user details for username: admin
2025-10-06 15:42:50 [http-nio-8080-exec-7] DEBUG c.e.p.d.s.impl.CustomerServiceImpl - Retrieving customer entity with username: admin
2025-10-06 15:42:50 [http-nio-8080-exec-7] INFO  c.e.p.c.CustomUserDetailsService - Found customer in database: admin
2025-10-06 15:42:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/v1/payments/b4d4ae5f-6d13-4b1b-bab7-91e1931957ea/refund?refundAmount=450.90000
2025-10-06 15:42:50 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:42:50 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.ecommerce.productorder.controller.PaymentController.refundPayment(java.lang.String,java.lang.String); target is of class [com.ecommerce.productorder.controller.PaymentController]
2025-10-06 15:42:50 [http-nio-8080-exec-7] INFO  c.e.p.controller.PaymentController - Refunding payment with ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea for amount: 450.90000
2025-10-06 15:42:50 [http-nio-8080-exec-7] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Processing refund for payment ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea, amount: 450.90000
2025-10-06 15:42:50 [http-nio-8080-exec-7] INFO  c.e.p.p.s.i.PaymentGatewayServiceImpl - Processing refund through gateway for payment ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea
2025-10-06 15:42:51 [http-nio-8080-exec-7] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Publishing payment refunded event for payment ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea
2025-10-06 15:42:51 [http-nio-8080-exec-7] INFO  c.e.p.p.s.i.PaymentEventPublisherImpl - Payment refunded event published successfully for payment ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea
2025-10-06 15:42:51 [http-nio-8080-exec-7] INFO  c.e.p.p.s.impl.PaymentServiceImpl - Refund processed successfully for payment ID: b4d4ae5f-6d13-4b1b-bab7-91e1931957ea
